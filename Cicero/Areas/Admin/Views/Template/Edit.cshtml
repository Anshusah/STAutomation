@using Cicero.Service.Services
@using Cicero.Service.Models
@using Cicero.Service.Helpers
@using static Cicero.Service.Enums
@model TemplateViewModel
@inject Utils _Utils
@inject ITemplateService _templateService
@inject Permission Permission
@inject IFormBuilderService _formBuilderService

@{

    ViewBag.Title = Utils.CreateOrEdit(Model) + " Template";
    List<SelectListItem> Forms = _formBuilderService.FormList(_Utils.GetTenantFromSession()).Where(x => x.Disabled == false).ToList();
    List<SelectListItem> Forms1 = _formBuilderService.FormList(_Utils.GetTenantFromSession()).Where(x => x.Disabled == false).ToList();
    Forms.Add(new SelectListItem()
    {
        Value = "0",
        Text = "Database"
    });

}
<div class="page-wrapper page-email-template">
    <div class="page-header">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb bg-none p-0">
                <li class="breadcrumb-item">
                    <a href="@Url.Content("~/admin"+_Utils.GetTenantForUrl(false)+".html")">Home</a>
                </li>
                <li class="breadcrumb-item">
                    <a href="@Url.Content("~/admin"+_Utils.GetTenantForUrl(false)+"/templates.html")">Templates</a>
                </li>
                <li class="breadcrumb-item active" aria-current="page">@Utils.CreateOrEdit(Model) Template</li>
            </ol>
        </nav>
        <div class="page-header__main">
            <h3 class="page-title">Manage Templates</h3>
        </div>
    </div>
    <div class="page-content">
        <div class="page-container grid-horizontal-viewport">
            <div class="page-aside">
                <div class="aside-wrapper">
                    <div class="aside-header">
                        <h4>Manage Templates</h4>
                        <p>
                            This section helps you to add/edit or delete Templates such as email and pdf attachments. Please make changes on required fields and Click on "Save Change" buttons.
                        </p>
                    </div>
                </div>
            </div>
            <div class="page-body grid">
                <div class="template-type">
                    <div class="template-type__content">
                        <div class="template-type__header">
                            <h5 class="template-type__title">Available Merge Fields</h5>
                            <small class="template-type__note text-muted">Tips: You can copy and paste or directly drag and drop a field into the editor.</small>
                        </div>
                        <div class="template-type__body">
                            <div class="template-type__elements">
                                <div class="merge-fields-group">
                                    <div class="merge-field-header" data-toggle="collapse" data-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                                        <h6>Fields for text editor</h6>
                                        <div class="field-toggle">
                                            <i class="ri-arrow-down-s-line"></i>
                                        </div>
                                    </div>
                                    <div id="collapseOne" class="collapse show" aria-labelledby="headingOne">
                                        <div class="merge-fields-draggable" id="TemplateField">
                                            <div class="merge-fields-no-data alert alert-warning">Please select "Template Type" first.</div>
                                            @*<li class="field-ui-draggable">User Full Name <span class="badge badge-primary badge-pill">Copy</span></li>
                                                <li class="field-ui-draggable">Reset Link <span class="badge badge-primary badge-pill">Copy</span></li>*@
                                        </div>
                                    </div>
                                </div>

                            </div>

                        </div>

                        <div class="template-type__footer">
                            <button class="btn btn-outline-secondary btn-block addField" id="addField-btn"><i class="ri-add-line mr-2"></i>Add New Field</button>
                            @*<button class="btn btn-outline-primary moreField">Select More</button>*@
                        </div>
                    </div>
                </div>
                <form action="@Url.Content("~/admin"+_Utils.GetTenantForUrl(false)+"/template/"+_Utils.EncryptId(Model.Id)+"/edit.html")" method="post" class="form-wrapper">
                    <div class="form-body">
                        @*@Html.AntiForgeryToken()*@
                        <div class="status"></div>
                        <div asp-validation-summary="All" role="alert"></div>
                        <input type="hidden" name="Id" value="@Model.Id" />
                        <input type="hidden" asp-for="CreatedAt" />
                        <input type="hidden" asp-for="@Model.Version" />
                        <div class="form-group">
                            <label asp-for="Title"></label>
                            <input asp-for="Title" class="form-control" />
                            <span asp-validation-for="Title"></span>
                        </div>
                        <div class="form-row">
                            <div class="col-lg-12">
                                <div class="form-group">
                                    <label for="Subject">Subject</label>
                                    <input class="form-control" asp-for="Subject" />
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group">
                                    <label for="TemplateType">Template Type</label>
                                    <select id="TemplateType" name="TemplateType" class="custom-select">
                                        <option value="0">Select Option</option>
                                        @if (Model.TemplateType != null)
                                        {
                                            <option value="1" selected="@(Model.TemplateType == Convert.ToInt16(EmailTemplateType.AccountNotification))">Account Notification</option>
                                            <option value="2" selected="@(Model.TemplateType == Convert.ToInt16(EmailTemplateType.ClaimNotification))">Claim Notification</option>
                                        }
                                        else
                                        {
                                            <option value="1">Account Notification</option>
                                            <option value="2">Claim Notification</option>
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group">
                                    <label for="RecipientType">Recipient Type</label>
                                    <select asp-for="RecipientType" class="custom-select">
                                        @*<option value="0">Select Option</option>*@
                                        <option value="1" selected="@(Model.RecipientType == Convert.ToInt16(RecipientType.CaseOwner))">Case Owner</option>
                                        <option value="2" selected="@(Model.RecipientType == Convert.ToInt16(RecipientType.CaseField))">From Case Data</option>
                                        <option value="3" selected="@(Model.RecipientType == Convert.ToInt16(RecipientType.AssignedUser))">Assigned User</option>
                                        <option value="4" selected="@(Model.RecipientType == Convert.ToInt16(RecipientType.EmailGroup))">Email Group</option>
                                        <option value="5" selected="@(Model.RecipientType == Convert.ToInt16(RecipientType.UsersInRole))">Users In Role</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group">
                                    <label for="FormId">Template For</label>
                                    <select id="FormId" name="FormId" class="custom-select">
                                        <option value="0">General</option>
                                        @foreach (SelectListItem selectListItem in Forms1)
                                        {
                                            if (Model.FormId == Convert.ToInt32(selectListItem.Value))
                                            {
                                                <option value="@selectListItem.Value" selected>@selectListItem.Text</option>
                                            }

                                            else
                                            {
                                                <option value="@selectListItem.Value">
                                                    @selectListItem.Text
                                                </option>
                                            }
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group">
                                    <label for="EmailGroup">Email Group</label>
                                    <select asp-for="EmailGroupId" class="custom-select">
                                        <option value="0">Please Select</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group">
                                    <label for="Role">Role</label>
                                    <select asp-for="RoleId" class="custom-select">
                                        <option value="0">Please Select</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="col-lg-6">
                                <div class="form-group">
                                    <label for="RecipientDatabaseTable">Recipient Database Table</label>
                                    <select asp-for="RecipientDatabaseTable" class="custom-select">
                                        <option value="0">Please Select</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group">
                                    <label for="RecipientField">Recipient Field</label>
                                    <select asp-for="RecipientField" class="custom-select">
                                        <option value="0">Please Select</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="textarea-container merge-field-droppable">
                                <label asp-for="Content"></label>
                                <textarea asp-for="Content" class="form-control" rows="13"></textarea>
                                <span asp-validation-for="Content"></span>
                            </div>
                        </div>
                    </div>
                    <div class="form-footer">
                        @if (Model.Id != 0 && Permission.Can(UserCan.Update_Article))
                        {
                            <button type="submit" class="btn btn-primary" id="save-btn">Update Changes</button>
                        }
                        else if (Permission.Can(UserCan.Update_Article))
                        {
                            <button type="submit" class="btn btn-primary" id="save-btn">Save Changes</button>
                        }
                        <a class="btn btn-outline-secondary btn-back" href="@Url.Content("~/admin"+_Utils.GetTenantForUrl(false)+"/templates.html")">Go back </a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<div class="modal fade bd-example-modal-sm" tabindex="-1" role="dialog" id="add-NewField" aria-labelledby="mySmallModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add New Field</h5>
            </div>
            <div class="modal-body">
                <form id="Field">
                    <p class="help-text">Match the field with exisiting table fields.</p>
                    <div class="form-row">
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Field Name</label>
                                <input type="text" name="FieldName" id="FieldName" class="form-control" />
                                <input hidden id="Id" name="Id" value="0" />
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Template Type</label>
                                <select name="TempType" id="TempType" class="form-control">

                                    <option value="1">Account Notification</option>
                                    <option value="2">Claim Notification</option>
                                </select>
                            </div>
                        </div>

                    </div>
                    <div class="form-row">
                        <div class="col-lg-12">
                            <p class="text-center font-weight-bold"><u>Match With</u></p>
                        </div>
                    </div>
                    <div class="form-row module-content">
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Form</label>
                                <br />
                                <label id="FormLabel"></label>
                                <input type="text" id="FormName" name="FormName" hidden />
                                @*<select name="FormName" id="FormName" class="form-control" readonly>
                                        <option value="">Please Select</option>
                                        @foreach (var item in Forms)
                                        {
                                            <option value="@item.Value">@item.Text</option>
                                        }

                                    </select>*@
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Table</label>
                                <select name="DbSourceTable" id="SourceTable" class="form-control">
                                    <option value="">Please Select Form first</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="form-group">
                                <label>Field</label>
                                <select name="DbSourceField" id="SourceField" class="form-control">
                                    <option value="">Please Select Form first</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </form>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="SaveField" data-create>Create</button>
                <button type="button" class="btn btn-primary" id="UpdateField" data-update style="display:none">Update</button>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" tabindex="-1" role="dialog" id="delete-warning" aria-hidden="true">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Confirm Delete?</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <p>
                    Are you sure? Do you want to delete this Field?
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal" id="ConfirmDelete">Confirm</button>
            </div>

        </div>
    </div>
</div>
@section Scripts{
    @*<script src="https://cloud.tinymce.com/stable/tinymce.min.js"></script>*@
    <script src="~/lib/tinymce/js/tinymce/tinymce.min.js">
    </script>
    <script type="text/javascript">
        /*tinymce.init({
            selector: '#Content',
            menubar:false
        });*/
        tinymce.init({
            theme: "modern",
            //valid_elements : "[id|class|style|title|dir<ltr?rtl|lang|xml::lang|onclick|ondblclick|onmousedown|onmouseup|onmouseover|onmousemove|onmouseout|onkeypress|onkeydown|onkeyup],a[rel|rev|charset|hreflang|tabindex|accesskey|type|name|href|target|title|class|onfocus|onblur],strong/b,em,i,strike,u,#p,-ol[type|compact],-ul[type|compact],-li,br,img[longdesc|class|usemap|src|border|alt=|title|hspace|vspace|width|height|align],-sub,-sup,-blockquote,-table[border=0|cellspacing|cellpadding|width|frame|rules|height|align|summary|bgcolor|background|bordercolor],-tr[rowspan|width|height|align|valign|bgcolor|background|bordercolor],tbody,thead,tfoot,#td[colspan|rowspan|width|height|align|valign|bgcolor|background|bordercolor|scope],#th[colspan|rowspan|width|height|align|valign|scope],caption,-div,span[color|style|size],-code,-pre,address,-h1,-h2,-h3,-h4,-h5,-h6,hr[size|noshade],-font[face|size|color],dd,dl,dt,cite,abbr,acronym,del[datetime|cite],ins[datetime|cite],object[classid|width|height|codebase|*],param[name|value|_value],embed[type|width|height|src|*],script[src|type],map[name],area[shape|coords|href|alt|target],bdo,button,col[align|char|charoff|span|valign|width],colgroup[align|char|charoff|span|valign|width],dfn,fieldset,form[action|accept|accept-charset|enctype|method],input[accept|alt|checked|disabled|maxlength|name|readonly|size|src|type|value],kbd,label[for],legend,noscript,optgroup[label|disabled],option[disabled|label|selected|value],q[cite],samp,select[disabled|multiple|name|size],small,textarea[cols|rows|disabled|name|readonly],tt,var,big,iframe[width|src|height|frameborder|name|readonly|gesture|allow|allowfullscreen],div[class|id],h1[class|id],h2[class|id],h3[class|id],h4[class|id],h5[class|id],h6[class|id],p[class|id]",
            valid_elements: "[id|class|style|title|dir<ltr?rtl|lang|xml::lang|onclick|ondblclick|onmousedown|onmouseup|onmouseover|onmousemove|onmouseout|onkeypress|onkeydown|onkeyup],a[style|rel|rev|charset|hreflang|tabindex|accesskey|type|name|href|target|title|class|onfocus|onblur],strong/b,em,i,strike,u,#p,-ol[type|compact],-ul[type|compact],-li,br,img[longdesc|class|usemap|src|border|alt=|title|hspace|vspace|width|height|align],-sub,-sup,-blockquote,-table[style|border=0|cellspacing|cellpadding|width|frame|rules|height|align|summary|bgcolor|background|bordercolor],-tr[style|rowspan|width|height|align|valign|bgcolor|background|bordercolor],tbody[style],thead[style],tfoot[style],#td[style|colspan|rowspan|width|height|align|valign|bgcolor|background|bordercolor|scope],#th[style|colspan|rowspan|width|height|align|valign|scope],caption,-div,span[color|style|size],-code,-pre,address,-h1,-h2,-h3,-h4,-h5,-h6,hr[size|noshade],-font[face|size|color],dd,dl,dt,cite,abbr,acronym,del[datetime|cite],ins[datetime|cite],object[classid|width|height|codebase|*],param[name|value|_value],embed[type|width|height|src|*],script[src|type],map[name],area[shape|coords|href|alt|target],bdo,button[style],col[align|char|charoff|span|valign|width],colgroup[align|char|charoff|span|valign|width],dfn,fieldset,form[action|accept|accept-charset|enctype|method],input[accept|alt|checked|disabled|maxlength|name|readonly|size|src|type|value],kbd,label[for],legend,noscript,optgroup[label|disabled],option[disabled|label|selected|value],q[cite],samp,select[disabled|multiple|name|size],small,textarea[cols|rows|disabled|name|readonly],tt,var,big,iframe[width|src|height|frameborder|name|readonly|gesture|allow|allowfullscreen],div[class|id|style],h1[class|id|style],h2[class|id|style],h3[class|id|style],h4[class|id|style],h5[class|id|style],h6[class|id|style],p[class|id|style]",
            selector: "#Content",
            //skin: 'light',
            height: "380",
            //resize: "both",
            //theme_advanced_resizing : true,
            //inline: false,
            //statusbar: false,


            menubar: false,
            plugins: [
                "link image table Cicerofilemanager code textcolor colorpicker lists"
            ],
            toolbar: "bold italic bullist numlist outdent indent forecolor backcolor | undo redo | styleselect | link  table Cicerofilemanager | code ",
            file_browser_callback: "Cicerofilemanager",
            upload_path: '/admin/media/pick.html',
            theme_advanced_buttons1: "Cicerofilemanager",
            document_base_url: '@Url.Content("/")',
            //relative_urls : false,
            //remove_script_host : false,
            convert_urls: false,
        });

        jQuery(document).ready(function () {
            $.ajax({
                type: "POST",
                dataType: "json",
                url: "@Url.Content("~/admin"+_Utils.GetTenantForUrl(false) + "/template/load_template_options")",
                    data: { },
                    success: function (d) {
                        if (d != null) {
                            $.each(d, function (i, v) {
                                $("#subragation-values").append(", " + v)

                            });
                        }
                    }
            });
        });
    </script>
    <script type="text/javascript">
        var test = true;
        jQuery(function () {


            initSortable();
            //    $(".merge-fields-draggable .field-ui-draggable").draggable({
            //        helper: "none",
            //        cancel: false,
            //        connectToSortable: ".merge-fields-draggable",
            //        handle: ".drag-icon",

            //    }).disableSelection();

            //    $(".merge-field-droppable").droppable({
            //        hoverClass: 'ui-state-active',
            //        accept: function (event, ui) {

            //            console.log("helllo");
            //            return true;
            //        },

        })

        function initSortable() {
            $(".merge-fields-draggable").sortable({
                revert: false,
                update: function (e, ui) {
                    // debugger;
                    test = false;
                    console.log("update");
                },
                stop: function (e, ui) {
                    // debugger;
                    if (test == true) {
                        if (ui.position.left >= 250) {
                            var copyText = ui.item.attr("data-val");
                            var text = copyText.split(",")[0];

                            tinymce.activeEditor.execCommand('mceInsertContent', false, text);
                        }

                    }
                    console.log("stop");
                    test = true;
                }
            }).disableSelection();
        }
    </script>
    @*
        script for update Delete Fields
    *@
    <script>

    </script>
    <script>

        function CreateOrUpdateField(isEdit) {
            var obj = {
                Id: parseInt($("#Id").val()),
                FieldName: $("#FieldName").val(),
                Alias: "None",
                DbSourceTable: $("#SourceTable").val(),
                DbSourceField: $("#SourceField").val(),
                TemplateType: parseInt($("#TempType").val()),
                TenantId: parseInt(0),
                FormId: parseInt($("#FormName").val()),
                isDeleted: false
            };
            // var data1 = JSON.stringify(obj);

            checkfieldName(obj.FieldName, obj.TemplateType, isEdit, function (e) {
                if (e == true) {
                    $.ajax({
                        type: "POST",
                        url: '/admin/template/updatefield',
                        data: obj,
                        dataType: "json",
                        success: function (response) {

                            if (response == true) {
                                toastr.success("Field saved successfully.", "Email Template")
                                $("#add-NewField").modal('hide');
                                $("#field").trigger("reset");
                                $("[name='TemplateType']").trigger('change');
                            }
                            else {
                                toastr.error("Field couldn't be saved.", "Email Template")
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            console.log(textStatus);
                            console.log(errorThrown);
                            console.log(XMLHttpRequest);
                            alert("some error");
                        }
                    });
                }

            })

        }
        function checkfieldName(str,temp, isEdit, callback) {
            if (isEdit) {
                return callback(true);
            }
            if (str != "") {
                $.ajax({
                    async: false,
                    type: "POST",
                    url: '/admin/template/CheckFieldName',
                    data: { Field: str,Id:temp},
                    dataType: "json",
                    success: function (response) {
                        if (response == false) {
                            toastr.error("Same Field Name already exist.", "Email Template")

                            return callback(false);
                        }
                        else {
                            return callback(true);
                        }
                    },
                    error: function (response) {
                        return callback(false);
                    }
                });
            }
            else {
                toastr.error("Enter Field Name.", "Email Template");
            }


        }
        $("[name='TemplateType']").on("change", function () {
            var val = $(this).val();
            var formval = $("#FormId").val();
            if (val != "0") {
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url: "@Url.Content("~/admin"+_Utils.GetTenantForUrl(false) + "/template/load_fields")",
                    data: { type: val, formid: formval },
                    success: function (result) {
                        console.log(result);
                        $("#TemplateField").html("");
                        $.each(result, function (i, v) {
                            console.log(i);
                            if (parseInt(i) > 0) {
                                $("#TemplateField").append("<div class='field-ui-draggable "+v.class +"' data-val='" + v.alias + "," + i + "'><span class='drag-icon'></span><div class='field-text'>" + v.name + "<u class='field-text-label template-type-source'>"+v.source+"</u></div><div class='field-actions'><span class='field-icon copy-field' title='copy'><span class='badge badge-primary badge-pill'>Copy</span></span>"
                                    + "<span class='field-icon edit-field' title='edit'><i class='ri-edit-2-line'></i></span>"
                                    +"<span class='field-icon delete-field' title='delete'><i class='ri-close-circle-fill'></i></span></div></div>");
                            }
                            else {
                                $("#TemplateField").append("<div class='field-ui-draggable " + v.class + "' data-val='" + v.alias + "," + i + "'><span class='drag-icon'></span><div class='field-text'>" + v.name + "<u class='field-text-label template-type-source'>" + v.source +"</u></div><div class='field-actions'><span class='field-icon copy-field' title='copy'><span class='badge badge-primary badge-pill'>Copy</span></span>"
                                    + "</div></div>");
                            }

                        });
                        copyField();
                        deleteField();
                        editField();
                        initSortable();
                    }
                });
            }
            else {
                $("#TemplateField").html("");
                    $("#TemplateField").append("<div class='merge-fields-no-data alert alert-warning'>Please select \"Template Type\" first.</div>");
            }

        });

        $(function () {
            if ($("[name='TemplateType']").val() != "0") {
                $("[name='TemplateType']").trigger('change');
            }
            $("[name='FormName']").on("change", function () {
                var form = $(this).val();
                var isItForm;
                if (form != 0) {
                    isItForm = true;
                }
                else {
                    isItForm = false;
                }
                if (form != "") {
                    $.ajax({
                        async: false,
                        type: "POST",
                        url: '/admin/template/loadTablesForFields',
                        data: { isForm: isItForm, formId: form },
                        dataType: "json",
                        success: function (response) {

                            if (response.length > 0) {
                                var typeSelect = $("[name='DbSourceTable']");
                                typeSelect.empty();
                                typeSelect.append($('<option/>', {
                                    value: null,
                                    text: "Please select Table"
                                }));

                                for (i = 0; i < response.length; i++) {
                                    typeSelect.append($('<option/>', {
                                        value: response[i],
                                        text: response[i]
                                    }));
                                }
                                var typeSelect = $("[name='DbSourceField']");
                                typeSelect.empty();
                                typeSelect.append($('<option/>', {
                                    value: null,
                                    text: "Please select Field"
                                }));
                            }
                        },
                        error: function (response) {
                        }
                    });
                }

            });
            $("[name='DbSourceTable']").on("change", function () {
                var selectedTable = $(this).val();
                var form = $("[name='FormName']").val();
                var isItForm;
                if (form != 0) {
                    isItForm = true;
                }
                else {
                    isItForm = false;
                }
                if (selectedTable != "") {
                    $.ajax({
                        async: false,
                        type: "POST",
                        url: '/admin/template/loadFields',
                        data: { table: selectedTable, isForm: isItForm, formId: form },
                        dataType: "json",
                        success: function (response) {

                            if (response.length > 0) {
                                var typeSelect = $("[name='DbSourceField']");
                                typeSelect.empty();
                                typeSelect.append($('<option/>', {
                                    value: null,
                                    text: "Please select Field"
                                }));

                                for (i = 0; i < response.length; i++) {
                                    typeSelect.append($('<option/>', {
                                        value: response[i],
                                        text: response[i]
                                    }));
                                }
                            }
                        },
                        error: function (response) {
                        }
                    });
                }

            });
            var timer, value;
            $("[name='FieldName']").on("keyup", function () {
                clearTimeout(timer);
                var str = $(this).val();
                var temp = $("[name='TempType']").val();
                if (str.length > 2 && value != str) {
                    timer = setTimeout(function () {
                        checkfieldName(str,temp,false, function () {

                        });
                    },1000);
                }

            });
            $("[name='TempType']").on("change", function () {
                clearTimeout(timer);
                var temp = $(this).val();
                var str = $("[name='FieldName']").val();
                if (str.length > 2 && value != str) {
                    timer = setTimeout(function () {
                        checkfieldName(str, temp, false, function () {

                        });
                    }, 1000);
                }

            });
            $("#SaveField").on("click", function () {
                CreateOrUpdateField(false);
            });

            $("#UpdateField").on("click", function () {
                CreateOrUpdateField(true);
            });

            $("#ConfirmDelete").on("click", function () {
                id = $(this).attr("data-val");
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url: "/admin/template/deleteField",
                    data: { fieldId: id },
                    success: function (result) {
                        if (result == true) {
                            toastr.success("Field deleted successfully", "Email Template");
                            $("[name='TemplateType']").trigger('change');
                        }
                        else {
                            toastr.error("Couldn't be deleted. Please try again", "Email Template");
                        }
                    },
                    error: function (result) {

                    }
                });
            });


        });
        function deleteField() {
            $(".delete-field").on("click", function () {
                var text = $(this).parent().parent(".field-ui-draggable").attr("data-val");
                var id = text.split(",")[1];
                $("#ConfirmDelete").attr("data-val", id);
                $("#delete-warning").modal('show');
            });
        }

        function editField() {
            $(".edit-field").on("click", function () {
                var text = $(this).parent().parent(".field-ui-draggable").attr("data-val");
                var id = text.split(",")[1];
                $("#add-NewField").find(".modal-title").html("<h5>Update Field</h5>");
                 $.ajax({
                    type: "GET",
                    dataType: "json",
                    url: "/admin/template/getField",
                    data: { fieldId: id },
                     success: function (result) {
                        $("#Id").val(result.id);
                        $("#FieldName").val(result.fieldName);
                        $("#FieldName").attr("disabled", "disabled");
                        $("#TempType").val(result.templateType);
                        //$("#FormName").val(result.formId);
                        //$("#FormName").trigger("change");
                        $("#UpdateField").removeAttr("style");
                        $("#SaveField").attr("style", "display:none;");
                        $("#FormName").val($("#FormId").val());
                        $("#FormName").trigger("change");
                        $("#SourceTable").val(result.dbSourceTable);
                        $("#SourceTable").trigger("change");
                        $("#SourceField").val(result.dbSourceField);
                        $("#FormLabel").html('<b>' + $("#FormId option:selected").text() + '</b>');
                        $("#add-NewField").modal("show");
                    },
                    error: function (result) {

                    }
                });
            });
        }
        function copyField() {
            $(".copy-field").on("click", function () {
                var copyText = $(this).parent().parent(".field-ui-draggable").attr("data-val");
                var text = copyText.split(",")[0];
                var $temp = $("<input>");
                $("body").append($temp);
                $temp.val(text).select();
                document.execCommand("copy");
                $temp.remove();
                toastr.info("Field '" + text + "' is copied, use Paste command to use the field", "Email Template");

            });
        }
        $(".addField").on("click", function () {

            $("#add-NewField").find(".modal-title").html("<h5>Create New Field</h5>");
            $("#UpdateField").attr("style","display:none");
            $("#SaveField").removeAttr("style");
            $("#FormName").val($("#FormId").val());
            $("#FormName").trigger("change");
            $("#FormLabel").html('<b>' + $("#FormId option:selected").text() + '</b>');
            $("#add-NewField").modal("show");
        });

         function MailFieldReset() {
            $("#Id").val(0);
            $("#FieldName").val("");
            $("#FieldName").removeAttr("disabled");
            $("#TempType").val("1");
            $("#FormName").val("");
            $("#FormName").trigger("change");
            $("#SourceTable").val("");
            $("#SourceTable").trigger("change");
            $("#SourceField").val("");
            $("#FormName").val("");
            $("#FormLabel").html("");
        }
        $("#add-NewField").on("hide.bs.modal", function () {
            MailFieldReset();
        });

    </script>


    <!--script for recipient-->
    <script>
        $("#save-btn").on("click", function (e) {
            if ($("#RecipientType").val() == "2" && $("#RecipientDatabaseTable").val() == "0" && $("#RecipientField").val() == "0") {
                e.preventDefault();
                if ($("#RecipientDatabaseTable").val() == "0") {
                    toastr.error("Please select Database Table.", "Email Template");
                }
                else if ($("#RecipientField").val() == "0") {
                    toastr.error("Please select Recipient Field.", "Email Template");
                }
                else {
                    toastr.error("Please select all Fields.", "Email Template");
                }
            }
            //else {

            //}
        });

        $(document).ready(function () {
            $("#RecipientType").trigger("change");
            $("#FormId").trigger("change");
            $("#RecipientDatabaseTable").val("@Model.RecipientDatabaseTable");
            $("#RecipientDatabaseTable").trigger("change");
            $("#RecipientField").val("@Model.RecipientField");
            $("#RoleId").val("@Model.RoleId");
            $("#EmailGroupId").val("@Model.EmailGroupId");
            valueChecker();
        });

        $("#RecipientType").on("change", function () {
            resetRecipient();
            switch ($("#RecipientType").val()) {
                case "2":
                    if ($("#FormId").val() != "0") {
                        //$("#RecipientForm").parent().show();
                        $("#RecipientDatabaseTable").parent().show();
                        $("#RecipientField").parent().show();
                    }
                    else {
                        //$("#RecipientForm").parent().hide();
                        $("#RecipientDatabaseTable").parent().hide();
                        $("#RecipientField").parent().hide();

                    }
                    $("#RoleId").parent().parent().hide();
                    $("#EmailGroupId").parent().parent().hide();
                    break;
                case "4":
                    $("#EmailGroupId").parent().parent().show();

                    $("#RoleId").parent().parent().hide();
                    $("#RecipientDatabaseTable").parent().hide();
                    $("#RecipientField").parent().hide();

                    $.ajax({
                        async: false,
                        type: "GET",
                        url: '/admin/template/getJsonEmailGroups',
                        data: { },
                        dataType: "json",
                        success: function (response) {

                            if (response.length > 0) {
                                var typeSelect = $("#EmailGroupId");
                                typeSelect.empty();
                                typeSelect.append($('<option/>', {
                                    value: "0",
                                    text: "Please select Field"
                                }));

                                for (i = 0; i < response.length; i++) {
                                    typeSelect.append($('<option/>', {
                                        value: response[i].value,
                                        text: response[i].text
                                    }));
                                }
                            }
                        },
                        error: function (response) {
                        }
                    });

                    break;
                case "5":
                    $("#RoleId").parent().parent().show();

                    $("#EmailGroupId").parent().parent().hide();
                    $("#RecipientDatabaseTable").parent().hide();
                    $("#RecipientField").parent().hide();

                    $.ajax({
                        async: false,
                        type: "GET",
                        url: '/admin/template/getRoles',
                        data: { },
                        dataType: "json",
                        success: function (response) {

                            if (response.length > 0) {
                                var typeSelect = $("#RoleId");
                                typeSelect.empty();
                                typeSelect.append($('<option/>', {
                                    value: "0",
                                    text: "Please select Field"
                                }));

                                for (i = 0; i < response.length; i++) {
                                    typeSelect.append($('<option/>', {
                                        value: response[i].value,
                                        text: response[i].text
                                    }));
                                }
                            }
                        },
                        error: function (response) {
                        }
                    });

                    break;
                default:
                    //$("#RecipientForm").parent().hide();
                    $("#RecipientDatabaseTable").parent().hide();
                    $("#RecipientField").parent().hide();
                    $("#RoleId").parent().parent().hide();
                    $("#EmailGroupId").parent().parent().hide();
            }

            //if ($("#RecipientType").val() == "2" && $("#FormId").val() != "0") {
            //    //$("#RecipientForm").parent().show();
            //    $("#RecipientDatabaseTable").parent().show();
            //    $("#RecipientField").parent().show();
            //}
            //else if ($("#RecipientType").val() == "4") {

            //}
            //else if ($("#RecipientType").val() == "5") {

            //}
            //else {
            //    resetRecipient();
            //    //$("#RecipientForm").parent().hide();
            //    $("#RecipientDatabaseTable").parent().hide();
            //    $("#RecipientField").parent().hide();
            //}
        });

        $("#FormId").on("change", function () {
            $("[name='TemplateType']").trigger('change');

            //resetRecipient();
            let form = $(this).val();

            if (form == "0") {
                $("#addField-btn").prop("disabled", true);
            }
            else{
                $("#addField-btn").prop("disabled", false);
            }
            $("#FormName").val(form);

            let isItForm;
            if (form != 0) {
                isItForm = true;
            }
            else {
                isItForm = false;
            }
            if (form != "0") {
                if ($("#RecipientType").val() != "2") {
                    $("#RecipientDatabaseTable").parent().hide();
                    $("#RecipientField").parent().hide();
                } else {
                    $("#RecipientDatabaseTable").parent().show();
                    $("#RecipientField").parent().show();
                }

                $.ajax({
                    async: false,
                    type: "POST",
                    url: '/admin/template/loadTablesForFields',
                    data: { isForm: isItForm, formId: form },
                    dataType: "json",
                    success: function (response) {

                        if (response.length > 0) {
                            var typeSelect = $("#RecipientDatabaseTable");
                            typeSelect.empty();
                            typeSelect.append($('<option/>', {
                                value: "0",
                                text: "Please select Table"
                            }));

                            for (i = 0; i < response.length; i++) {
                                typeSelect.append($('<option/>', {
                                    value: response[i],
                                    text: response[i]
                                }));
                            }

                            var typeSelect = $("#RecipientField");
                            typeSelect.empty();
                            typeSelect.append($('<option/>', {
                                value: "0",
                                text: "Please select Field"
                            }));
                        }
                    },
                    error: function (response) {
                    }
                });
            }
            else {
                $("#RecipientDatabaseTable").parent().hide();
                $("#RecipientField").parent().hide();
            }

        });

        $("#RecipientDatabaseTable").on("change", function () {
            //resetRecipient();
            var selectedTable = $(this).val();
            var form = $("#FormId").val();
            var isItForm;
            if (form != 0) {
                isItForm = true;
            }
            else {
                isItForm = false;
            }
            if (form != 0 && selectedTable != "" && selectedTable != "0" && selectedTable != null) {
                $.ajax({
                    async: false,
                    type: "POST",
                    url: '/admin/template/loadFields',
                    data: { table: selectedTable, isForm: isItForm, formId: form },
                    dataType: "json",
                    success: function (response) {

                        if (response.length > 0) {
                            var typeSelect = $("#RecipientField");
                            typeSelect.empty();
                            typeSelect.append($('<option/>', {
                                value: "0",
                                text: "Please select Field"
                            }));

                            for (i = 0; i < response.length; i++) {
                                typeSelect.append($('<option/>', {
                                    value: response[i],
                                    text: response[i]
                                }));
                            }
                        }
                    },
                    error: function (response) {
                    }
                });
            }
        });

        function resetRecipient() {
            //$("#RecipientForm").val("0");
            $("#RecipientDatabaseTable").val("0");
            $("#RecipientField").val("0");
            $("#RoleId").val("0");
            $("#EmailGroupId").val("0");
        }

        function valueChecker() {
            //$("#RecipientForm").val("0");
            if ($("#RecipientDatabaseTable").val() == "" || $("#RecipientDatabaseTable").val() == null) {
                $("#RecipientDatabaseTable").val("0");
            }
            if ($("#RecipientField").val() == "" || $("#RecipientField").val() == null) {
                $("#RecipientField").val("0");
            }
            if ($("#RoleId").val() == "" || $("#RoleId").val() == null) {
                $("#RoleId").val("0");
            }
            if ($("#EmailGroupId").val() == "" || $("#EmailGroupId").val() == null) {
                $("#EmailGroupId").val("0");
            }
        }

    </script>
}
