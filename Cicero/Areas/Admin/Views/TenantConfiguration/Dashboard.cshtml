@inject Utils utils
@inject Permission permission
@using Cicero.Service.Services
@using Cicero.Service.Models
@model IEnumerable<CaseFormViewModel>
@{
    Layout = null;
}

@{
    string tenant = "";
    string tenant_identifier = utils.GetTenantFromSession();
    if (!string.IsNullOrEmpty(tenant_identifier))
    {
        tenant = tenant_identifier + "/";
    }
    var count = (dashboardCounts)ViewBag.Count;
    var forms = (List<CaseFormViewModel>)ViewBag.Form;

}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Tenant Dashboard</title>

    <environment include="Development">
        <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css" />
        <!--<link rel="stylesheet" href="~/css/site.css" />-->
    </environment>
    <environment exclude="Development">
        <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css"
              asp-fallback-href="~/lib/bootstrap/dist/css/bootstrap.min.css"
              asp-fallback-test-class="sr-only" asp-fallback-test-property="position" asp-fallback-test-value="absolute" />
    </environment>
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.1.1/css/all.css" integrity="sha384-O8whS3fhG2OnA5Kas0Y9l3cfpmYjapjI0E4theH4iuMD+pLhbf6JI0jIMfYcK3yZ"
          crossorigin="anonymous">
    <link href="https://fonts.googleapis.com/css?family=PT+Sans:400,400i,700,700i" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:400,600" rel="stylesheet">
    <link rel="stylesheet" href="~/admin/assets/css/main-backend.css" />
    <link rel="stylesheet" href="~/css/Cicero.css" />
    <link href="https://cdn.datatables.net/1.10.19/css/dataTables.bootstrap4.min.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.6.4/css/bootstrap-datepicker.standalone.min.css"
          rel="stylesheet" type="text/css" />

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-multiselect/0.9.15/css/bootstrap-multiselect.css" type="text/css" />

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/pretty-checkbox@3.0/dist/pretty-checkbox.min.css" type="text/css" />
    @*<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js"></script>*@
    <script src="https://code.jquery.com/jquery-3.3.1.min.js" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=" crossorigin="anonymous"></script>
    <style>
        @@media (min-width: 768px) {
            .sidebar {
                display: none;
            }

            .main {
                margin-left: 0px;
            }
        }

        .ishidden {
            display: none;
        }

        .main {
            min-width: 800px;
            margin: auto;
        }

        .dashboard-icon {
            font-size: 85px;
            text-align: center;
        }

        p {
            text-align: center;
        }

        div.box-container {
            display: block;
            border: 1px solid black;
            margin: 5px;
            background-color: rgb(255,255,255);
            color: #232c3b;
            text-decoration: none;
            position: relative;
            box-shadow: 1px 1px 5px rgba(0,0,0,0.2)
        }

            div.box-container:hover {
                text-decoration: none;
                color: rgba(35,44,59,0.8);
            }

                div.box-container:hover .box-container-second {
                    display: block;
                }

        .box-container-in {
            margin-top: 50px;
        }

        div.box-container.isdisabled {
            background-color: rgba(194, 191, 191,0.4);
            border: 1px solid rgba(194, 191, 191,0.4);
            color: rgb(194, 191, 191);
        }

        div.box-container.isfocus {
            border: 1px solid black;
            background-color: #232c3b;
            color: rgba(255,255,255,1);
        }

        div.box-container .box-container-second {
            display: none;
            position: absolute;
            top: 0;
            left: 0;
            background-color: rgb(255,255,255);
            height: 100%;
            width: 100%;
            padding: 5px;
        }

        .isdisabled {
            color: rgb(194, 191, 191);
        }

            .isdisabled:hover {
                cursor: not-allowed;
            }

        .top-icon {
            padding: 10px;
            font-size: 20px;
            text-align: right;
        }

        .top-bar {
            text-align: right;
        }

        .iscompleted-icon {
            color: rgb(86, 178, 29);
            font-size: 40px;
            position: absolute;
            right: -8px;
            bottom: -16px;
        }

        .isfocus {
            border: 1px solid black;
            background-color: #232c3b;
            color: rgba(255,255,255,1);
        }

        .link {
            display: inline;
            border: none;
            margin: 0px;
            color: blue;
            text-decoration: none;
            position: inherit;
        }

            .link hover {
                text-decoration: underline;
            }

        .create-new {
            display: none;
            margin-top: 20px;
        }

        #loading {
            width: 100%;
            z-index: 9;
            height: 100%;
            position: fixed;
            top: 0;
            left: 0;
            background-color: rgba(255,255,255,0.8);
            display: none;
        }

            #loading .inside-loading {
                width: 20%;
                margin: auto;
                margin-top: 25%;
                /* height: 100%; */
                text-align: center;
                font-size: 15px;
            }
    </style>
</head>
<body>

    <div class="container-fluid">
        @if (!permission.Can(UserCan.Create_Role) && !permission.Can(UserCan.Create_User))
        {
            <div class="box p-4"> 
                <p>You don't have permission to view this page.</p>
                <p>Visit <a class="link" href=@Url.Content("~/admin/"+tenant_identifier+".html")>Dashboard</a></p>
            </div>
        }
        else
        {

            <div class="box p-4">
                <div class="row">
                    <div class="col-lg-12">
                        <button class="btn btn-danger float-right" id="cancelProcess" disabled="disabled" data-toggle="modal">Click to Cancel this process <i class="fas fa-times-circle"></i></button>
                    </div>
                </div>
            </div>
            <div id="loading">
                <div class="inside-loading">
                    <i class="fas fa-spin fa-cog"></i> Loading... please wait
                </div>
            </div>

            <div class="box p-4">
                <div class="row">
                    @* System Demo start *@
                    <div class="offset-1 col-lg-2">
                        <div class="box-container isfocus">
                            <div class="dashboard-icon">
                                <i class="fab fa-youtube"></i>
                            </div>
                            <p>System Demo</p>
                        </div>
                    </div>
                    @* system demo end *@
                    <div class="col-lg-2">
                    </div>
                    @* Select Form *@
                    <div class="col-lg-2">
                        <div class="box-container" id="step0">
                            <div class="box-container-first">
                                <div class="dashboard-icon">
                                    <i class="fas fa-hand-pointer"></i>
                                </div>
                                <p>Select Form</p>
                            </div>
                            <div class="box-container-second">
                                <div class="box-container-in" id="box-container-in">

                                </div>
                                <div class="create-new">
                                    <div class="form-group">
                                        <label>Form Name</label>
                                        <input type="text" class="form-control" name="form-name" id="form-name" />

                                    </div>
                                    <div class="form-group">
                                        <button class="btn btn-primary" onclick="saveForm()" id="createNew">Create New</button>
                                        <button class="btn btn-default" id="cancelCreate">Cancel</button>
                                    </div>
                                </div>
                            </div>
                            <span class="iscompleted-icon ishidden"><i class="fas fa-check-circle"></i></span>
                        </div>
                    </div>
                    @* Select Form End *@

                    <div class="col-lg-2">

                        <div class="dashboard-icon ishidden" id="step0-arrow">
                            <i class="fas fa-long-arrow-alt-right"></i>
                        </div>

                    </div>

                    @* Build your form  start*@
                    <div class="col-lg-2">

                        <div class="box-container isdisabled" id="step1">
                            <div class="dashboard-icon">
                                <i class="fas fa-prescription-bottle"></i>
                            </div>
                            <p>Build your form</p>
                            <span class="iscompleted-icon ishidden"><i class="fas fa-check-circle"></i></span>
                        </div>
                    </div>
                    @* Build your form end *@
                </div>

                <div class="row">
                    @*Roles Management start*@
                    <div class="offset-1 col-lg-2">
                        <div class="box-container isdisabled" id="step2">
                            <div class="dashboard-icon">
                                <i class="fas fa-users-cog"></i>
                            </div>
                            <p>Role management</p>
                            <span class="iscompleted-icon ishidden"><i class="fas fa-check-circle"></i></span>
                        </div>

                    </div>

                    @* Roles Management end *@

                    <div class="col-lg-2">

                        <div class="dashboard-icon ishidden" id="step2-arrow">
                            <i class="fas fa-long-arrow-alt-right"></i>
                        </div>

                    </div>

                    @* User management start *@
                    <div class="col-lg-2">

                        <div class="box-container isdisabled" id="step3">
                            <div class="dashboard-icon">
                                <i class="fas fa-users"></i>
                            </div>
                            <p>User Management</p>
                            <span class="iscompleted-icon ishidden"><i class="fas fa-check-circle"></i></span>
                        </div>


                    </div>
                    @* User management end *@

                    <div class="col-lg-2">
                        <div class="dashboard-icon ishidden" id="step3-arrow">
                            <i class="fas fa-long-arrow-alt-right"></i>
                        </div>
                    </div>


                    @* Build workflow start *@
                    <div class="col-lg-2">

                        <div class="box-container isdisabled" id="step4">
                            <div class="dashboard-icon">
                                <i class="fas fa-code-branch"></i>
                            </div>
                            <p>Build workflow</p>
                            <span class="iscompleted-icon ishidden"><i class="fas fa-check-circle"></i></span>
                        </div>


                    </div>
                    @* Build workflow end *@
                </div>

                <div class="row">
                    @* Media and communication *@
                    <div class="offset-1 col-lg-2">
                        <div class="box-container isdisabled" id="step5">
                            <div class="dashboard-icon">
                                <i class="fas fa-handshake"></i>
                            </div>
                            <p>Media and communications</p>
                            <span class="iscompleted-icon ishidden"><i class="fas fa-check-circle"></i></span>
                        </div>
                    </div>
                    @* Media and communication end *@

                    <div class="col-lg-2">
                        <div class="dashboard-icon ishidden" id="step5-arrow">
                            <i class="fas fa-long-arrow-alt-right"></i>
                        </div>
                    </div>

                    @* Reports *@
                    <div class="col-lg-2">
                        <div class="box-container isdisabled" id="step6">
                            <div class="dashboard-icon">
                                <i class="fas fa-chart-bar"></i>
                            </div>
                            <p>Reports</p>
                            <span class="iscompleted-icon ishidden"><i class="fas fa-check-circle"></i></span>
                        </div>

                    </div>
                    @* Reports end *@
                    <div class="col-lg-2">
                        <div class="dashboard-icon ishidden" id="step6-arrow">
                            <i class="fas fa-long-arrow-alt-right"></i>
                        </div>
                    </div>

                    @* Confirmation *@
                    <div class="col-lg-2">
                        <div class="box-container isdisabled" id="step7" data-toggle="modal">
                            <div class="dashboard-icon">
                                <i class="fas fa-clipboard-check"></i>
                            </div>
                            <p>Confirmation</p>
                            <span class="iscompleted-icon ishidden"><i class="fas fa-check-circle"></i></span>
                        </div>
                    </div>
                    @* confirmation End *@

                </div>

            </div>



            //Confimation modal
            <div class="modal fade" id="confirmationPopUp" tabindex="-1" role="dialog" aria-labelledby="confirmationPopUpLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="confirmationPopUpLabel">Configuration Completion</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body" id="modal-text">
                            You have successfully completed the configuration process.
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            <button type="button" class="btn btn-primary" id="continue">Continue</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal fade" id="delConfirmationPopUp" tabindex="-1" role="dialog" aria-labelledby="delConfirmationPopUpLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="delConfirmationPopUpLabel">Cancel Confirmation</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body" id="modal-text">
                            Are you sure you want to cancel the configuration process?
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            <button type="button" class="btn btn-primary" id="continueDel" onclick="cancelNew()">Continue</button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
   
    <script src="~/lib/bootstrap/dist/js/bootstrap.js"></script>

    @* new dashboard scripts *@
    <script>

            //iniitilize
            var currStep = "step";
            var selectedForm = "";
            var stepCount = 1;
            var isNew = "false";
            var finalCount = 6;
            var hasAllCount = false;
            var isComplete = false;
            var intervals="";
            var urls = {
                "step0":"#",
                "step1": "/admin/" + "@tenant_identifier" + "/builderform/" + selectedForm + "/edit.html?display=nosidebar",
                "step2": "/admin/" + "@tenant_identifier" + "/roles.html?display=nosidebar",
                "step3": "/admin/" + "@tenant_identifier" + "/users.html?display=nosidebar",
                "step4": "/admin/" + "@tenant_identifier" + "/manage/queues.html?display=nosidebar",
                "step5": "/admin/" + "@tenant_identifier" + "/medias.html?display=nosidebar",
                "step6": "/admin" + "@tenant_identifier" + "/medias.html?display=nosidebar",
                "step7": ""
            };

            var dashboardCurrData;
            ///

            //reset all variables
            var resetAll = function () {
                currStep = "step";
                selectedForm = "";
                stepCount = 1;
                hasAllCount = false;
                isComplete = false;
                isNew = "false";
                intervals;
                clearLocalStorage();
            }

            //on click create new link
            var createNew = function () {
                console.log("createNew");
                $(".box-container-in").attr("style", "display:none");
                $(".create-new").attr("style", "display:block");
                $("#cancelCreate").removeAttr("disabled");
                startUp();
                clearLocalStorage();
            }
            //on click cancel button
            var cancelNew = function () {
                console.log("cancelNew");
                $(".box-container-in").attr("style", "display:block;");
                $(".create-new").attr("style", "display:none");
                $("#form-name").val("");
                $("#form-name").removeAttr("disabled");
                $("#createNew").removeAttr("disabled");
                deleteCreatedData(function () {
                    startUp();
                    getTenantForms();
                    checkCancelbtn();
                    $("#delConfirmationPopUp").modal('hide');
                })

        }

        $("#cancelCreate").on("click", function () {
            $(".box-container-in").attr("style", "display:block;");
            $(".create-new").attr("style", "dispaly:none");
            $("#form-name").val("");
            $("#form-name").removeAttr("disabled");
            $("#createNew").removeAttr("disabled");
        });
        //delete Created data
        var deleteCreatedData = function (callback) {
            if (dashboardCurrData.roleIds.length > 0 || dashboardCurrData.userIds.length > 0 || dashboardCurrData.workflowIds.length > 0 || dashboardCurrData.formId != "") {
                $.ajax({
                    async: false,
                    type: "POST",
                    url: '/admin/' + '@tenant_identifier' + '/deletedata.html',
                    data: { roles: dashboardCurrData.roleIds, users: dashboardCurrData.userIds, workflow: dashboardCurrData.workflowIds, FormId: dashboardCurrData.formId },
                    //contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        data = response;
                        return callback("");
                    },
                    error: function (response) {
                        data = 0;
                        return callback(0);
                    }
                });
            }
            else {
                return callback("");
            }

        }
            //check if all steps has been completed already
        var checkSteps = function (data,isNew) {
            if (isNew == false) {
                if (parseInt(data.roleCount) > 1 && parseInt(data.userCount) > 1 && parseInt(data.workflowCount) >= 1 && parseInt(data.claimFormsCount) >= 1 && parseInt(data.mediaCount) >= 1) {
                    //all disabled and click of each should be enabled
                    hasAllCount = true;
                }
                else {
                    if(parseInt(data.mediaCount) >= 1) { stepCount = 5; }
                    else if (parseInt(data.workflowCount) >= 1) { stepCount = 4; }
                    else if (parseInt(data.userCount) > 1) { stepCount = 3; }
                    else if (parseInt(data.roleCount) > 1) { stepCount = 2; }
                    else if (parseInt(data.claimFormsCount) >= 1) { stepCount = 1; }
                   // else if (parseInt(data.mediaCount) >= 1) { stepCount = 5; }
                    else { stepCount = 6; }
                }
            }
            else {
                stepCount = dashboardCurrData.currentStep;
            }


            }

        //Completion btn click
            $("#continue").on('click', function () {
                $("#" + Object.keys(urls)[Object.keys(urls).length - 1] + " .iscompleted-icon").removeClass("ishidden");
                localStorageSetConfirmation(true);
                localStorageSetIsNew(false);
                $(".box-container-in").attr("style", "display:block;");
                $(".create-new").attr("style", "dispaly:none");
                $("#form-name").val("");
                $("#form-name").removeAttr("disabled");
                $("#createNew").removeAttr("disabled");
                $("#confirmationPopUp").modal('hide');
                $("#selectForm").val(selectedForm);
                checkCancelbtn();
            })

            //reset to initial step
        var startUp = function () {
            $("#" + Object.keys(urls)[stepCount - 2] + "-arrow").addClass("ishidden");
                resetAll();

                $("#selectForm").val(selectedForm);
                for (var i = 0; i <= Object.keys(urls).length; i++) {
                   // setUrl(Object.keys(urls)[i]);
                    removeUrl(Object.keys(urls)[i]);
                    $("#" + Object.keys(urls)[i]).addClass("isdisabled");
                    $("#" + Object.keys(urls)[i] + " .iscompleted-icon").addClass("ishidden");
                    $("#" + Object.keys(urls)[i - 1] + "-arrow").addClass("ishidden");
                    if (i == Object.keys(urls).length - 1) {
                        console.log(Object.keys(urls)[i - 1] + "-arrow");
                        $("#" + Object.keys(urls)[i - 1] + "-arrow").addClass("ishidden");

                    }
                }
            $("#step0").removeClass("isdisabled");
            $("#step0 .iscompleted-icon").addClass("ishidden");
        }

            //when all steps are completed
            var complete = function (isNew) {
                $("#step0").removeClass("isdisabled");

                for (var i = 0; i <= Object.keys(urls).length; i++) {
                    setUrl(Object.keys(urls)[i]);
                    $("#" + Object.keys(urls)[i]).removeClass("isdisabled");

                    if(i == Object.keys(urls).length)
                    {
                        if (isNew != true) {
                            $("#" + Object.keys(urls)[i-1] + " .iscompleted-icon").removeClass("ishidden");
                        }
                        else {
                            $("#" + Object.keys(urls)[i-1] + " .iscompleted-icon").addClass("ishidden");
                        }
                    }
                    else
                     {
                         $("#" + Object.keys(urls)[i] + " .iscompleted-icon").removeClass("ishidden");
                     }

                    if (i == Object.keys(urls).length-1) {
                        console.log(Object.keys(urls)[i-1] + "-arrow");
                        $("#" + Object.keys(urls)[i - 1] + "-arrow").removeClass("ishidden");
                    }
                }
                stepCount = finalCount;

            }

            //next step work
            var nextStep = function (currStep) {
                    $("#" + currStep + stepCount).addClass("isdisabled");
                    $("#" + currStep + stepCount + " .iscompleted-icon").removeClass("ishidden");
                    $("#" + currStep + stepCount + "-arrow").removeClass("ishidden");
                    $("#" + currStep + (stepCount - 1) + "-arrow").addClass("ishidden");
                    stepCount++;
                    $("#" + currStep + stepCount).removeClass("isdisabled");
                    setUrl(currStep + stepCount);
                }


            //when new form create follow each steps
            var stepByStep = function (step) {
                var count = getCounts();
                switch (step) {
                    case "step1":
                        if (count.claimFormsCount >= 1) {
                            nextStep(currStep);
                            removeUrl(step);
                            clearInterval(intervals);
                            intervals = null;
                        }
                        break;
                    case "step2":
                        if (count.roleCount > 1) {
                            nextStep(currStep);
                            removeUrl(step);
                            clearInterval(intervals);
                            intervals = null;
                        }
                        break;
                    case "step3":
                        if (count.userCount > 1) {
                            nextStep(currStep);
                            removeUrl(step);
                            clearInterval(intervals);
                            intervals = null;
                        }
                        break;
                    case "step4":
                        if (count.workflowCount >= 1) {
                            nextStep(currStep);
                            removeUrl(step);
                            clearInterval(intervals);
                            intervals = null;
                        }
                        break;
                    case "step5":
                        if (count.mediaCount >= 1) {
                            nextStep(currStep);
                            removeUrl(step);
                            clearInterval(intervals);
                            intervals = null;
                        }
                        break;
                    case "step6":
                        nextStep(currStep);
                        removeUrl(step);
                        clearInterval(intervals);
                        intervals = null;
                        complete(true);
                        break;
                    case "step7":
                        break;
                }
            }



            //get count of all the dashboard steps
            var getCounts = function () {
                var data;
                $.ajax({
                    async: false,
                    type: "POST",
                    url: '/admin/' + '@tenant_identifier' + '/latestcount.html',
                    //contentType: "application/json; charset=utf-8",
                    dataType: "json",
                     success: function (response) {
                         data = response;
                    },
                    error: function (response) {
                        data = 0;
                    }
                });
                return data;
            }

            //create and save new form
            var saveForm = function () {
                var name = $("#form-name").val();
                var tenantId = "@tenant_identifier";
                var Fields = '{"formName":"overallForm","Tabs":[{"tabName":"","element":[]}]}';
                $.ajax({
                    type: "POST",
                    url: '/admin/' + '@tenant_identifier' + '/builderform/createAction.html',
                    data: { formName:name, tenant_identifier: tenantId , fields:Fields},
                    dataType: "json",
                    success: function (response) {
                        if (response != 0) {
                            //cancelNew();
                            selectedForm = response;
                            var data = getCounts();
                            isNew = "true";
                            $("#form-name").attr("disabled", "disabled");
                            $("#createNew").attr("disabled", "disabled");
                            $("#cancelCreate").attr("disabled", "disabled");
                            stepChange(currStep);
                            setUrl(currStep + stepCount);
                            localStorageSetFormId(response);
                            localStorageSetIsNew(true);
                            localStorageSetConfirmation(false);
                            localStorageSetFormName(name);
                            localStorageSetCurrStep(stepCount);
                            checkSteps(data, true);
                            getSystemDateTime();
                            checkCancelbtn();//check for cancelbtn
                            //getTenantForms();
                        }
                    },
                    error: function (response) {

                    }
                });
            }
            //gets system's datetime
            var getSystemDateTime = function () {
                $.ajax({
                    type: "POST",
                    url: '/admin/' + '@tenant_identifier' + '/getsystemdatetime.html',
                    dataType: "json",
                    success: function (response) {
                        dashboardCurrData.startDateTime = response;
                        updateLocalStorage();
                    },
                    error: function (e) { }
                });
        }


        //updates to Current Step
        var updateSteps = function (isNew) {
            $("#step0").addClass("isdisabled");
            $("#step0 .iscompleted-icon").removeClass("ishidden");
            for (i = 0; i <stepCount; i++) {

                $("#" + Object.keys(urls)[i]).addClass("isdisabled");
                $("#" + Object.keys(urls)[i] + " .iscompleted-icon").removeClass("ishidden");
            }

            setUrl(Object.keys(urls)[stepCount],isNew);
            $("#" + Object.keys(urls)[stepCount]).removeClass("isdisabled");
            console.log(Object.keys(urls)[stepCount - 1] + "-arrow");
            $("#" + Object.keys(urls)[stepCount - 1] + "-arrow").removeClass("ishidden");
            // stepCount++;
        }



       //on available form select change
        var selectChange = function () {

            $("#selectForm").on("change", function () {
                if ($(this).val() != "") {

                    var data = getCounts();
                    //checkSteps(data,false);
                    if (dashboardCurrData.isNew == false) {
                        localStorageSetConfirmation(true);
                        if (stepCount == "" || stepCount == 1) {
                            checkSteps(data, false);
                        }
                    }
                    else {
                        checkSteps(data, true);
                    }
                    if (hasAllCount == true) {
                        complete();
                    }
                    else {
                        updateSteps();
                    }

                    //stepChange(currStep);
                    selectedForm = $(this).val();
                    localStorageSetFormId($(this).val());
                    checkCancelbtn();//check for cancelbtn
                    //setUrl(currStep + stepCount);
                    //  $("#" + currStep + stepCount).on("click", buildForm);
                }
                else {
                    startUp();
                    stepRevert(currStep);
                    removeUrl(currStep + stepCount);
                }
            });


        }


            var stepChange = function (currStep) {
                $("#" + currStep + (stepCount - 1)).addClass("isdisabled");
                $("#" + currStep + (stepCount - 1) + " .iscompleted-icon").removeClass("ishidden");
                $("#" + currStep + (stepCount - 1)+ "-arrow").removeClass("ishidden");
                $("#" + currStep + stepCount).removeClass("isdisabled");

            }

            var stepRevert = function (currStep) {
                $("#" + currStep + (stepCount - 1)).removeClass("isdisabled");
                $("#" + currStep + (stepCount - 1) + " .iscompleted-icon").addClass("ishidden");
                $("#" + currStep + (stepCount - 1) + "-arrow").addClass("ishidden");
                $("#" + currStep + stepCount).addClass("isdisabled");
            }
            //remove onclick action
        var removeUrl = function (step)
        {
            $("#" + step).removeAttr("onclick");
            $("#" + step).removeAttr("data-target");
        }

        var setUrl = function (step) {
            switch (step) {
                case "step1":
                    //  $("#step1").attr("onclick", "buildUrl(" / admin / " + "@tenant_identifier" + " / builderform / " + selectedForm + " / edit.html",first"));
                    $("#step1").attr('onclick', 'buildUrl("/admin/" + "@tenant_identifier" + "/builderform/" + selectedForm + "/edit.html?display=nosidebar&isNew=")');
                    break;
                case "step2":
                    $("#step2").attr("onclick", 'buildUrl("' + urls.step2 + '&isNew=")');
                    break;
                case "step3":
                    $("#step3").attr("onclick", 'buildUrl("' + urls.step3 + '&isNew=")');
                    break;
                case "step4":
                    $("#step4").attr("onclick", 'buildUrl("' + urls.step4 + '&isNew=")');
                    break;
                case "step5":
                    $("#step5").attr("onclick", 'buildUrl("' + urls.step5 + '&isNew=")');
                    break;
                case "step6":
                    $("#step6").attr("onclick", 'buildUrl("' + urls.step6 + '&isNew=")');
                    break;
                case "step7":
                    $("#step7").attr("data-target", "#confirmationPopUp");
                    break;
            }
        }

            //build url for navigation
            var buildUrl=function(url)
            {
                url = url + dashboardCurrData.isNew;
                stepCount++;
                localStorageSetCurrStep(stepCount);
                window.open(url, '_self');
                //if (hasAllCount == true) {
                //    removeUrl(currStep + stepCount);
                //    nextStep(currStep);

                //}
                //else {
                //    if (stepCount < 7) {
                //        if (!intervals) {
                //            intervals = setInterval(
                //                function () {
                //                    stepByStep(currStep + stepCount);
                //                    console.log("1");
                //                }, 3000);
                //        }
                //    }
                //}
               // if (stepCount == Object.keys(urls).length) { complete(true); }
            }

            //get list of forms
            var getTenantForms = function () {
                $.ajax({
                    type: "POST",
                    url: '/admin/' + '@tenant_identifier' + '/gettenantforms.html',
                    dataType: "json",
                    success: function (response) {
                        JSON.stringify(response);
                        $("#box-container-in").html();
                        $("#selectForm").html();
                        if (response.length >= 1) {
                            $("#box-container-in").html("<p>"
                                + "<select class='form-control' id ='selectForm' name = 'selectForm'></select>"
                                + "</p>"
                                + "<p>Or <a class='link' href='#' onclick='createNew()'>Create New Form</a></p>");
                            $("#selectForm").append("<option value=''>Select Form</option>");
                            selectChange();
                            for (i = 0; i < response.length; i++) {
                                var c = (response[i].name).split(',');
                                $("#selectForm").append("<option value='" + c[0] + "'>" + c[1] + "</option>");
                            }
                            if (dashboardCurrData.isNew == false) {
                                selectedForm = dashboardCurrData.formId;
                                $("#selectForm").val(selectedForm);
                                //$("#selectForm").trigger('change');
                            }
                            else {
                                if (isComplete == false) {
                                    $("#selectForm").val(selectedForm);
                                    $("#selectForm").trigger('change');
                                }
                            }
                        }
                        else {
                            $("#box-container-in").html(" <p><a class='link' href='#' onclick='createNew()'>Create New Form</a></p>");
                        }
                    },
                    error: function (response) {
                    }

                });
            }
     

            //localstorage Operations
        var localStorageSetFormId = function (formid) {
                dashboardCurrData.formId = formid;
                updateLocalStorage();
        }
        var localStorageSetIsNew = function (IsNew) {
                dashboardCurrData.isNew = IsNew;
                updateLocalStorage();
        }
        var localStorageSetFormName = function (name) {
                dashboardCurrData.formName = name;
                updateLocalStorage();
        }
        var localStorageSetCurrStep = function (step) {
                dashboardCurrData.currentStep = step;
                updateLocalStorage();
        }
        var localStorageSetCurrRoles = function (data) {
                dashboardCurrData.roleIds = data;
                updateLocalStorage();
        }
        var localStorageSetCurrUsers = function (data) {
                dashboardCurrData.userIds = data;
                updateLocalStorage();
        }
        var localStorageSetCurrWorkflow = function (data) {
                dashboardCurrData.workflowIds = data;
                updateLocalStorage();
        }
        var localStorageSetConfirmation = function (data) {
            dashboardCurrData.confirmation = data;
            updateLocalStorage();
        }
        var updateLocalStorage = function () {
            localStorage.setItem('dashboardData', JSON.stringify(dashboardCurrData));
        }

        var clearLocalStorage = function () {
            resetdashboardCurrData(function () {
                localStorage.setItem('dashboardData', JSON.stringify(dashboardCurrData));
            });
        }
        //Resets dashboardCurrData
        var resetdashboardCurrData = function (callback) {
            dashboardCurrData = {
                "formId": "",
                "formName": "",
                "roleIds": [],
                "workflowIds": [],
                "mediaIds": [],
                "userIds": [],
                "report": "",
                "confirmation": true,
                "currentStep": "",
                "isNew": false,
                "startDateTime": "",
                "endDateTime": ""
            }
            return callback();
        }
        //end local storage operation

        var validateStep = function (dataCount, callback) {
                switch (stepCount) {
                    case 2:
                        $.ajax({
                            type: "POST",
                            url: '/admin/' + '@tenant_identifier' + '/checkcaseform.html',
                            data: { encrypedId: dashboardCurrData.formId },
                            dataType: "json",
                            success: function (response) {
                                if (response == true) {
                                    stepCount = stepCount - 1;
                                    localStorageSetCurrStep(stepCount);
                                }
                                return callback("");
                            },
                            error: function () { }
                        });
                        break;
                    case 3:
                        if (!(dataCount.roleCount > 1)) {
                            stepCount--;
                            localStorageSetCurrStep(stepCount);
                            return callback("");
                        }
                        break;
                    case 4:
                        if (!(dataCount.userCount > 1)) {
                            stepCount--;
                            localStorageSetCurrStep(stepCount);
                            return callback("");
                        }
                        break;
                    case 5:
                        if (!(dataCount.workflowCount >= 1)) {
                            stepCount--;
                            localStorageSetCurrStep(stepCount);
                            return callback("");
                        }
                        break;
                    case 6:
                        break;
                    case 7:
                        isComplete = true;
                        complete(true);
                        break;
                }
        }

        //check for cancel button (enable/disable)
        var checkCancelbtn = function () {
            if (dashboardCurrData.confirmation == true) {
                $("#cancelProcess").attr("disabled", "disabled");
                $("#cancelProcess").attr("data-target", "#delConfirmationPopUp");
            }
            else {
                $("#cancelProcess").removeAttr("disabled");
                $("#cancelProcess").attr("data-target", "#delConfirmationPopUp");
            }
        }

        var showLoading = function () {
            $("#loading").fadeIn("10");
        }
        var hideLoading = function () {
            $("#loading").fadeOut("400");
        }


            //initialize list of forms
        $(function () {
            showLoading();
               if (JSON.parse(localStorage.getItem('dashboardData')) != null) {
                   dashboardCurrData = JSON.parse(localStorage.getItem('dashboardData'));
                   if (dashboardCurrData.startDateTime != "")
                   {
                       getAddedData();
                   }
                   var data = getCounts();
                   if (dashboardCurrData.isNew == true) {
                       selectedForm = dashboardCurrData.formId;
                       $("#cancelCreate").attr("disabled", "disabled");
                       checkSteps(data, true);
                       if (hasAllCount == true) {
                           complete();
                       }
                       else {
                           if (stepCount > 1) {
                               validateStep(data, function () {
                                   updateSteps(dashboardCurrData.isNew);
                               });
                           }
                           else {
                               updateSteps(dashboardCurrData.isNew);
                           }
                               $(".box-container-in").attr("style", "display:none");
                               $(".create-new").attr("style", "display:block");
                               $("#form-name").val(dashboardCurrData.formName);
                               $("#form-name").attr("disabled", "disabled");
                               $("#createNew").attr("disabled", "disabled");
                       }

                   }
                   else {
                       selectedForm = dashboardCurrData.formId;
                       stepCount = dashboardCurrData.currentStep;
                       if (selectedForm != "") {
                           if (stepCount == "") {
                               checkSteps(data, false);
                           }

                           if (hasAllCount == true) {
                               complete();
                           }
                           else {
                               updateSteps();
                           }
                       }

                   }
               }
               else {
                   resetdashboardCurrData();
               }
               getTenantForms();
               if (stepCount >= 7) {
                   isComplete = true;
                   complete(false);
               }
            checkCancelbtn();
            hideLoading();
            })

        //get currently added data
        var getAddedData = function () {
            var rolesAdded, usersAdded, workflowAdded;
            $.ajax({
                type: "POST",
                url: '/admin/' + '@tenant_identifier' + '/getaddeddata.html',
                data: { startDateTime: dashboardCurrData.startDateTime },
                dataType: "json",
                success: function (response) {
                        if (response.roleData != null) {
                            rolesAdded = response.roleData.split(",");
                            localStorageSetCurrRoles(rolesAdded);
                        }
                        if (response.userData != null) {
                            usersAdded = response.userData.split(",");
                            localStorageSetCurrUsers(usersAdded);
                        }
                        if (response.workflowData != null) {
                            workflowAdded = response.workflowData.split(",");
                            localStorageSetCurrWorkflow(workflowAdded);
                        }
                },
                error: function () { }
                });
        }


    </script>
</body>

</html>
