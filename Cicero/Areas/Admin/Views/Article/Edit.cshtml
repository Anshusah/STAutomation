@model Cicero.Service.Models.ArticleViewModel
@using Cicero.Service.Services
@using Cicero.Service.Helpers;
@inject Utils _Utils
@inject IArticleService _IArticleService
@inject Permission Permission

@{

    ViewBag.Title = Utils.CreateOrEdit(Model) + " Article";

}
<div class="page-wrapper page-articles">
    <div class="page-header">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb bg-none p-0">
                <li class="breadcrumb-item">
                    <a href="@Url.Content("~/admin"+_Utils.GetTenantForUrl(false)+".html")">Home</a>
                </li>
                <li class="breadcrumb-item">
                    <a href="@Url.Content("~/admin"+_Utils.GetTenantForUrl(false)+"/articles.html")">Articles</a>
                </li>
                <li class="breadcrumb-item active" aria-current="page">@Utils.CreateOrEdit(Model) Article</li>
            </ol>
        </nav>
        <div class="page-header__main">
            <h3 class="page-title">Manage Articles</h3>
            @if (Permission.Can(UserCan.Create_Article))
            {
                <div class="page-toolbar">
                    <a href="@Url.Content("~/admin/"+_Utils.GetTenantForUrl(false)+"/article/"+ _Utils.EncryptId(0) +"/edit.html")" class="btn btn-primary"><i class="btn__icon ri-add-fill"></i><span class="btn__label">Create New</span></a>
                </div>
            }
        </div>
    </div>
    <div class="page-content">
        <div class="page-form-container">
            <form action="@Url.Content("~/admin"+_Utils.GetTenantForUrl(false)+"/article/"+_Utils.EncryptId(Model.Id)+"/edit.html")" method="post" class="page-container grid-horizontal-viewport">
                <div class="page-aside">
                    <div class="aside-wrapper">
                        <div class="aside-header">
                            <h4>Manage Articles</h4>
                            <p>
                                This section helps you to add/edit or delete Articles. Please make changes on required fields and Click on "Save Change" buttons.
                            </p>
                        </div>
                        <div class="aside-body">
                            <div class="form-group">
                                <label>Status</label><br />
                                <div class="custom-control custom-radio custom-control-inline">
                                    @Html.RadioButtonFor(model => model.Status, 1, new { @id = "enable", @class = "custom-control-input" })
                                    <label class="custom-control-label" for="enable">Active</label>
                                </div>
                                <div class="custom-control custom-radio custom-control-inline">
                                    @Html.RadioButtonFor(model => model.Status, 0, new { @id = "disable", @class = "custom-control-input" })
                                    <label class="custom-control-label" for="disable">Inactive</label>

                                </div>
                            </div>
                            <div class="form-group">
                                <label>Version</label>
                                <input asp-for="Version" type="text" class="form-control-plaintext font-weight-bold p-0" readonly="readonly">
                            </div>
                            <div class="form-group">
                                <label>Created</label>
                                <input type="text" value="@Model.CreatedAt" name="CreatedAt" id="CreatedAt" class="form-control-plaintext font-weight-bold p-0" readonly="readonly">
                            </div>

                            <div class="form-group">
                                <label>Last updated</label>
                                <input type="text" value="@Model.UpdatedAt" name="UpdatedAt" id="UpdatedAt" class="form-control-plaintext font-weight-bold p-0" readonly="readonly">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="page-body">
                    <div class="form-wrapper">
                        @Html.AntiForgeryToken()
                        <div class="status"></div>
                        <div asp-validation-summary="All" role="alert"></div>
                        <input type="hidden" name="Id" value="@Model.Id" />
                        <div class="form-body">
                            <div class="form-group">
                                <label asp-for="ParentId">Parent Article</label>
                                <select asp-for="ParentId" class="custom-select">
                                    <option value="0">No Parent</option>
                                    @foreach (var item in _IArticleService.GetArticleList())
                                    {
                                        if (item.Value == Model.ParentId.ToString())
                                        {
                                            <option selected="selected" value="@item.Value">@item.Text</option>
                                        }
                                        else if (item.Value != Model.Id.ToString())
                                        {
                                            <option value="@item.Value">@item.Text</option>
                                        }
                                    }
                                </select>
                            </div>
                            <div class="form-group">
                                <label asp-for="Title"></label>
                                <input asp-for="Title" class="form-control">
                                <span asp-validation-for="Title"></span>
                            </div>
                            <div class="form-row">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label asp-for="Template"></label>
                                        <select asp-for="Template" class="custom-select">
                                            <option value="Default">Default</option>
                                            @foreach (var item in @_Utils.getTemplates())
                                            {
                                                if (item == Model.Template)
                                                {
                                                    <option selected="selected" value="@item">@item</option>
                                                }
                                                else
                                                {
                                                    <option value="@item">@item</option>
                                                }

                                            }
                                        </select>
                                        <span asp-validation-for="Template"></span>
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label asp-for="Slug"></label>
                                        <input asp-for="Slug" class="form-control" />
                                        <span asp-validation-for="Slug"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label asp-for="Content"></label>
                                <textarea asp-for="Content" class="form-control" rows="13"></textarea>
                                <span asp-validation-for="Content"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Excerpt"></label>
                                <textarea asp-for="Excerpt" class="form-control"></textarea>
                            </div>
                            <div class="form-group">
                                <div class="fileuploader fileuploader--theme-dragdrop">
                                    <div class="fileuploader__list">
                                        <ul class="media-list fileuploader__items">
                                            @foreach (var item in _IArticleService.GetImagesByArticleId(Model.Id))
                                            {
                                                @if (System.IO.Path.GetExtension(item.Url) == ".pdf")
                                                {
                                                    <li class="thumbs fileuploader__item file-type file-type--pdf">
                                                        <a href="javascript:void(0)">
                                                            <div class="thumbnail-holder">
                                                                <div class="fileuploader__item-image">
                                                                    <img src="~/images/pdf-icon.png">
                                                                </div>
                                                            </div>
                                                            <div class="actions-holder">
                                                                <button class="btn fileuploader__action fileuploader__action-remove" type="button" title="Remove">
                                                                    <i class="fileuploader__icon-remove remixicon-close-circle-fill" aria-hidden="true"></i>
                                                                </button>
                                                            </div>

                                                        </a>
                                                        <input type="hidden" name="images[]" value="@item.Id">
                                                    </li>
                                                }
                                                else if (System.IO.Path.GetExtension(item.Url) == ".doc" || System.IO.Path.GetExtension(item.Url) == ".docx" || System.IO.Path.GetExtension(item.Url) == ".txt")
                                                {
                                                    <li class="thumbs fileuploader__item file-type file-type--doc">
                                                        <a href="javascript:void(0)">
                                                            <div class="thumbnail-holder">
                                                                <div class="fileuploader__item-image">
                                                                    <img src="~/images/doc-icon.png">
                                                                </div>
                                                            </div>
                                                            <div class="actions-holder">
                                                                <button class="btn fileuploader__action fileuploader__action-remove" type="button" title="Remove">
                                                                    <i class="fileuploader__icon-remove remixicon-close-circle-fill" aria-hidden="true"></i>
                                                                </button>
                                                            </div>

                                                        </a>
                                                        <input type="hidden" name="images[]" value="@item.Id">
                                                    </li>
                                                }
                                                else
                                                {
                                                    <li class="thumbs fileuploader__item file-type file-type--image">
                                                        <a href="javascript:void(0)">
                                                            <div class="thumbnail-holder">
                                                                <div class="fileuploader__item-image">
                                                                    <img src="/uploads/@item.Url">
                                                                </div>
                                                            </div>
                                                            <div class="actions-holder">
                                                                <button class="btn fileuploader__action fileuploader__action-remove" type="button" title="Remove">
                                                                    <i class="fileuploader__icon-remove remixicon-close-circle-fill" aria-hidden="true"></i>
                                                                </button>
                                                            </div>

                                                        </a>
                                                        <input type="hidden" name="images[]" value="@item.Id">
                                                    </li>
                                                }
                                            }
                                            <!-- <li class="thumbs add"><button type="button" data-media='{OnInit:function(){this.size="modal-lg";this.button.cancel="Cancel";this.button.insert="Insert Media";this.open();},OnInsert:function(e){Cicero.Article.InsertImages(e)},OnCancelled:function(){this.close();}}'></button></li> -->
                                        </ul>
                                    </div>
                                    <div class="thumbs add fileuploader__input">
                                        <button type="button" class="btn btn-outline-secondary" data-media='{OnInit:function(){this.size="modal-lg";this.button.cancel="Cancel";this.button.insert="Insert Media";this.open();},OnInsert:function(e){Cicero.Article.InsertImages(e)},OnCancelled:function(){this.close();}}'>Upload image</button>
                                    </div>
                                </div>
                            </div>
                            <div class="form-footer">
                                @if ((Model.Id == 0 && Permission.Can(UserCan.Create_Article)) || (Model.Id != 0 && Permission.Can(UserCan.Update_Article)))
                                {
                                    <button type="submit" class="btn btn-primary">Update Changes</button>
                                }
                                <a class="btn btn-outline-secondary btn-back" href="@Url.Content("~/admin"+_Utils.GetTenantForUrl(false)+"/articles.html")">Go back </a>
                            </div>
                        </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts{
    @*<script src="https://cloud.tinymce.com/stable/tinymce.min.js"></script>*@
    <script src="~/lib/tinymce/js/tinymce/tinymce.min.js"></script>
    <script type="text/javascript">
        /*tinymce.init({
            selector: '#Content',
            menubar:false
        });*/
        tinymce.init({
                    theme: "modern",
                        valid_elements : "[id|class|style|title|dir<ltr?rtl|lang|xml::lang|onclick|ondblclick|onmousedown|onmouseup|onmouseover|onmousemove|onmouseout|onkeypress|onkeydown|onkeyup],a[rel|rev|charset|hreflang|tabindex|accesskey|type|name|href|target|title|class|onfocus|onblur],strong/b,em,i,strike,u,#p,-ol[type|compact],-ul[type|compact],-li,br,img[longdesc|class|usemap|src|border|alt=|title|hspace|vspace|width|height|align],-sub,-sup,-blockquote,-table[border=0|cellspacing|cellpadding|width|frame|rules|height|align|summary|bgcolor|background|bordercolor],-tr[rowspan|width|height|align|valign|bgcolor|background|bordercolor],tbody,thead,tfoot,#td[colspan|rowspan|width|height|align|valign|bgcolor|background|bordercolor|scope],#th[colspan|rowspan|width|height|align|valign|scope],caption,-div,-span,-code,-pre,address,-h1,-h2,-h3,-h4,-h5,-h6,hr[size|noshade],-font[face|size|color],dd,dl,dt,cite,abbr,acronym,del[datetime|cite],ins[datetime|cite],object[classid|width|height|codebase|*],param[name|value|_value],embed[type|width|height|src|*],script[src|type],map[name],area[shape|coords|href|alt|target],bdo,button,col[align|char|charoff|span|valign|width],colgroup[align|char|charoff|span|valign|width],dfn,fieldset,form[action|accept|accept-charset|enctype|method],input[accept|alt|checked|disabled|maxlength|name|readonly|size|src|type|value],kbd,label[for],legend,noscript,optgroup[label|disabled],option[disabled|label|selected|value],q[cite],samp,select[disabled|multiple|name|size],small,textarea[cols|rows|disabled|name|readonly],tt,var,big,iframe[width|src|height|frameborder|name|readonly|gesture|allow|allowfullscreen],div[class|id],h1[class|id],h2[class|id],h3[class|id],h4[class|id],h5[class|id],h6[class|id],p[class|id]",
                        selector: "#Content",
                    //skin: 'light',
                    height : "380",
                    //resize: "both",
                    //theme_advanced_resizing : true,
                    //inline: false,
                    //statusbar: false,
                    menubar : false,
                    plugins: [
                    "link image table Cicerofilemanager code"
                    ],
                    toolbar: "bold italic bullist numlist outdent indent | undo redo | styleselect | link  table Cicerofilemanager | code",
                    file_browser_callback: "Cicerofilemanager",
                    upload_path:'/admin/media/pick.html',
                    theme_advanced_buttons1 : "Cicerofilemanager",
                    document_base_url: '@Url.Content("/")',
                        //relative_urls : false,
//remove_script_host : false,
convert_urls : false,
                });
    </script>

}
