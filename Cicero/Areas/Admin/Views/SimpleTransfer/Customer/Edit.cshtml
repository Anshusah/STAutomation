@using Cicero.Service.Services
@using Cicero.Service.Models
@using Cicero.Service.Models.SimpleTransfer.Customer
@using Cicero.Service.Helpers
@using  Cicero.Service.Services.SimpleTransfer
@model CustomerUserViewModel
@inject IUserService _userService
@inject IMediaService _mediaService
@inject ICommonService commonService
@inject IListService listService
@inject Permission Permission
@inject Utils utils
@inject Cicero.Service.Services.SimpleTransfer.ITransactionMgmtService ITransactionMgmtService

@{

    ViewBag.Title = Utils.CreateOrEdit(Model) + " Customers";
    var tenantId = commonService.GetTenantIdByIdentifier(utils.GetTenantFromSession());
    var groupList = await _mediaService.GetMediaGroup(tenantId);
    var d = "disabled";
    if (Permission.Can(UserCan.Create_User) && Permission.Can(UserCan.Update_User) && Permission.Can(UserCan.Delete_User) && Permission.Can(UserCan.View_User) && Permission.Can(UserCan.Edit_Profile))
    {
        d = "";
    }
    var countryList = listService.GetSenderCountryList();
    var baseApiUrl = ITransactionMgmtService.GetBaseUrl();
}

<style>

    .image--list {
        background-color: antiquewhite;
        /*height: auto;*/
        /*width: auto;*/
    }

        .image--list img {
            height: 50%;
            width: 50%;
        }

    #lexisNexisReportModal .modal-body {
        position: absolute;
        left: 0;
        right: 0;
        bottom: 0;
        top: 0px;
    }

    #lexisNexisReportModal iframe {
        display: block;
        width: 100%;
        height: 100%;
    }

    #lexisNexisReportModal .modal-dialog {
        width: 100%;
        height: 100%;
        margin: 0;
        padding: 0;
        max-width: 100%;
    }

    #lexisNexisReportModal .modal-content {
        height: auto;
        min-height: 100%;
        border-radius: 0;
    }

    #lexisNexisReportModal .modal-header {
        position: absolute;
        bottom: 0;
        top: 0;
        left: 0;
        right: 0;
    }

    #lexisNexisReportModal .modal-footer {
        width: 100%;
        position: absolute;
        bottom: 0;
        background-color: #FFF;
    }
</style>

<div class="page-wrapper">
    <div class="page-header">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb bg-none p-0">
                <li class="breadcrumb-item">
                    <a href="@Url.Content("~/st/admin" + utils.GetTenantForUrl(false) + ".html")">Home</a>
                </li>
                <li class="breadcrumb-item">
                    <a href="@Url.Content("~/st/admin" + utils.GetTenantForUrl(false) + "/customers.html")">Customers</a>
                </li>
                <li class="breadcrumb-item active" aria-current="page">@Utils.CreateOrEdit(Model) Customers</li>
            </ol>
        </nav>
        <div class="page-header__main">
            <h3 class="page-title">Manage Customers</h3>
            @if (Permission.Can(UserCan.Create_User))
            {
                <div class="page-toolbar">
                    <a href="@Url.Content("~/st/admin" + utils.GetTenantForUrl(false) + "/customers/0/edit.html")" class="btn btn-primary"><i class="btn__icon ri-add-circle-line"></i><span class="btn__label">Add new record</span></a>
                </div>
            }
        </div>
    </div>
    <div class="page-content">
        <div class="page-form-container">
            <form action="@Url.Content("~/st/admin" + utils.GetTenantForUrl(false) + "/customers/"+Model.Id+"/edit.html")" method="post" class="page-container grid-horizontal-viewport">
                <div class="page-aside">
                    <div class="aside-wrapper">
                        <div class="aside-header">
                            <h5>Manage Customers</h5>
                            <p>This section helps you to add/edit or delete Customers. Please make changes on required fields and Click on "Save Change" buttons.</p>
                        </div>
                        <div class="aside-body">
                            <div class="form-group ">
                                <label class="mr-2">Status</label>
                                <div class="custom-control custom-switch">
                                    <input asp-for="Status" type="checkbox" class="custom-control-input" id="customSwitchstatus" value="@Model.Status">
                                    <label class="custom-control-label" for="customSwitchstatus"></label>
                                </div>
                            </div>
                            <div class="form-group ">
                                <label class="mr-2">Add to blacklist</label>
                                <div class="custom-control custom-switch"><input type="checkbox" class="custom-control-input" id="customSwitchBlaclist"><label class="custom-control-label" for="customSwitchBlaclist"></label></div>

                            </div>
                            @*<div class="form-group">
                                    <label>Status</label><br />
                                    <div class="custom-control custom-radio custom-control-inline">
                                        @Html.RadioButtonFor(model => model.Status, 1, new { @id = "enable", @class = "custom-control-input" })
                                        <label class="custom-control-label" for="enable">Active</label>
                                    </div>
                                    <div class="custom-control custom-radio custom-control-inline">
                                        @Html.RadioButtonFor(model => model.Status, 0, new { @id = "disable", @class = "custom-control-input" })
                                        <label class="custom-control-label" for="disable">Inactive</label>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label>Lockout</label><br />
                                    <div class="custom-control custom-radio custom-control-inline">
                                        @Html.RadioButtonFor(model => model.Lockout, 1, new { @id = "enableLockOut", @class = "custom-control-input" })
                                        <label class="custom-control-label" for="enableLockOut">Enable</label>
                                    </div>
                                    <div class="custom-control custom-radio custom-control-inline">
                                        @Html.RadioButtonFor(model => model.Lockout, 0, new { @id = "disableLockOut", @class = "custom-control-input" })
                                        <label class="custom-control-label" for="disableLockOut">Disable</label>
                                    </div>
                                </div>*@
                            <div class="form-group">
                                <label>Validate IP</label>
                                <div class="custom-control custom-switch"><input type="checkbox" class="custom-control-input" id="customSwitchValidateIP"><label class="custom-control-label" for="customSwitchValidateIP"></label></div>

                            </div>
                            <div class="form-group">
                                <label>User Locked</label>
                                <div class="custom-control custom-switch">
                                    <input asp-for="Lockout" type="checkbox" class="custom-control-input" id="customSwitchenableUser" value="@Model.Lockout">
                                    <label class="custom-control-label" for="customSwitchenableUser">
                                    </label>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.IsOnfidoVerify)
                                    <input asp-for="IsOnfidoVerify" class="form-control-plaintext font-weight-bold p-0" readonly="readonly" />
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.OnfidoChecksResult)
                                    <input asp-for="OnfidoChecksResult" class="form-control-plaintext font-weight-bold p-0" readonly="readonly" />
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.IsSanctionMatch)
                                    <input asp-for="IsSanctionMatch" class="form-control-plaintext font-weight-bold p-0" readonly="readonly" />
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.IsPepMatch)
                                    <input asp-for="IsPepMatch" class="form-control-plaintext font-weight-bold p-0" readonly="readonly" />
                                </div>
                            </div>

                            <div class="form-group">
                                <label>Created</label>
                                <input type="text" value="@Model.CreatedAt" name="CreatedAt" id="CreatedAt" class="form-control-plaintext font-weight-bold p-0" readonly="readonly">
                            </div>
                            <div class="form-group">
                                <label>Last updated</label>
                                <input type="text" value="@Model.UpdatedAt" name="UpdatedAt" id="UpdatedAt" class="form-control-plaintext font-weight-bold p-0" readonly="readonly">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="page-body">
                    <div class="form-wrapper">
                        @Html.AntiForgeryToken()
                        <div class="status"></div>
                        <div asp-validation-summary="All" role="alert"></div>
                        <input type="hidden" name="Id" value="@Model.Id" />
                        <input type="hidden" name="TenantId" value="@Model.TenantId" />
                        <div class="form-body">
                            @*<div class="form-group">
                                    <label>Status</label><br />
                                    <div class="custom-control custom-radio custom-control-inline">
                                        @Html.RadioButtonFor(model => model.Status, 1, new { @id = "enable", @class = "custom-control-input" })
                                        <label class="custom-control-label" for="enable">Active</label>
                                    </div>
                                    <div class="custom-control custom-radio custom-control-inline">
                                        @Html.RadioButtonFor(model => model.Status, 0, new { @id = "disable", @class = "custom-control-input" })
                                        <label class="custom-control-label" for="disable">Inactive</label>
                                    </div>
                                </div>*@

                            <div class="form-group d-none">
                                @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "required" })
                                <input asp-for="UserId" class="form-control" autocomplete="off" id="userId" value="@Model.Id" disabled />
                                @Html.ValidationMessageFor(m => m.UserId, "", new { @class = "text-danger" })
                            </div>

                            @*<div class="form-group">
                                    <label>Created</label>
                                    <input type="text" value="@Model.CreatedAt" name="CreatedAt" id="CreatedAt" class="form-control-plaintext" readonly="readonly" />
                                </div>

                                <div class="form-group">
                                    <label>Last updated</label>
                                    <input type="text" value="@Model.UpdatedAt" name="UpdatedAt" id="UpdatedAt" class="form-control-plaintext" readonly="readonly" />
                                </div>*@
                            <div class="form-row">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "required" })
                                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control form-value", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "required" })
                                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control form-value", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group" hidden>
                                <label asp-for="RoleId"></label>
                                @if (d == "disabled")
                                {
                                    <select asp-for="RoleId" asp-items="Model.RoleList" class="custom-select" readonly>
                                        <option value="">Select Category</option>
                                    </select>
                                }
                                else
                                {
                                    <select asp-for="RoleId" asp-items="Model.RoleList" class="custom-select" readonly>
                                        <option value="">Select Category</option>
                                    </select>
                                }

                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "required" })
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-row">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label>Tenant/Company</label>
                                        <select class="custom-select form-value" disabled>
                                            <option value="company" selected="selected">Company</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label>Country</label>
                                        <select class="custom-select form-value" disabled>
                                            @foreach (var item in countryList)
                                            {
                                                <option value="@item.Value" selected="selected">@item.Text</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>

                            <div class="form-row">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label>Username</label>
                                        <input type="text" asp-for="Email" class="form-control" name="username" />
                                    </div>
                                </div>

                                <div class="col-lg-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "required" })
                                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            @if (Model.Id == "0")
                            {
                                <div class="form-row">
                                    <div class="col-lg-6">
                                        <div class="form-group ">
                                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "" })
                                            @Html.PasswordFor(model => model.Password, new { @class = "form-control", id = "Password", data_val = "false" })
                                            @if (Model.Id != "0")
                                            {
                                                <small class="form-text text-muted">Leave it as blank if you want to keep old Password.</small>
                                            }
                                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-lg-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "" })
                                            @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            }

                            <div class="form-row">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.PostCode, htmlAttributes: new { @class = "required" })
                                        <input type="text" class="form-fields form-control form-value" asp-for="PostCode" id="PostCode" required readonly>
                                        <span asp-validation-for="PostCode" class="text-danger"></span>
                                    </div>
                                </div>

                                <div class="col-lg-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "required" })
                                        <input type="text" class="form-fields form-control form-value" asp-for="City" id="City" required readonly>
                                        <span asp-validation-for="City" class="text-danger"></span>
                                    </div>

                                </div>

                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "required" })
                                @Html.TextAreaFor(model => model.Address, new { @class = "form-control form-value", data_val = "false", @readonly = "readonly" })
                                @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
                            </div>

                            @if (Model.Id != "0")
                            {
                                <div class="form-row">
                                    <div class="col-lg-6">
                                        <div class="form-group">
                                            <label>Date of Birth</label>
                                            <input type="text" asp-for="DOB" class="form-control" readonly />
                                        </div>
                                    </div>

                                    <div class="col-lg-6">
                                        <div class="form-group">
                                            <label>Id Type</label>
                                            <input type="text" asp-for="IdType" class="form-control" readonly />
                                        </div>
                                    </div>
                                </div>

                                <div class="form-row">
                                    <div class="col-lg-6">
                                        <div class="form-group">
                                            <label>Id Number</label>
                                            <input type="text" asp-for="IdNumber" class="form-control" readonly />
                                        </div>
                                    </div>

                                    <div class="col-lg-6">
                                        <div class="form-group">
                                            <label>Id Expiration Date</label>
                                            <input type="text" asp-for="IdExpirationDate" class="form-control" readonly />
                                        </div>
                                    </div>
                                </div>
                            }

                            <div class="form-group">
                                <div class="fileuploader fileuploader--theme-avatar p-0 align-items-start">
                                    <div class="fileuploader__wrapper" style="display: none">
                                        <div class="fileuploader__list">
                                            <ul class="media-list fileuploader__items">
                                                @foreach (var item in _userService.GetImagesByUserId(Model.Id).Take(1))
                                                {
                                                    @if (System.IO.Path.GetExtension(item.Url) == ".pdf")
                                                    {
                                                        <li class="thumbs fileuploader__item">
                                                            <a href="javascript:void(0)">
                                                                <img src="/uploads/pdf-icon.png">
                                                                <i class="fas" aria-hidden="true">
                                                                    <img src='/frontend/img/delete.png' />
                                                                </i>
                                                            </a>
                                                            <input type="hidden" name="images[]" value="@item.Id">
                                                        </li>
                                                    }
                                                    else if (System.IO.Path.GetExtension(item.Url) == ".doc" || System.IO.Path.GetExtension(item.Url) == ".docx" || System.IO.Path.GetExtension(item.Url) == ".txt")
                                                    {
                                                        <li class="thumbs fileuploader__item">
                                                            <a href="javascript:void(0)">
                                                                <img src="/uploads/doc-icon.png">
                                                                <i class="fas" aria-hidden="true">
                                                                    <img src='/frontend/img/delete.png' />
                                                                </i>
                                                            </a>
                                                            <input type="hidden" name="images[]" value="@item.Id">
                                                        </li>
                                                    }
                                                    else
                                                    {
                                                        <li class="thumbs fileuploader__item">
                                                            <div class="fileuploader__item-image">
                                                                <img src="/uploads/@item.Url">
                                                                <!-- <i class="fas" aria-hidden="true"><img src='/frontend/img/delete.png' /></i> -->
                                                            </div>
                                                            <div class="actions-holder">
                                                                <button class="btn fileuploader__action fileuploader__action-remove" type="button" title="Remove">
                                                                    <i class="fileuploader__icon-remove remixicon-close-circle-fill" aria-hidden="true"></i>
                                                                </button>
                                                            </div>
                                                            <input type="hidden" name="images[]" value="@item.Id">
                                                        </li>
                                                    }
                                                }
                                                <!-- <li class="thumbs add fileuploader__input"><button type="button" class="btn btn-link fileuploader__input-button" data-media='{OnInit:function(){this.size="modal-lg";this.button.cancel="Cancel";this.button.insert="Insert Media";this.open();},OnInsert:function(e){Cicero.User.InsertImages(e)},OnCancelled:function(){this.close();}}'>Browse</button></li> -->
                                            </ul>
                                        </div>
                                    </div>
                                    <label>Upload User Profile</label>
                                    <div class="custom-file thumbs add fileuploader__input">
                                        <input type="button" class="custom-file-input fileuploader__input-button" id="uploadUserProfile" data-media='{OnInit:function(){this.size="modal-lg";this.button.cancel="Cancel";this.button.insert="Insert Media";this.open();},OnInsert:function(e){Cicero.User.InsertImages(e)},OnCancelled:function(){this.close();}}'>
                                        <label class="custom-file-label ">Choose file</label>
                                    </div>
                                </div>
                            </div>

                            <div class="form-row">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <button type="button" data-toggle="modal" data-target="#assignGroupModal" class="btn btn-outline-secondary">Assign Group</button>
                                    </div>
                                </div>
                            </div>

                            @if (Model.Id != "0")
                            {
                                @if (Model.OnfidoDocuments != null && Model.OnfidoDocuments.Count > 0)
                                {
                                    <div class="form-row">
                                        <div class="col-lg-6">
                                            <div class="form-group">
                                                <button type="button" data-toggle="modal" data-target="#viewDocumentModal" class="btn btn-outline-secondary">View Documents</button>
                                            </div>
                                        </div>
                                    </div>
                                }

                                @if (Model.BeneficiaryList != null && Model.BeneficiaryList.Count > 0)
                                {
                                    <div class="form-row">
                                        <div class="col-lg-6">
                                            <div class="form-group">
                                                <h5>Beneficiary List</h5>
                                                <ul>
                                                    @foreach (var item in Model.BeneficiaryList)
                                                    {
                                                        <li>
                                                            <a href="#" class="">@item.Text</a>
                                                        </li>
                                                    }
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                }

                                @if (Model.LexisNexisReports != null && Model.LexisNexisReports.Count > 0)
                                {
                                    <div class="form-row">
                                        <div class="col-lg-6">
                                            <div class="form-group">
                                                <h5>Lexis Nexis Reports</h5>
                                                <ul>
                                                    @foreach (var item in Model.LexisNexisReports)
                                                    {
                                                        <li>
                                                            <a href="#" class="lexisnexis-report" data-value="@item.Value">@item.Text</a>
                                                        </li>
                                                    }
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                }


                                @if (Model.SanctionPepPerson != null && Model.SanctionPepPerson.Count > 0)
                                {
                                    <div class="form-row">
                                        <div class="col-lg-12">
                                            <div class="form-group">
                                                <h5>Matched Person Lists</h5>
                                                <input type="text" asp-for="PersonId" hidden />
                                                <table class="table table-striped">
                                                    <thead>
                                                        <tr>
                                                            <th></th>
                                                            <th>Name</th>
                                                            <th>Match Score</th>
                                                            <th>Addresses</th>
                                                            <th>Country</th>
                                                            <th>Reason</th>
                                                            <th>Date of Birth</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @foreach (var item in Model.SanctionPepPerson)
                                                        {
                                                            <tr data-id="@item.Id">
                                                                <td class="person"><input type="radio" name="person" /></td>
                                                                <td>@item.NameField</td>
                                                                <td>@item.MatchScoreField</td>
                                                                <td>@item.AddressesField</td>
                                                                <td>@item.CountryField</td>
                                                                <td>@item.SourceField</td>
                                                                <td>@item.DOBField</td>
                                                            </tr>
                                                        }
                                                    </tbody>
                                                </table>
                                                <span asp-validation-for="PersonId" class="text-danger"></span>

                                                <hr />
                                                <h5>Match</h5>
                                                <input type="radio" name="match" value="confirmMatch" asp-for="Match" id="confirmMatch" /> <label for="confirmMatch">Confirm Match</label>
                                                <input type="radio" name="match" value="noMatch" asp-for="Match" id="noMatch" /> <label for="noMatch">No Match</label>
                                                <h5>Remarks</h5>
                                                <textarea class="form-control" rows="4" asp-for="Remarks" disabled></textarea>
                                                <span asp-validation-for="Remarks" class="text-danger"></span>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }

                        </div>

                        @*<input type="text" name="Ids" id="Ids" value="[]" hidden />*@
                        <div id="assignGroupModal" class="modal fade" tabindex="-1" role="dialog">
                            <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title">Assign Group</h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        <div class="form-group group-add__form">
                                            <label for="inputGroupName">Add new group</label>
                                            <div class="input-group">
                                                <input type="text" class="form-control" name="inputGroupName" id="inputGroupName" onkeydown="return (event.keyCode!=13);" placeholder="Type group name">
                                                <div class="input-group-append">
                                                    <button type="button" id="addGroupBtn" class="btn btn-outline-secondary">Add</button>
                                                </div>
                                            </div>
                                            <span id="inputGroupNameSpan" class="text-danger"></span>
                                        </div>

                                        @foreach (var item in groupList)
                                        {
                                            var c = "";
                                            if (Model.Ids != null && Model.Ids.Contains(item.Id.ToString()))
                                            {
                                                c = "checked";
                                            }
                                            <div class="form-group group-add__item">
                                                <div class="checkboxDiv group-add__checkbox">
                                                    <div class="custom-control custom-checkbox">
                                                        <input type="checkbox" name="Ids" value="@item.Id" @c class="custom-control-input" id="gid_@item.Id" /><label class="custom-control-label" for="gid_@item.Id">@item.Title</label>
                                                    </div>
                                                </div>
                                                <div class="group-add__form-edit">
                                                    <div class="group-add__form-control">
                                                        <input type="text" class="form-control groupName">
                                                    </div>
                                                    <div class="group-add__form-actions">
                                                        <div class="group-add__form-action-save">
                                                            <button type="button" class="btn btn-link btn-sm saveEditGroupBtn" data-mediaid="@item.Id" title="Save">Save</button>
                                                            <button type="button" class="btn btn-link btn-sm cancelEditGroupBtn" title="Cancel">Cancel</button>
                                                        </div>
                                                        <div class="group-add__form-action-edit">
                                                            <button type="button" class="btn btn-outline-secondary btn-sm editGroupBtn" data-mediaid="@item.Id" title="Edit"><i class="ri-pencil-line"></i><span class="sr-only">Edit</span></button>
                                                            <button type="button" class="btn btn-outline-secondary btn-sm" data-confirm='{OnInit:function(){this.size="";this.title="Confirm"; this.content="Are you sure you want to apply selected action?";this.button.cancel="Cancel";this.button.confirm="Confirm Apply";this.open();},OnConfirm:function(){deleteGroup(@item.Id);},OnCancelled:function(){this.close();}}' data-mediaid="@item.Id" title="Delete"><i class="ri-close-line"></i><span class="sr-only">Delete</span></button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }

                                    </div>
                                    <div class="modal-footer">
                                        @*<button type="button" class="btn btn-primary">Save</button>*@
                                        <button type="button" class="btn btn-primary" data-dismiss="modal">Save</button>
                                    </div>
                                </div>
                            </div>
                        </div>


                        <div class="form-footer">
                            @if ((Model.Id == "0" && Permission.Can(UserCan.Create_User)) || (Model.Id != "0" && Permission.Can(UserCan.Update_User)) || (Model.Id == _userService.getLoggedInUserId() && Permission.Can(UserCan.Edit_Profile)))
                            {
                                <button type="submit" class="btn btn-primary">Update Changes</button>
                            }
                            <a class="btn btn-outline-secondary btn-back" href="@Url.Content("~/st/admin" + utils.GetTenantForUrl(false) + "/customers.html")">Go back</a>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<div id="viewDocumentModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Documents</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body pt-0">
                <div class="img-container p-0 bg-light">
                    @if (Model.OnfidoDocuments != null && Model.OnfidoDocuments.Count > 0)
                    {
                        @foreach (var item in Model.OnfidoDocuments)
                        {

                            <img src="@("/onfido/uploads/" + item)" alt="" class="img-thumbnail my-2">

                        }
                    }
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div id="lexisNexisReportModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Report</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body pt-0">
                <iframe id="iframeView"></iframe>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<script>
    var id = '@Model.Id';
    if (id === "0") {
        $('.form-value').removeAttr("readonly");
        $('.form-value').removeAttr("disabled");
    }
    $('#addGroupBtn').on('click', function () {
        var groupName = $('#inputGroupName').val();

        if (groupName == "") {
            $('#inputGroupNameSpan').text("Please type group name.");
            return false;
        }

        if (groupName.length > 20) {
            $('#inputGroupNameSpan').text("Please type group name less than 20 characters.");
            return false;
        }

        var url = '/admin/mediaGroup/creategroup.html?groupName=' + groupName;
        $.post(url, function (result) {
            if (result != 0) {
                $('#inputGroupName').val(null);
                var dataConfirm = '{OnInit:function(){this.size="";this.title="Confirm";this.content="Are you sure you want to apply selected action?";this.button.cancel="Cancel";this.button.confirm="Confirm Apply";this.open();},OnConfirm:function(){deleteGroup(' + result + ');},OnCancelled:function(){this.close();}}';

                var datas = '<div class="group-add__form-edit">' +
                    '<div class="group-add__form-control"><input type="text" class="form-control groupName"></div>' +
                    '<div class="group-add__form-actions">' +
                    '<div class="group-add__form-action-save">' +
                    '<button type="button" class="btn btn-link btn-sm saveEditGroupBtn" data-mediaid="' + result + '" title="Save">Save</button>' +
                    '<button type="button" class="btn btn-link btn-sm cancelEditGroupBtn" title="Cancel">Cancel</button>' +
                    '</div>' +
                    '<div class="group-add__form-action-edit">' +
                    '<button type="button" class="btn btn-outline-secondary btn-sm editGroupBtn" data-mediaid="' + result + '" title="Edit"><i class="ri-pencil-line"></i><span class="sr-only">Edit</span></button>' +
                    '<button type="button" class="btn btn-outline-secondary btn-sm deleteGroupBtn" data-mediaid="' + result + '" title="Delete"><i class="ri-close-line"></i><span class="sr-only">Delete</span></button>' +
                    '</div>' +
                    '</div>' +
                    '</div>';

                var divData = '<div class="form-group group-add__item"><div class="group-add__checkbox"><div class="custom-control custom-checkbox"><input type="checkbox" name="Ids" class="custom-control-input" value="' + result + '" id="gid_' + result + '"><label class="custom-control-label" for="gid_' + result + '">' + groupName + '</label></div></div>' + datas + '</div>';
                $('.modal-body').append(divData);
                $('button.deleteGroupBtn[data-mediaid=' + result + ']').attr("data-confirm", dataConfirm)
            }
        })
    })

    $('#inputGroupName').on('keyup', function () {
        var value = $(this).val();
        $('#inputGroupNameSpan').text("");
        if (value == "") {
            $('#inputGroupNameSpan').text("Please type group name.");
        }

    })

    $(document).on('click', '.editGroupBtn', function () {
        //debugger
        var value = $(this).parents('.group-add__item').find('.custom-control-label').text();
        $(this).parents(".group-add__item").addClass("group-add--edit");
        $(this).parents('.group-add__item').find('.groupName').val(value);
    })

    $(document).on('click', '.saveEditGroupBtn', function () {
        //debugger
        var thisEvent = $(this);
        var groupName = $(this).parents('.group-add__item').find('.groupName').val();

        if (groupName == "") {
            toastr.warning("Please type group name.");
            return false;
        }

        if (groupName.length > 20) {
            toastr.warning("Please type group name less than 20 characters.");
            return false;
        }

        var mediaId = $(this).attr('data-mediaid');
        var url = '/admin/mediaGroup/creategroup.html?groupName=' + groupName + "&mediaId=" + mediaId;
        $.post(url, function (result) {
            if (result != 0) {
                thisEvent.parents('.group-add__item').find('.custom-control-label').text(groupName);
                thisEvent.parents(".group-add__item").removeClass("group-add--edit");
            }
        })
    })

    function deleteGroup(id) {
        //debugger
        var url = '/admin/media/remove.html?mediaId=' + id;
        $.post(url, function (result) {
            if (result) {
                $('button[data-mediaid=' + id + ']').parents('.form-group').remove();
            }
        })
    }

    //$(document).on('click', '.deleteGroupBtn', function (e) {
    //    //debugger
    //    var thisEvent = $(this);
    //    var mediaId = $(this).attr('data-mediaid');
    //    var url = '/admin/media/remove.html?mediaId=' + mediaId;
    //    $.post(url, function (result) {
    //        if (result) {
    //            thisEvent.parents('.form-group').remove();
    //        }
    //    })
    //})

    $(document).on('click', '.cancelEditGroupBtn', function (e) {
        $(this).parents(".group-add__item").removeClass("group-add--edit");
    })

    $("#customSwitchstatus").click(function () {
        // Ajax request
        $.ajax({
            url: '/st/user/updateuserstatus',
            data: {
                userId: $("#userId").val(),
                status: $(this).val()
            },
            error: function () {
                toastr.error('An error has occurred');
            },
            dataType: 'json',
            success: function (data) {
                toastr.success('Success');
            },
            type: 'GET'
        });
    });

    $("#customSwitchenableUser").click(function () {
        // Ajax request
        $.ajax({
            url: '/st/user/updateuserlockout',
            data: {
                userId: $("#userId").val(),
                status: $(this).val()
            },
            error: function () {
                toastr.error('An error has occurred');
            },
            dataType: 'json',
            success: function (data) {
                toastr.success('Success');
            },
            type: 'GET'
        });
    });

    $(".lexisnexis-report").click(function (e) {
        var baseapiUrl = "@baseApiUrl";
        var url = $(this).attr("data-value");
        $.ajax({
            url: baseapiUrl + '/api/lexisnexis/retrievereport',
            type: 'GET',
            data: {
                url: url
            },
            success: function (response) {
                $("#iframeView").contents().find('html').html("");
                const getBlobURL = (code, type) => {
                    const blob = new Blob([code], { type })
                    return URL.createObjectURL(blob)
                }

                var url = getBlobURL(response, 'text/html');
                const iframe = document.querySelector('#iframeView')
                iframe.src = url
                $('#lexisNexisReportModal').modal("toggle");
            },
            error: function () {
                toastr.error('An error has occurred');
            }
        });
    });

    $('input[name="match"]').on("change", function (e) {
        var value = $(this).val();
        if (value == "noMatch") {
            $('.person input[type=radio]:checked').prop('checked', false);
            $('#PersonId').val("")
        }
        $('#Remarks').removeAttr('disabled');
    });

    $('table tr').click(function () {
        $(this).find('input:radio').prop('checked', true);
        var id = $(this).attr("data-id");
        $('#PersonId').val(id)
        $('#confirmMatch').prop('checked', true).trigger('change');
        $('span[data-valmsg-for="PersonId"]').removeClass();
        $('span[data-valmsg-for="PersonId"]').addClass(["text-danger", "field-validation-valid"]);
        $('span[data-valmsg-for="PersonId"]').text("");
    });

    $(document).ready(function () {
        var personId = "@Model.PersonId";
        var match = "@Model.Match";
        if (match !== "") {
            $('#Remarks').removeAttr('disabled');
        }
        if (personId !== "") {
            $('tr[data-id=' + personId + ']').find('input').prop('checked', true);
        }

        $('#Remarks').on("focusout", function () {
            $('span[data-valmsg-for="Remarks"]').removeClass();
            $('span[data-valmsg-for="Remarks"]').addClass(["text-danger", "field-validation-valid"]);
            $('span[data-valmsg-for="Remarks"]').text("");
        })
    })
</script>
