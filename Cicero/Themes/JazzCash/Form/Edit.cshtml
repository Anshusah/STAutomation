@using Cicero.Service.Services
@using Cicero.Service.Models
@using Cicero.Service.Helpers
@using Microsoft.AspNetCore.Http;
@model CaseViewModel
@inject ICaseService caseService
@inject AppSetting _appSetting
@inject Utils  _utils
@inject ICommonService _commonService
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{
    ViewData["body"] = "";
    ViewData["Title"] = "Transfer";
    var isOnfidoVerify = TempData["isOnfidoVerify"];
    dynamic data = new object();
    if (Model.Id != 0)
    {
        data = Json.Serialize((dynamic)ViewBag.formData);
    }
    FormBuilderViewModel fbvm = Model.FormBuilder as FormBuilderViewModel;

    Cicero.Service.Models.Core.FormBuilder FB = new Cicero.Service.Models.Core.FormBuilder() { FormData = fbvm, Side = "frontend", HttpContext = HttpContextAccessor.HttpContext };
    var sdkToken = HttpContextAccessor.HttpContext.Session.GetString("sdkToken");
}
<link rel="stylesheet" href="/Themes/Blue/querybuilder/node_modules/bootstrap-select/dist/css/bootstrap-select.css">
<link href="~/scrollable-tab plugin/jquery.scrolling-tabs.min.css" rel="stylesheet" />
<link href="~/flag-icon/css/flag-icon.min.css" rel="stylesheet" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet" />
<link href="~/onfido/dist/style.css" rel="stylesheet" />
<style>
    .case__top {
        padding: 2rem;
        background: #fff;
        z-index: 1;
    }

        .case__top .breadcrumb {
            padding: 0;
            background: transparent;
        }

    .case__header-wrapper {
        display: flex;
        justify-content: space-between;
        align-items: flex-end;
    }

    .case__action {
        text-align: right;
    }

    .case__title-text {
        display: inline;
        vertical-align: middle;
        margin: 0;
        font-size: 1.5rem;
        font-weight: bold;
    }

    .case__meta {
        margin-top: 0.5rem;
    }

    .case__type-name {
        display: inline;
    }

    .case__created-time {
        display: inline;
        margin-left: 0.5rem;
    }

    .scrtabs-tab-container {
        display: flex;
        flex-grow: 1;
        overflow: hidden;
        height: auto;
    }

        .scrtabs-tab-container .nav-tabs {
            border: 0;
        }

    .scrtabs-tabs-fixed-container {
        height: auto;
    }

        .scrtabs-tabs-fixed-container .nav-tabs .nav-link {
            border-top-width: 0;
            border-left-width: 0;
            border-right-width: 0;
        }

        .scrtabs-tabs-fixed-container ul.nav-tabs > li {
            margin-bottom: 0;
        }

    .scrtabs-tab-scroll-arrow {
        border: 0;
        padding-top: 0;
        width: 2.5rem;
        height: 100%;
        color: var(--gray);
        font-size: 1rem;
        border-radius: 50%;
    }

        .scrtabs-tab-scroll-arrow:hover {
            background: #fff;
        }

        .scrtabs-tab-scroll-arrow span {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100%;
        }

    #loading {
        width: 100%;
        z-index: 9;
        height: 100%;
        position: fixed;
        top: 0;
        left: 0;
        background-color: rgba(255, 255, 255, 0.8);
    }

    #loading2 {
        width: 100%;
        z-index: 9;
        height: 100%;
        position: fixed;
        top: 0;
        left: 0;
        background-color: rgba(255, 255, 255, 0.8);
    }

    .spinner-border {
        margin-left: 40%;
    }

    .repeat-item-body .repeatItem {
        display: block !important;
    }

    .repeatItem {
        display: none;
    }
</style>
<style>
    .row > .column {
        padding: 0 8px;
    }

    .row:after {
        content: "";
        display: table;
        clear: both;
    }

    /* Create four equal columns that floats next to eachother */
    .column {
        float: left;
        width: 25%;
    }

    /* The Modal (background) */
    .modal {
        /* display: none;
        position: fixed;
        z-index: 99999999999999;
        padding-top: 100px;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: black; */
    }

    .modal-content {
        /* position: relative;
        background-color: #fefefe;
        margin: auto;
        padding: 0;
        width: 90%;
        max-width: 1200px; */
    }

    /* The Close Button */
    .close {
        /* color: white;
        position: absolute;
        top: 10px;
        right: 25px;
        font-size: 35px;
        font-weight: bold; */
    }

        .close:hover,
        .close:focus {
            /* color: #999;
            text-decoration: none;
            cursor: pointer; */
        }

    /* Hide the slides by default */
    .mySlides {
        display: none;
    }

    /* Next & previous buttons */
    .prev,
    .next {
        /* cursor: pointer; */
        /*position: absolute;*/
        /* top: 50%;
        width: auto;
        padding: 16px;
        margin-top: -50px;
        color: white;
        font-weight: bold;
        font-size: 20px;
        transition: 0.6s ease;
        border-radius: 0 3px 3px 0;
        user-select: none;
        -webkit-user-select: none; */
    }

    /* Position the "next button" to the right */
    .next {
        /* right: 0;
        border-radius: 3px 0 0 3px; */
    }

        /* On hover, add a black background color with a little bit see-through */
        .prev:hover,
        .next:hover {
            /* background-color: rgba(0, 0, 0, 0.8); */
        }

    /* Number text (1/3 etc) */
    .numbertext {
        /* color: #f2f2f2;
        font-size: 12px;
        padding: 8px 12px;
        position: absolute;
        top: 0; */
    }

    /* Caption text */
    .caption-container {
        /* text-align: center;
        background-color: black;
        padding: 2px 16px;
        color: white; */
    }

    img.demo {
        opacity: 0.6;
    }

    .active,
    .demo:hover {
        opacity: 1;
    }

    img.hover-shadow {
        transition: 0.3s;
    }

    .hover-shadow:hover {
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
    }

    .disable {
        pointer-events: none;
    }
</style>
<script src="~/js/jquery.inputmask.min.js"></script>
<script src="~/js/inputmask.min.js"></script>
<script src="~/js/inputmask.binding.js"></script>

<div id='onfido-mount'></div>
<div id="loading" style="display:none;">
    <div class="spinner">
        <div class="spinner-border" role="status">
            <span class="sr-only">Loading...</span>

        </div>
        <div class="text-center">Saving form data please wait.</div>
    </div>
</div>

<div id="loading2" style="display:none;">
    <div class="spinner">
        <div class="spinner-border" role="status">
            <span class="sr-only">Loading...</span>

        </div>
        <div class="text-center">Please Wait.</div>
    </div>
</div>
<div>
    <div class="vertical-layout">
        @await Html.PartialAsync("../Shared/_Payer-header.cshtml")
        <main class="main-content" role="main">
            <form id="caseform" action="@Url.Content("~/admin/form/"+ _utils.GetTenantForUrl(true) + _utils.GetParams("form") + "/" + _utils.EncryptId(Model.Id) +"/edit.html")" method="post" class="form-layout st__form-layout" enctype="multipart/form-data">
                <input type="hidden" asp-for="Id" id="case_id" />
                <input type="hidden" name="encryptedcaseid" id="encryptedcaseid" />
                <input type="hidden" name="elmcaseid" id="elmcaseid" value="@_utils.EncryptId(Model.Id)" />
                <input type="hidden" name="elmformid" id="elmformid" value="@_utils.EncryptId(Model.Id)" />
                <input type="hidden" id="elmloggedinuser" name="elmloggedinuser" elm-name="elmloggedinuser" value="@_commonService.getLoggedInUserId()" />
                @if (Model.Id != 0)
                {
                    @Html.Raw(FB.Render(Model.Id, Model.StateId, Model.CaseFormId))
                }
                else
                {
                    @Html.Raw(FB.Render(Model.Id, Model.StateId, Model.CaseFormId))
                }
            </form>
        </main>

        @await Html.PartialAsync("../Shared/_Footer.cshtml")

    </div>
</div>

<script src="~/js/form_builder_render_frontendtab.js"></script>
<script src="~/js/form_builder_form_validation.js"></script>
<script src="~/js/render_form_data.js"></script>
<script src="~/scrollable-tab plugin/jquery.scrolling-tabs.min.js"></script>
<script src="/Themes/Blue/querybuilder/node_modules/bootstrap-select/dist/js/bootstrap-select.js"></script>
<script src="~/js/formbuilder-element-event-1.0.1.js"></script>
<script src="~/js/form_builder_render.js"></script>
<script src="~/js/simpleTransfer.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
<script>
    if (location.href.includes('?')) {
        history.pushState({}, null, location.href.split('?')[0]);
    }

    let radioGroupTB = $('[data-element-radio-ids]');
    var i = 0;
    $.each(radioGroupTB, function (k, l) {
        var _attr = $(this).attr('data-element-radio-ids');
        var ids = _attr.split(',');
        $.each(ids, function (index, value) {
            var _name = "elm" + value;
            var _element = $("[name=" + _name + "]");
            _element.attr('data-element-radio', i);
            if (_element.is(":checked")) {
                var className = _element.attr('class').split(' ').pop();
                $('input[type=text].' + className).val(_element.val());
            }
        })
        i++;
    });
    //$(document).on("click", ".payment-method-wrapper", function () {
    //    debugger
    //    //$(this).find('.radio-paymentMethod').click();
    //});
    $(document).on("change", "[data-element-radio]", function () {

        if ($(this).hasClass('radio-paymentMethod')) {
            var _parent = $(this).parents('.payment-method-wrapper')
            _parent.addClass('active');
            $('.payment-method-wrapper').not(_parent).each(function () {
                $(this).removeClass('active');
            });
        }
        var index = $(this).attr("data-element-radio");
        var className = $(this).attr('class').split(' ').pop();
        $('input[type=text].' + className).val($(this).val());
        $('[data-element-radio=' + index + ']').not(this).each(function () {
            if ($(this).is(":checked")) {
                $(this).prop("checked", false);
            }
        });
    });

    var cvm = @Html.Raw(Json.Serialize(Model));
    var tenant_identifier = '@_utils.GetTenantForUrl(true)';
    //for formbuilder-element js value init
    var form = '@_utils.GetParams("Form")';
    var formTagName = "caseform";
    //for formbuilder-element js value init end
    var allValues;
    localStorage.setItem("caseMedias", JSON.stringify([]));
    var isNew = "True";

    var isOnfidoVerify = '@isOnfidoVerify';
    if (isOnfidoVerify == "False") {
        toastr.info("You have not verified your identity yet. Do you want to verify now?<br /><br /><button type='button' onClick='triggerOnfido()' class='btn btn-success clear'>Yes</button><button type='button' class='btn btn-danger clear'>No</button>", { timeOut: 50000 });
    }
    else {
        $('.onfidoBtn').remove();
    }
</script>

@if (Model.Id != 0)
{

    <script>

        isNew = "False";
        $(function () {
            //clone collection for number field
            let cc = $('[number-target]');
            $.each(cc, function (k, l) {
                cloneByNumber(l);
            });
            allValues = JSON.parse('@data');

         var elems = $('[data-setvaluefrom]');
            $.each(elems, function (i, v) {
                var elemId = "elm" + $(v).attr("data-setvaluefrom");
                if ($(v).attr("data-elm-type") === "label") {
                    $(v).find('.label-text').text(allValues[elemId.toString()]);
                }
                else if ($('#' + elemId).attr('data-elm-type') === "label") {
                    allValues[v.id.toString()] = $('#' + elemId).find('.label-text').text();
                }
                else {
                    allValues[v.id.toString()] = allValues[elemId.toString()];
                }
            });


            renderData(allValues);
            setTimeout(function () {
                $('.pop').addClass("img__pop");
                $.each($('.pop'), function (i, v) {
                    $(this).attr("data-slide", (i + 1));
                })
                $('.pop').removeClass("pop");
                createLightBox();
            }, 1000);

        });
    </script>
}
else
{
    <script>

        //clone collection for number field
        let cc = $('[number-target]');
        if (cc > 0) {
            $.each(cc, function (k, l) {
                cloneByNumber(l);
            });
        }

    </script>

}
@section Scripts{


    <script type="text/javascript">


        jQuery(document).ready(function () {
            //var recaptcha = $('.g-recaptcha');
            //if (recaptcha.length > 0) {
            //     var recaptchaElm = $('.g-recaptcha');
            //      var sitekey = recaptchaElm.attr('data-site');
            //    if (sitekey == null || sitekey == "") {
            //        sitekey = "blank";
            //    }
            //     grecaptcha.render(recaptcha.attr('id'), {
            //        'sitekey': sitekey
            //    });
            ////});
            //}
            var recaptchaElm = $('.g-recaptcha');
            setTimeout(function () {
                $.each(recaptchaElm, function (i, v) {
                    var sitekey = $(v).attr('data-site');
                    if (sitekey == null || sitekey == "") {
                        sitekey = "blank";
                    }
                    grecaptcha.render(v.id, {
                        'sitekey': sitekey
                    });
                });
            }, 500);
            //$.each(recaptcha, function (i, v) {


              $('.nav-tabs').scrollingTabs({
        bootstrapVersion: 4,
        cssClassLeftArrow: 'ri-arrow-left-s-fill',
                  cssClassRightArrow: 'ri-arrow-right-s-fill',
         disableScrollArrowsOnFullyScrolled: true
    });

            $(".fileuploader__input").bind("dragenter", function () {
                $(this).addClass('fileuploader-dragging');
                return false;
            });

            $(".fileuploader__input").bind("dragleave", function () {
                $(this).removeClass('fileuploader-dragging');
                return false;
            });

            $(".fileuploader__input").bind("drop", function (e) {
                $(this).removeClass('fileuploader-dragging');
                var files = event.dataTransfer.files;
                insertDropImage(files);
                return false;
            });
            $(".fileuploader__input").bind('dragover', function () {
                $(this).addClass('fileuploader-dragging');
                return false;
            });

            $('.fileuploader__input').find(".fileuploader__input-button").remove();//.attr("hidden", "hidden");

            console.log("drag and drop");
            if ($('.fileuploader__input').parents('.media-list').hasClass("fileuploader--theme-dragdrop")) {
                      $('.fileuploader__input').append('<div class="fileuploader__icon-main"></div><h3 class="fileuploader__input-caption">Drag and drop to upload</h3><p>or <a href="#" class="fileuploader__input-button" data-media="{OnInit:function(){this.size=&quot;modal-lg&quot;;this.button.cancel=&quot;Cancel&quot;;this.button.insert=&quot;Insert Media&quot;;this.open();},OnInsert:function(e){Cicero.Form.InsertImages(e , &quot;Media1564743314550[]&quot;)},OnCancelled:function(){this.close();}}" data-id=' + @Model.Id +'><span>browse</span></a> to choose file</p><span class="file-extension">jpg, png, doc, docx, pdf</span>');
            }
            else {

            }

            function insertDropImage(e) {

                var formData = new FormData();

  for (var i = 0; i != e.length; i++) {
    formData.append("files", e[i]);
                }

                $.ajax(
                    {
                        url: "@Url.Content("/user/uploadFiles.html")",
                        data: formData,
                        processData: false,
                        contentType: false,
                        type: "POST",
                        success: function (data) {
                            console.log("files");
                            $.each(data, function (i, v) {
                var extension = v.url.substr((v.url.lastIndexOf('.') + 1));
                if (extension == "pdf") {
                    jQuery("<li class='thumbs fileuploader__item file-type file-type--pdf'><a class='fileuploader-item-inner' target='_blank' href='/uploads/" + v.url + "'><div class='thumbnail-holder'><div class='fileuploader__item-image'><img src='/images/pdf.png' data-imgtitle='" + v.title + "'></div></div><div class='actions-holder'><button class='btn fileuploader__action fileuploader__action-remove' type='button' title='Remove'><i class='fileuploader__icon-remove ri-close-circle-fill' aria-hidden='true'></i></button></div></a><input type='hidden' name='images[]' value='" + v.id + "' /></li>").appendTo(".fileuploader__items");
                }
                else if (extension == "doc" || extension == "docx" || extension == "txt") {
                    jQuery("<li class='thumbs fileuploader__item file-type file-type--doc'><a class='fileuploader-item-inner' target='_blank' href='/uploads/" + v.url + "'><div class='thumbnail-holder'><div class='fileuploader__item-image'><img src='/images/doc.png' data-imgtitle='" + v.title + "'></div></div><div class='actions-holder'><button class='btn fileuploader__action fileuploader__action-remove' type='button' title='Remove'><i class='fileuploader__icon-remove ri-close-circle-fill' aria-hidden='true'></i></button></div></a><input type='hidden' name='images[]' value='" + v.id + "' /></li>").appendTo(".fileuploader__items");
                }
                else {
                    jQuery("<li class='thumbs fileuploader__item file-type file-type--image'><a class='pop fileuploader-item-inner' href='javascript:void(0)'><div class='thumbnail-holder'><div class='fileuploader__item-image'><img src='/uploads/" + v.url + "' data-imgtitle='" + v.title + "'></div></div><div class='actions-holder'><button class='btn fileuploader__action fileuploader__action-remove' type='button' title='Remove'><i class='fileuploader__icon-remove ri-close-circle-fill' aria-hidden='true'></i></button></div></a><input type='hidden' name='images[]' value='" + v.id + "' /></li>").appendTo(".fileuploader__items");
                }
            });
                        }
                    }
                );
            };

            getcountrylist("");
            function getcountrylist(thisdata) {
                let selected = $(thisdata).children("option:selected").val();
                $.ajax({
                    type: "GET",
                    dataType: "json",
                    url: "@Url.Content("~/admin"+_utils.GetTenantForUrl(false) + "/country-list")",
                    //data: ,
                    success: function (d) {
                        if (d != null) {
                            $.each(d, function (k, l) {
                                //console.log($(thisdata).attr("id"));
                                //  if (l.value.toLowerCase() != selected.toLowerCase()) {
                                $("#" + $(".country").attr("id")).append("<option value='" + (l == "null" ? "" : l.value.toLowerCase()) + "' data-selects >" + l.text + "</option>");
                                //  }
                            })
                        }
                    }
                });
            }
        });


        jQuery(document).ready(function () {

            $('.sidelist').on('click', function (event) {
                $target = $(event.target);
                $('.sidelist').removeClass('active');
                $target.parent().addClass('active');
            });

            $('#select-from').selectize({
                create: true,
                sortField: {
                    field: 'text',
                    direction: 'asc'
                },
                dropdownParent: 'body'
            });
            $('#select-to').selectize({
                create: true,
                sortField: {
                    field: 'text',
                    direction: 'asc'
                },
                dropdownParent: 'body'
            });
            var theme_match = String(window.location).match(/[?&]theme=([a-z0-9]+)/);
            var theme = (theme_match && theme_match[1]) || 'default';
            //$("#back-btn").hide();
        });

        //save to draft
        $(document).on("click", "#save-btn", function (e) {
            $("#StateName").val("@_appSetting.Get("app_claim_front")");
             $("#btn-type").val("save");
            $("#caseform").validate().settings.ignore = "*";
            onSendButtonClick("caseform");
        });
        //send claim
        $(document).on("click", "#send-btn", function (e) {
            $("#StateName").val("@_appSetting.Get("app_claim_back")");
            $("#btn-type").val("send");
         //   $("#caseform").submit();
            var formstring = '@_utils.GetParams("Form")';
            checkValidation("caseform", formstring);
        });

    </script>

    <script>

        function createLightBox() {
            var slides = '';
            // var thumbnail = '';
            var length = 0;
            var i = 1;
            $.each($('.fileuploader__item-image img'), function (index, value) {
                var imgsrc = $(this).attr("src");
                if (imgsrc.toLowerCase().indexOf("uploads") >= 0) {
                    length++;
                }
            })
            $.each($('.fileuploader__item-image img'), function (index, value) {
                var imgsrc = $(this).attr("src");
                var imgTitle = $(this).attr('data-imgtitle');
                if (imgsrc.toLowerCase().indexOf("uploads") >= 0) {
                    var currentIndex = i++;
                    //imgsrc = 'https://www.w3schools.com/howto/img_nature_wide.jpg';
                    slides += '<div class="lightbox__item mySlides"> <div class="numbertext">' + (currentIndex) + '/ ' + length + '</div> <img src="' + imgsrc + '" class="lightbox__img"> </div>';
                    //  thumbnail += '<div class="column"> <img class="demo" src="' + imgsrc + '" onclick="currentSlide(' + (currentIndex) + ')" alt="' + imgTitle + '"> </div>';
                }
            });

            var buttons = '<a href="#" class="prev lightbox__prev lightbox__icon" onclick="plusSlides(-1)"><span class="sr-only">Previous</span></a> <a href="#" class="next lightbox__next lightbox__icon" onclick="plusSlides(1)"><span class="sr-only">Next</span></a> <!-- Caption text -->';
            var caption = '<div class="slide-caption"><div id="caption"></div></div>';
            var count = '<div class="slide-counter"><span id="currentNumber"></span>/' + length + '</div>';;
            var modal = '<div id="lightBoxModal" class="lightbox"><div class="lightbox__dialog"><div class="lightbox__toolbar">' + count + caption + '<a href="#" class="lightbox__close lightbox__icon" onclick="closeModal()"><i class="sr-only">Close</i></a></div><div class="lightbox__content">' + slides + buttons + '' + '</div></div></div>';

            $('body').append(modal);
            //  showSlides(slideIndex);
        }
        // Open the Modal
        function openModal() {
            $("#lightBoxModal").css("display", "block");
        }

        // Close the Modal
        function closeModal() {
            $("#lightBoxModal").css("display", "none");
            $('.lightbox__backdrop').remove();
        }

        $(document).on('keyup', function (e) {
            if (e.keyCode === 27) {
                e.preventDefault();
                closeModal()
            }
            if (e.keyCode == 37) {
                if ($('#lightBoxModal').css('display') == "block") {
                    plusSlides(-1)
                }
            }
            if (e.keyCode == 39) {
                if ($('#lightBoxModal').css('display') == "block") {
                    plusSlides(1);
                }
            }
        });

        var slideIndex = 1;

        // Next/previous controls
        function plusSlides(n) {
            showSlides(slideIndex += n);
        }

        // Thumbnail image controls
        function currentSlide(n) {
            slideIndex = n;
            showSlides(slideIndex);
        }
        function showSlides(n) {
            debugger
            var i;
            var slides = document.getElementsByClassName("mySlides");
            //  var dots = document.getElementsByClassName("demo");
            var captionText = document.getElementById("caption");
            if (n > slides.length) { slideIndex = 1 }
            if (n < 1) { slideIndex = slides.length }
            $('#currentNumber').text(slideIndex);
            for (i = 0; i < slides.length; i++) {
                slides[i].style.display = "none";
            }
            //for (i = 0; i < dots.length; i++) {
            //    dots[i].className = dots[i].className.replace(" active", "");
            //}
            slides[slideIndex - 1].style.display = "block";
            var windowInnerHeight = window.innerHeight;
            var imgHeight = $(slides[slideIndex - 1]).find('img').height();
            if (imgHeight > windowInnerHeight) {
                $('.lightbox__img').css('max-height', (windowInnerHeight * 0.9) + 'px');
            }

            // dots[slideIndex - 1].className += " active";
            // captionText.innerHTML = dots[slideIndex - 1].alt;
        }
        $(document).on("click", '.img__pop', function (e) {
            var slide = $(e.currentTarget).attr("data-slide");
            currentSlide(parseInt(slide));
            openModal();
            var slidess = document.getElementsByClassName("mySlides");
            var _windowInnerHeight = window.innerHeight;
            var _imgHeight = $(slidess[parseInt(slide) - 1]).find('img').height();
            if (_imgHeight > _windowInnerHeight) {
                $('.lightbox__img').css('max-height', (_windowInnerHeight * 0.9) + 'px');
            }
            $('body').append('<div class="lightbox__backdrop show"></div>');
        })

    </script>
}

<script src="~/onfido/dist/onfido.min.js"></script>
<script>
    var onfido = {}

    function triggerOnfido() {
        onfido = Onfido.init({
            useModal: true,
            isModalOpen: true,
            containerId: 'onfido-mount',
            onModalRequestClose: function () {
                // Update options with the state of the modal
                onfido.setOptions({ isModalOpen: false })
            },
            token: "@sdkToken",
            onComplete: function (data) {
                 $("#loading2").attr("style", "display:block;");
                debugger

                var isDocumentFront = data.hasOwnProperty("document_front");
                var isDocumentBack = data.hasOwnProperty("document_back");
                var isLivePhoto = data.hasOwnProperty("face");
                var onfidoDocument = {};
                var datas = [];
                if (isDocumentFront) {
                    onfidoDocument = {
                        Id: data.document_front.id,
                        Category: "document"
                    };
                    datas.push(onfidoDocument);
                }

                if (isDocumentBack) {
                    onfidoDocument = {
                        Id: data.document_back.id,
                        Category: "document"
                    };
                    datas.push(onfidoDocument);
                }

                if (isLivePhoto) {
                    onfidoDocument = {
                        Id: data.face.id,
                        Category: "face"
                    };
                    datas.push(onfidoDocument);
                }

                $.ajax({
                    url: "/st/user/onfidodetail.html",
                    type: "post",
                    data: { datas: datas },
                    success: function (response) {
                        $('.onfidoBtn').remove();
                        $("#loading2").attr("style", "display:none;");
                        $('.onfido-sdk-ui-Modal-portal').toggle('modal');
                        toastr.success("Verification completed.");
                    },
                    error: function (error) {
                         $("#loading2").attr("style", "display:none;");
                    }
                });

            },
            onError: function (error) {
                toastr.error("Internal Server Error.");
            },
            steps: [
                {
                    type: 'welcome',
                    options: {
                        title: 'Verify Your Account',
                        descriptions: ['To send money, we will need to verify your identity.', 'It will only take a couple of minutes.'],
                        //nextButton: 'Go Go Go'
                    }
                },
                'document',
                // 'face',
                'complete'
            ]
        });
    };
</script>
