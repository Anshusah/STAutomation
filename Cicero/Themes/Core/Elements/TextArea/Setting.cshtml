<!-- Hidden Fields : Start -->
@using Cicero.Service.Models.Core.Elements
@using Cicero.Service.Services
@model Cicero.Service.Models.Core.Elements.TextArea
@inject ICommonService commonService

@inject ISynchronizeService SynchronizeService
@inject IQueueService QueueService
@inject IFormBuilderService FormBuilderService
@{
    TextArea ta = Model as TextArea;
    var xx = ta;
    int formId = Convert.ToInt32(ta.Data);
    List<SelectListItem> dbTables = SynchronizeService.getSyncSourceTable();
    string loggeduser = commonService.getLoggedInUserId();
    string roleId = commonService.GetRoleIdByUserId(loggeduser);
    List<SelectListItem> stateList = QueueService.GetStateSelectListByFormId(formId, roleId);
    List<SelectListItem> formElements = FormBuilderService.GetFormFields(formId, true);
}
<div class="modal-header flex-column">
    <h3 class="modal-title">TextArea Setting</h3>
    <p class="mb-0">This settings helps you to customize TextArea.</p>
</div>
<div class="status"></div>
<div class="modal-body">
    <ul class="fb-card">
        <li class="active">
            <header>Name</header>
            <section>
                <div class="form-row">
                    <div class="form-group col-lg-6">
                        <label for="rgName">Element Name</label>
                        <input type="text" class="form-control" id="ElementName" @ta.GetName("Name") value="@ta.Name" data-name="elmName" />
                        <small class="form-text text-muted">Input a Unique Name for this Element.</small>
                        <span class="text-danger field-validation-valid" data-valmsg-for="ElementName_@ta.ElementId" data-valmsg-replace="true"></span>
                    </div>
                </div>
            </section>
        </li>

        <li>
            <header>Frontend Setting</header>
            <section>
                <div class="form-row">
                    <div class="form-group col-lg-4">
                        <label for="taFrontendId">Id</label>
                        <input type="text" class="form-control" id="taFrontendId" @ta.GetName("FrontendId") value="@ta.FrontendId">
                    </div>
                    <div class="form-group col-lg-4">
                        <label for="taFrontendClass">Class</label>
                        <input type="text" class="form-control" id="taFrontendClass" @ta.GetName("FrontendClass") value="@ta.FrontendClass">
                    </div>
                    <div class="form-group col-lg-4">
                        <label for="taFrontendLabel">Label</label>
                        <input type="text" class="form-control" id="taFrontendLabel" @ta.GetName("FrontendLabel") value="@ta.FrontendLabel">
                    </div>
                </div>
                <div class="switch-control">
                    <label for="taFrontendVisible" class="switch">
                        <input class="switch__input" id="taFrontendVisible" @ta.GetName("FrontendVisible") type="checkbox" value="true" @ta.GetChecked(ta.FrontendVisible)>
                        <span class="switch__state"></span>
                        <span class="switch__label">Default visible</span>
                    </label>
                  
                </div>
                <div class="switch-control">
                    <label for="taVisibleinFooter" class="switch">
                        <input class="switch__input" id="taVisibleinFooter" @ta.GetName("VisibleinFooter") type="checkbox" value="true" @ta.GetChecked(ta.VisibleinFooter)>
                        <span class="switch__state"></span>
                        <span class="switch__label">Visible In Footer</span>
                    </label>
                </div>
            </section>
        </li>
        <li>
            <header>Backend Setting</header>
            <section>
                <div class="form-row">
                    <div class="form-group col-lg-4">
                        <label for="taBackendId">Id</label>
                        <input type="text" class="form-control" id="taBackendId" @ta.GetName("BackendId") value="@ta.BackendId">
                    </div>
                    <div class="form-group col-lg-4">
                        <label for="taBackendClass">Class</label>
                        <input type="text" class="form-control" id="taBackendClass" @ta.GetName("BackendClass") value="@ta.BackendClass">
                    </div>
                    <div class="form-group col-lg-4">
                        <label for="taBackendLabel">Label</label>
                        <input type="text" class="form-control" id="taBackendLabel" @ta.GetName("BackendLabel") value="@ta.BackendLabel">
                    </div>
                </div>
                <div class="switch-control">
                    <label for="taBackendVisible" class="switch">
                        <input class="switch__input" id="taBackendVisible" @ta.GetName("BackendVisible") type="checkbox" value="true" @ta.GetChecked(ta.BackendVisible)>
                        <span class="switch__state"></span>
                        <span class="switch__label">Default visible</span>
                    </label>
                </div>
            </section>
        </li>

        <li>
            <header>Events Setting</header>
            <section>
                <div id="Events" class="container p-0">
                    <ul class="nav nav-tabs">
                        <li class="active">
                            <a href="#onkeyup" data-toggle="tab" class="nav-link active">On Key Up Event</a>
                        </li>

                    </ul>
                    <div class="tab-content">

                        <div class="tab-pane pt-4 pb-3 active" id="onkeyup">
                            <div class="row">
                                <div class="col-lg-12 col-md-12 mb-12">
                                    <div class="target_option_wrapper">
                                        <div class="field-validation-wrapper">
                                            <div class="form-row">
                                                <div class="form-group col-md-6">
                                                    <div class="switch-control">
                                                        <label for="IsOnKeyUpEvent" class="switch">
                                                            <input class="switch__input" id="IsOnKeyUpEvent" @ta.GetName("IsOnKeyUpEvent") type="checkbox" value="true" @ta.GetChecked(ta.IsOnKeyUpEvent)>
                                                            <span class="switch__state"></span>
                                                            <span class="switch__label">Enable Workflow Event</span>
                                                        </label>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <button onclick="openElementEventSetting(@formId,@ta.ElementId,@Convert.ToInt16(Cicero.Service.Enums.ElementEventType.OnKeyUp))" type="button" class="btn btn-outline-primary form-control element-workflow">
                                                            <i class="ri-shape-line"></i> <span>Manage On Key Up Workflow Event</span>
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                </div>

                            </div>


                            
                            @*<div class="form-row">
                                <div class="col-lg-12">
                                    <p>Choose states from the options available options to run workflow.</p>
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="col-lg-6 form-group">
                                    <label for="hdStartState">Select Start State</label>
                                    <select class="form-control startState" id="hdStartState" name="OnKeyUpEvent[StartState]">
                                        <option value="" selected>Please Select</option>
                                        @foreach (var state in stateList)
                                        {
                                            if (ta.OnKeyUpEvent != null)
                                            {
                                                if (ta.OnKeyUpEvent.StartState == state.Value)
                                                {
                                                    <option value="@state.Value" selected>@state.Text</option>

                                                }
                                                else
                                                {
                                                    <option value="@state.Value">@state.Text</option>
                                                }
                                            }
                                            else
                                            {
                                                <option value="@state.Value">@state.Text</option>
                                            }

                                        }

                                    </select>
                                </div>
                                <div class="col-lg-6 form-group">
                                    <label for="hdEndState">Select End State</label>
                                    <select class="form-control endState" id="hdEndState" name="OnKeyUpEvent[EndState]">
                                        <option value="" selected>Please Select</option>
                                        @foreach (var state in stateList)
                                        {
                                            if (ta.OnKeyUpEvent != null)
                                            {
                                                if (ta.OnKeyUpEvent.EndState == state.Value)
                                                {
                                                    <option value="@state.Value" selected>@state.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@state.Value">@state.Text</option>
                                                }
                                            }
                                            else
                                            {
                                                <option value="@state.Value">@state.Text</option>
                                            }

                                        }

                                    </select>
                                </div>
                            </div>*@
                            <div class="form-row">
                                <div class="col-lg-12">
                                    <p>Choose the Elements from which you want to take value from </p>
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="col-lg-12">
                                    <div class="select-option-head">
                                        <div class="px-4">
                                            <div class="form-row">
                                                <div class="col-lg-4">
                                                    <label for="">Value Field</label>
                                                </div>
                                                <div class="col-lg-4">
                                                    <label for="">Select Element</label>
                                                </div>
                                                <div class="col-lg-3">
                                                    <label for="">Enable Validation</label>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                    <div class="validation_rule_wrapper">
                                        @{
                                            if (ta.OnKeyUpEvent != null)
                                            {
                                                if (ta.OnKeyUpEvent.TakeValueFromName != null && ta.OnKeyUpEvent.TakeValueFromName.Count > 0)
                                                {

                                                    int index11 = 0;
                                                    foreach (var so in ta.OnKeyUpEvent.TakeValueFromName)
                                                    {
                                                        <div class="field-validation-wrapper">
                                                            <div class="field-controller">
                                                                <a class="fc-icon icon-copy" data-action='clone-rule' title="Copy"><i class="ri-file-copy-line"></i></a>
                                                                <a class="fc-icon icon-delete" data-action='remove-rule' title="Delete"><i class="ri-delete-bin-4-line"></i></a>
                                                                @*<a class="fc-icon icon-timer" data-action='short-selectoption'><i class="ri-timer-2-line"></i></a>*@
                                                            </div>
                                                            <div class="form-row">
                                                                <div class="col-lg-4">
                                                                    <input type="text" name="OnKeyUpEvent[TakeValueFromName][@index11]" data-name="OnKeyUpEvent[TakeValueFromName][{0}]" class="form-control" id="" placeholder="Value Field" value="@ta.OnKeyUpEvent.TakeValueFromName[index11]">

                                                                </div>
                                                                <div class="col-lg-4">
                                                                    <select type="text" name="OnKeyUpEvent[TakeValueFromElement][@index11]" data-name="OnKeyUpEvent[TakeValueFromElement][{0}]" class="form-control" id="" placeholder="Text Field">
                                                                        <option value="">Please Select</option>
                                                                        @foreach (var item in formElements)
                                                                        {
                                                                            if (ta.OnKeyUpEvent.TakeValueFromElement[index11] != null)
                                                                            {
                                                                                if (item.Value == ta.OnKeyUpEvent.TakeValueFromElement[index11].ToString())
                                                                                {
                                                                                    <option value="@item.Value" selected>@item.Text</option>
                                                                                }
                                                                                else
                                                                                {
                                                                                    <option value="@item.Value">@item.Text</option>
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                <option value="@item.Value">@item.Text</option>
                                                                            }


                                                                        }
                                                                    </select>
                                                                </div>

                                                                <div class="col-lg-3">
                                                                    <select type="text" name="OnKeyUpEvent[TakeValueFromElementValidation][@index11]" data-name="OnKeyUpEvent[TakeValueFromElementValidation][{0}]" class="form-control" id="">

                                                                        @if (ta.OnKeyUpEvent.TakeValueFromElementValidation != null && ta.OnKeyUpEvent.TakeValueFromElementValidation[index11] != null)
                                                                        {
                                                                            if ("False" == ta.OnKeyUpEvent.TakeValueFromElementValidation[index11].ToString())
                                                                            {
                                                                                <option value="False" selected>False</option>
                                                                            }
                                                                            else
                                                                            {
                                                                                <option value="False">False</option>
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            <option value="False">False</option>
                                                                        }

                                                                        @if (ta.OnKeyUpEvent.TakeValueFromElementValidation != null && ta.OnKeyUpEvent.TakeValueFromElementValidation[index11] != null)
                                                                        {
                                                                            if ("True" == ta.OnKeyUpEvent.TakeValueFromElementValidation[index11].ToString())
                                                                            {
                                                                                <option value="True" selected>True</option>
                                                                            }
                                                                            else
                                                                            {
                                                                                <option value="True">True</option>
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            <option value="True">True</option>
                                                                        }


                                                                    </select>
                                                                </div>
                                                            </div>

                                                        </div>
                                                        {
                                                            index11++;
                                                        }
                                                    }
                                                }
                                                else
                                                {
                                                    <div class="field-validation-wrapper">
                                                        <div class="field-controller">
                                                            <a class="fc-icon icon-copy" data-action='clone-rule' title="Copy"><i class="ri-file-copy-line"></i></a>
                                                            <a class="fc-icon icon-delete" data-action='remove-rule' title="Delete"><i class="ri-delete-bin-4-line"></i></a>
                                                            @*<a class="fc-icon icon-timer" data-action='short-selectoption'><i class="ri-timer-2-line"></i></a>*@
                                                        </div>
                                                        <div class="form-row">

                                                            <div class="col-lg-4">
                                                                <input type="text" name="OnKeyUpEvent[TakeValueFromName][0]" data-name="OnKeyUpEvent[TakeValueFromName][{0}]" class="form-control" id="" placeholder="Value Filed">
                                                            </div>
                                                            <div class="col-lg-4">
                                                                <select type="text" name="OnKeyUpEvent[TakeValueFromElement][0]" data-name="OnKeyUpEvent[TakeValueFromElement][{0}]" class="form-control" id="" placeholder="Text Field">
                                                                    <option value="">Please Select</option>
                                                                    @foreach (var item in formElements)
                                                                    {
                                                                        <option value="@item.Value">@item.Text</option>
                                                                    }
                                                                </select>
                                                            </div>
                                                            <div class="col-lg-3">
                                                                <select type="text" name="OnKeyUpEvent[TakeValueFromElementValidation][0]" data-name="OnKeyUpEvent[TakeValueFromElementValidation][{0}]" class="form-control" id="">
                                                                    <option value="False">False</option>
                                                                    <option value="True">True</option>
                                                                </select>
                                                            </div>
                                                        </div>

                                                    </div>
                                                }
                                            }
                                            else
                                            {
                                                <div class="field-validation-wrapper">
                                                    <div class="field-controller">
                                                        <a class="fc-icon icon-copy" data-action='clone-rule' title="Copy"><i class="ri-file-copy-line"></i></a>
                                                        <a class="fc-icon icon-delete" data-action='remove-rule' title="Delete"><i class="ri-delete-bin-4-line"></i></a>
                                                        @*<a class="fc-icon icon-timer" data-action='short-selectoption'><i class="ri-timer-2-line"></i></a>*@
                                                    </div>
                                                    <div class="form-row">

                                                        <div class="col-lg-4">
                                                            <input type="text" name="OnKeyUpEvent[TakeValueFromName][0]" data-name="OnKeyUpEvent[TakeValueFromName][{0}]" class="form-control" id="" placeholder="Value Filed">
                                                        </div>
                                                        <div class="col-lg-4">
                                                            <select type="text" name="OnKeyUpEvent[TakeValueFromElement][0]" data-name="OnKeyUpEvent[TakeValueFromElement][{0}]" class="form-control" id="" placeholder="Text Field">
                                                                <option value="">Please Select</option>
                                                                @foreach (var item in formElements)
                                                                {
                                                                    <option value="@item.Value">@item.Text</option>
                                                                }
                                                            </select>
                                                        </div>

                                                        <div class="col-lg-3">
                                                            <select type="text" name="OnKeyUpEvent[TakeValueFromElementValidation][0]" data-name="OnKeyUpEvent[TakeValueFromElementValidation][{0}]" class="form-control" id="">
                                                                <option value="False">False</option>
                                                                <option value="True">True</option>
                                                            </select>
                                                        </div>
                                                    </div>

                                                </div>
                                            }
                                        }
                                    </div>
                                </div>
                            </div>

                            <div class="form-row">
                                <div class="col-lg-12">
                                    <p>Choose the Elements from which you want to set value To </p>
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="col-lg-12">
                                    <div class="select-option-head">
                                        <div class="px-4">
                                            <div class="form-row">
                                                <div class="col-lg-4">
                                                    <label for="">Returned Field</label>
                                                </div>
                                                <div class="col-lg-4">
                                                    <label for="">Select Element</label>
                                                </div>
                                                <div class="col-lg-4">
                                                    <label>Trigger Value Change Event</label>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                    <div class="validation_rule_wrapper">
                                        @{
                                            if (ta.OnKeyUpEvent != null)
                                            {
                                                if (ta.OnKeyUpEvent.SetValueToName != null && ta.OnKeyUpEvent.SetValueToName.Count > 0)
                                                {
                                                    int index11 = 0;
                                                    foreach (var so in ta.OnKeyUpEvent.SetValueToName)
                                                    {
                                                        <div class="field-validation-wrapper">
                                                            <div class="field-controller">
                                                                <a class="fc-icon icon-copy" data-action='clone-rule' title="Copy"><i class="ri-file-copy-line"></i></a>
                                                                <a class="fc-icon icon-delete" data-action='remove-rule' title="Delete"><i class="ri-delete-bin-4-line"></i></a>
                                                                @*<a class="fc-icon icon-timer" data-action='short-selectoption'><i class="ri-timer-2-line"></i></a>*@
                                                            </div>
                                                            <div class="form-row">
                                                                <div class="col-lg-4">
                                                                    <input type="text" name="OnKeyUpEvent[SetValueToName][@index11]" data-name="OnKeyUpEvent[SetValueToName][{0}]" class="form-control" id="" placeholder="Value Field" value="@ta.OnKeyUpEvent.SetValueToName[index11]">

                                                                </div>
                                                                <div class="col-lg-4">
                                                                    <select type="text" name="OnKeyUpEvent[SetValueToElement][@index11]" data-name="OnKeyUpEvent[SetValueToElement][{0}]" class="form-control" id="" placeholder="Text Field">
                                                                        <option>Please Select</option>
                                                                        @foreach (var item in formElements)
                                                                        {
                                                                            if (ta.OnKeyUpEvent.SetValueToElement[index11] != null)
                                                                            {
                                                                                if (item.Value == ta.OnKeyUpEvent.SetValueToElement[index11].ToString())
                                                                                {
                                                                                    <option value="@item.Value" selected>@item.Text</option>
                                                                                }
                                                                                else
                                                                                {
                                                                                    <option value="@item.Value">@item.Text</option>
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                <option value="@item.Value">@item.Text</option>
                                                                            }


                                                                        }
                                                                    </select>
                                                                </div>
                                                                <div class="col-lg-3">
                                                                    <select type="text" name="OnKeyUpEvent[SetValueToEventTrigger][@index11]" data-name="OnKeyUpEvent[SetValueToEventTrigger][{0}]" class="custom-select" id="">

                                                                        @if (ta.OnKeyUpEvent.SetValueToEventTrigger != null && ta.OnKeyUpEvent.SetValueToEventTrigger[index11] != null)
                                                                        {
                                                                            if ("True" == ta.OnKeyUpEvent.SetValueToEventTrigger[index11].ToString())
                                                                            {
                                                                                <option value="True" selected>True</option>
                                                                            }
                                                                            else
                                                                            {
                                                                                <option value="True">True</option>
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            <option value="True">True</option>
                                                                        }

                                                                        @if (ta.OnKeyUpEvent.SetValueToEventTrigger != null && ta.OnKeyUpEvent.SetValueToEventTrigger[index11] != null)
                                                                        {
                                                                            if ("False" == ta.OnKeyUpEvent.SetValueToEventTrigger[index11].ToString())
                                                                            {
                                                                                <option value="False" selected>False</option>
                                                                            }
                                                                            else
                                                                            {
                                                                                <option value="False">False</option>
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            <option value="False">False</option>
                                                                        }


                                                                    </select>
                                                                </div>
                                                            </div>

                                                        </div>
                                                        {
                                                            index11++;
                                                        }
                                                    }

                                                }
                                                else
                                                {
                                                    <div class="field-validation-wrapper">
                                                        <div class="field-controller">
                                                            <a class="fc-icon icon-copy" data-action='clone-rule' title="Copy"><i class="ri-file-copy-line"></i></a>
                                                            <a class="fc-icon icon-delete" data-action='remove-rule' title="Delete"><i class="ri-delete-bin-4-line"></i></a>
                                                            @*<a class="fc-icon icon-timer" data-action='short-selectoption'><i class="ri-timer-2-line"></i></a>*@
                                                        </div>
                                                        <div class="form-row">

                                                            <div class="col-lg-4">
                                                                <input type="text" name="OnKeyUpEvent[SetValueToName][0]" data-name="OnKeyUpEvent[SetValueToName][{0}]" class="form-control" id="" placeholder="Value Filed">
                                                            </div>
                                                            <div class="col-lg-4">
                                                                <select type="text" name="OnKeyUpEvent[SetValueToElement][0]" data-name="OnKeyUpEvent[SetValueToElement][{0}]" class="form-control" id="" placeholder="Text Field">
                                                                    <option>Please Select</option>
                                                                    @foreach (var item in formElements)
                                                                    {
                                                                        <option value="@item.Value">@item.Text</option>
                                                                    }
                                                                </select>
                                                            </div>
                                                            <div class="col-lg-3">
                                                                <select type="text" name="OnKeyUpEvent[SetValueToEventTrigger][0]" data-name="OnKeyUpEvent[SetValueToEventTrigger][{0}]" class="custom-select" id="">
                                                                    <option value="True">True</option>
                                                                    <option value="False">False</option>
                                                                </select>
                                                            </div>
                                                        </div>

                                                    </div>
                                                }
                                            }
                                            else
                                            {
                                                <div class="field-validation-wrapper">
                                                    <div class="field-controller">
                                                        <a class="fc-icon icon-copy" data-action='clone-rule' title="Copy"><i class="ri-file-copy-line"></i></a>
                                                        <a class="fc-icon icon-delete" data-action='remove-rule' title="Delete"><i class="ri-delete-bin-4-line"></i></a>
                                                        @*<a class="fc-icon icon-timer" data-action='short-selectoption'><i class="ri-timer-2-line"></i></a>*@
                                                    </div>
                                                    <div class="form-row">

                                                        <div class="col-lg-4">
                                                            <input type="text" name="OnClickEvent[SetValueToName][0]" data-name="OnClickEvent[SetValueToName][{0}]" class="form-control" id="" placeholder="Value Filed">
                                                        </div>
                                                        <div class="col-lg-4">
                                                            <select type="text" name="OnClickEvent[SetValueToElement][0]" data-name="OnClickEvent[SetValueToElement][{0}]" class="form-control" id="" placeholder="Text Field">
                                                                <option>Please Select</option>
                                                                @foreach (var item in formElements)
                                                                {
                                                                    <option value="@item.Value">@item.Text</option>
                                                                }
                                                            </select>
                                                        </div>
                                                        <div class="col-lg-3">
                                                            <select type="text" name="OnKeyUpEvent[SetValueToEventTrigger][0]" data-name="OnKeyUpEvent[SetValueToEventTrigger][{0}]" class="custom-select" id="">
                                                                <option value="True">True</option>
                                                                <option value="False">False</option>
                                                            </select>
                                                        </div>
                                                    </div>

                                                </div>
                                            }
                                        }
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </section>
        </li>

        <li>
            <header>Permission</header>
            <section>
                <div class="table-responsive">
                    <table class="table table-custom">
                        <thead>
                            <tr>
                                <th>Role Name</th>
                                <th>Write</th>
                                <th>Read</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{int index = 0;
                                foreach (var role in commonService.GetRoleList())
                                {
                                    var Roledata = ta?.Permissions?.Where(p => p.RoleId == role.Value).FirstOrDefault();
                                    if (Roledata != null)
                                    {

                                        <tr>
                                            <td>
                                                @role.Text
                                                <input type="hidden" name="Permissions[@index][RoleId]" class="form-control" value="@role.Value">
                                            </td>
                                            <td>
                                                <div class="custom-control custom-checkbox">
                                                    <input name="Permissions[@index][Write]" type="checkbox" class="custom-control-input" value="true" checked="@Roledata.Write" id="Permissions[@index][Write]">
                                                    <label class="custom-control-label" for="Permissions[@index][Write]"></label>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="custom-control custom-checkbox">
                                                    <input name="Permissions[@index][Read]" type="checkbox" class="custom-control-input" value="true" checked="@Roledata.Read" id="Permissions[@index][Read]">
                                                    <label class="custom-control-label" for="Permissions[@index][Read]"></label>
                                                </div>
                                            </td>
                                        </tr>

                                    }
                                    else
                                    {
                                        <tr>
                                            <td>
                                                @role.Text
                                                <input type="hidden" class="form-control" name="Permissions[@index][RoleId]" value="@role.Value">
                                            </td>

                                            <td>
                                                <div class="custom-control custom-checkbox">
                                                    <input name="Permissions[@index][Write]" class="custom-control-input" type="checkbox" value="true" checked="checked" id="Permissions[@index][Write]">
                                                    <label class="custom-control-label" for="Permissions[@index][Write]"></label>
                                                </div>
                                            </td>

                                            <td>
                                                <div class="custom-control custom-checkbox">
                                                    <input name="Permissions[@index][Read]" class="custom-control-input" type="checkbox" value="true" checked="checked" id="Permissions[@index][Read]">
                                                    <label class="custom-control-label" for="Permissions[@index][Read]"></label>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                    index++;
                                }
                            }
                        </tbody>

                    </table>
                </div>
            </section>
        </li>
        <li>
            <header>Validation Rule</header>
            <section>
                <div class="validation_rule_wrapper">
                    @{
                        int index1 = 0;
                        if (ta.Validations != null && ta.Validations.Count > 0)
                        {

                            foreach (var val in ta.Validations)
                            {
                                <div class="field-validation-wrapper">
                                    <div class="field-controller">
                                        <a class="fc-icon icon-copy" data-action='clone-rule' title="Copy"><i class="ri-file-copy-line"></i></a>
                                        <a class="fc-icon icon-delete" data-action='remove-rule' title="Delete"><i class="ri-delete-bin-4-line"></i></a>
                                    </div>
                                    <div class="form-row">
                                        <div class="col-auto">
                                            <label class="btn btn-sm btn-invalid">Invalid</label>
                                        </div>
                                        <div class="col-auto ">
                                            <label for="">if</label>
                                        </div>
                                        <div class="col-auto">
                                            <!-- <label class="muted-field"> @ta.BackendLabel</label> -->
                                            <input type="text" class="form-control" disabled value="@ta.BackendLabel">
                                        </div>
                                        <div class="col-lg-3">
                                            <select id="selectGroup" data-action="operator" name="Validations[@index1][FieldOperator]" data-name="Validations[{0}][FieldOperator]" class="custom-select">
                                                <option selected="@(val.FieldOperator=="required")" value="required">Required</option>
                                                <option selected="@(val.FieldOperator==">")" value=">">Greater Than</option>
                                                <option selected="@(val.FieldOperator=="=")" value="=">Equals To</option>
                                                <option selected="@(val.FieldOperator=="<")" value="<">Less Than</option>
                                                <option selected="@(val.FieldOperator=="between")" value="between">Between</option>
                                                <option selected="@(val.FieldOperator=="regex")" value="regex">Not Regex</option>
                                            </select>

                                        </div>
                                        <div class="col-lg-3" data-option="@val.ValidationValues?.FirstOrDefault()">
                                            @{
                                                if (val.FieldOperator == "required")
                                                {
                                                    <select class="custom-select" name="Validations[@index1][ValidationValues]">
                                                        @if (val.ValidationValues?.FirstOrDefault() == "true")
                                                        {
                                                            <option value="true" selected>True</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="true">True</option>
                                                        }
                                                        @if (val.ValidationValues?.FirstOrDefault() == "false")
                                                        {
                                                            <option value="false" selected>False</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="false">False</option>
                                                        }


                                                    </select>
                                                }
                                                else if (val.FieldOperator == "between")
                                                {
                                                    <input type="number" class="form-control" size="20" min="0" oninput="validity.valid||(value=value.replace(/\D+/g, ''))" value="@val.ValidationValues?.FirstOrDefault()" name="Validations[@index1][ValidationValues][0]/><input type="number" size="20" min="1" class="form-control" value="@val.ValidationValues?.LastOrDefault()" name="Validations[@index1][ValidationValues][1]">
                                                }
                                                else if (val.FieldOperator == "<")
                                                {
                                                    <input type="number" class="form-control" size="20" min="0" oninput="validity.valid||(value=value.replace(/\D+/g, ''))" value="@val.ValidationValues?.FirstOrDefault()" name="Validations[@index1][ValidationValues]">
                                                }
                                                else if (val.FieldOperator == ">")
                                                {
                                                    <input type="number" class="form-control" size="20" min="0" oninput="validity.valid||(value=value.replace(/\D+/g, ''))" value="@val.ValidationValues?.FirstOrDefault()" name="Validations[@index1][ValidationValues]">

                                                }
                                                else if (val.FieldOperator == "regex")
                                                {
                                                    <input type="text" class="form-control" value="@val.ValidationValues?.FirstOrDefault()" name="Validations[@index1][ValidationValues]">

                                                }
                                                else
                                                {
                                                    <input type="number" class="form-control" size="20" min="0" oninput="validity.valid||(value=value.replace(/\D+/g, ''))" value="@val.ValidationValues?.FirstOrDefault()" name="Validations[@index1][ValidationValues]">

                                                }
                                            }
                                        </div>

                                    </div>
                                    <div class="form-row">
                                        <div class="col-lg-12">
                                            <textarea class="form-control " name="Validations[@index1][ErrorMessage]" data-name="Validations[{0}][ErrorMessage]" rows="2" id="" placeholder="Please provide valid @ta.FrontendLabel, @ta.FrontendLabel must be greater than 15 Number.">@val.ErrorMessage</textarea>
                                        </div>
                                    </div>
                                </div>
                                {
                                    index1++;
                                }
                            }

                        }
                        else
                        {
                            <div class="field-validation-wrapper">
                                <div class="field-controller">
                                    <a class="fc-icon icon-copy" data-action='clone-rule' title="Copy"><i class="ri-file-copy-line"></i></a>
                                    <a class="fc-icon icon-delete" data-action='remove-rule' title="Delete"><i class="ri-delete-bin-4-line"></i></a>
                                </div>
                                <div class="form-row">
                                    <div class="col-auto">
                                        <label class="btn btn-sm btn-invalid">Invalid</label>
                                    </div>
                                    <div class="col-auto ">
                                        <label for="">if</label>
                                    </div>
                                    <div class="col-auto">
                                        <!-- <label class="muted-field"> @ta.BackendLabel</label> -->
                                        <input type="text" class="form-control" disabled value="@ta.BackendLabel">
                                    </div>
                                    <div class="col-lg-3">
                                        <select id="selectGroup" data-action="operator" name="Validations[@index1][FieldOperator]" data-name="Validations[{0}][FieldOperator]" class="form-control custom">
                                            <option value="required" selected="selected">Required</option>
                                            <option value=">">Greater Than</option>
                                            <option value="=">Equals To</option>
                                            <option value="<">Less Than</option>
                                            <option value="between">Between</option>
                                            <option value="regex">Not Regex</option>
                                        </select>

                                    </div>

                                    <div class="col-lg-3" data-option="">
                                        <select class="form-control" name="Validations[@index1][ValidationValues]">
                                            <option value="true">True</option>
                                            <option value="false" selected="selected">False</option>
                                        </select>
                                    </div>

                                </div>
                                <div class="form-row">
                                    <div class="col-lg-12">
                                        <textarea class="form-control " name="Validations[0][ErrorMessage]" data-name="Validations[{0}][ErrorMessage]" rows="2" id="" placeholder="Please provide valid @ta.FrontendLabel, @ta.FrontendLabel must be greater than 15 Number."></textarea>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
                <p class="small text-muted">This feature will let you add validation rule for this specific field.</p>

            </section>
        </li>
        <li>
            <header>Developer Options</header>
            <section>
                <div class="form-row">
                    <div class="form-group col-lg-6">
                        <label for="taTemplate">Template</label>
                        <input type="text" class="form-control" id="taTemplate" @ta.GetName("Template") value="@ta.Template">
                    </div>
                    <div class="form-group col-lg-6">
                        <label for="taWrapperTemplate">Wrapper Template</label>
                        <input type="text" class="form-control" id="taWrapperTemplate" @ta.GetName("WrapperTemplate") value="@ta.WrapperTemplate">
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-lg-4">
                        <div class="switch-control">
                            <label for="taVisibleinGrid" class="switch">
                                <input type="checkbox" id="taVisibleinGrid" @ta.GetName("VisibleinGrid") class="switch__input" @ta.GetChecked(ta.VisibleinGrid) value="True">
                                <span class="switch__state"></span>
                                <span class="switch__label">Visible in Grid</span>
                            </label>
                        </div>
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-lg-6">
                        <label for="taTableName">Table Name</label>
                        <select value="@ta.TableName" id="taTableName" class="tableMap custom-select"></select>
                        <input type="text" value="@ta.TableName" @ta.GetName("TableName") hidden>
                    </div>
                    <div class="form-group col-lg-6">
                        <label for="taFieldName">Field Name</label>
                        <select value="@ta.FieldName" id="taFieldName" class="fieldMap custom-select"></select>
                        <input type="text" class="form-control" value="@ta.FieldName" @ta.GetName("FieldName") hidden>
                    </div>
                </div>

            </section>
        </li>
        <li>
            <header>Automation Settings</header>
            <section>
                <p>Visible in automation?</p>
                <div class="switch-control">
                    <label for="taAutomationEnable" class="switch">
                        <input class="switch__input" id="taAutomationEnable" @ta.GetName("automationEnable") type="checkbox" value="true" @ta.GetChecked(ta.automationEnable)>
                        <span class="switch__state"></span>
                    </label>
                </div>
            </section>
        </li>
    </ul>
</div>


