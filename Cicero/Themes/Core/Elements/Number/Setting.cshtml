<!-- Hidden Fields : Start -->
@using Cicero.Service.Models.Core.Elements
@using Cicero.Service.Helpers
@model Cicero.Service.Models.Core.Elements.Number
@using Cicero.Service.Services
@inject ICommonService commonService
@inject ISynchronizeService SynchronizeService
@inject IQueueService QueueService
@inject IFormBuilderService FormBuilderService

@{
    Number tb = Model as Number;
    var xx = tb;
    int formId = Convert.ToInt32(tb.Data);
    List<SelectListItem> dbTables = SynchronizeService.getSyncSourceTable();
    string loggeduser = commonService.getLoggedInUserId();
    string roleId = commonService.GetRoleIdByUserId(loggeduser);
    List<SelectListItem> stateList = QueueService.GetStateSelectListByFormId(formId, roleId);
    List<SelectListItem> formElements = FormBuilderService.GetFormFields(formId, true);
    List<SelectListItem> formAllElements = FormBuilderService.GetFormFields(formId, true, true);
}
<style>
    .range-type{
        display:none;
    }
</style>
<div class="modal-header flex-column">
    <h5 class="modal-title">Number Setting</h5>
    <p class="mb-0">This settings helps you to customize Number.</p>
</div>
<div class="modal-body">
    <div class="status"></div>
    <ul class="fb-card">
        <li class="active">
            <header>Name</header>
            <section>
                <div class="form-row">
                    <div class="form-group col-lg-6">
                        <label for="ElementName_@tb.ElementId">Element Name</label>
                        <input type="text" class="form-control" id="ElementName_@tb.ElementId" @tb.GetName("Name") data-name="elmName" value="@tb.Name" />
                        <small class="form-text text-muted">Input a Unique Name for this Element.</small>
                        <span class="text-danger field-validation-valid" data-valmsg-for="ElementName_@tb.ElementId" data-valmsg-replace="true"></span>
                    </div>
                </div>
            </section>
        </li>
        <li>
            <header>Frontend Setting</header>
            <section>
                <div class="form-row">
                    <div class="form-group col-lg-4">
                        <label for="numFrontendId_@tb.FrontendId">Id</label>
                        <input type="text" class="form-control" id="numFrontendId_@tb.FrontendId" @tb.GetName("FrontendId") value="@tb.FrontendId">
                    </div>
                    <div class="form-group col-lg-4">
                        <label for="numFrontendClass_@tb.FrontendId">Class</label>
                        <input type="text" class="form-control" id="numFrontendClass_@tb.FrontendId" @tb.GetName("FrontendClass") value="@tb.FrontendClass">
                    </div>
                    <div class="form-group col-lg-4">
                        <label for="numFrontendLabel_@tb.FrontendId">Label</label>
                        <input type="text" class="form-control" id="numFrontendLabel_@tb.FrontendId" @tb.GetName("FrontendLabel") value="@tb.FrontendLabel">
                    </div>
                </div>
                <div class="switch-control">
                    <label for="numFrontendVisible_@tb.FrontendId" class="switch">
                        <input class="switch__input" id="numFrontendVisible_@tb.FrontendId" @tb.GetName("FrontendVisible") type="checkbox" value="true" @tb.GetChecked(tb.FrontendVisible)>
                        <span class="switch__state"></span>
                        <span class="switch__label">Default visible</span>
                    </label>
                </div>
                <div class="switch-control">
                    <label for="numVisibleinFooter_@tb.FrontendId" class="switch">
                        <input class="switch__input" id="numVisibleinFooter_@tb.FrontendId" @tb.GetName("VisibleinFooter") type="checkbox" value="true" @tb.GetChecked(tb.VisibleinFooter)>
                        <span class="switch__state"></span>
                        <span class="switch__label">Visible In Footer</span>
                    </label>
                </div>
            </section>
        </li>
        <li>
            <header>Backend Setting</header>
            <section>
                <div class="form-row">
                    <div class="form-group col-lg-4">
                        <label for="numBackendId_@tb.BackendId">Id</label>
                        <input type="text" class="form-control" id="numBackendId_@tb.BackendId" @tb.GetName("BackendId") value="@tb.BackendId">
                    </div>
                    <div class="form-group col-lg-4">
                        <label for="numBackendClass_@tb.BackendId">Class</label>
                        <input type="text" class="form-control" id="numBackendClass_@tb.BackendId" @tb.GetName("BackendClass") value="@tb.BackendClass">
                    </div>
                    <div class="form-group col-lg-4">
                        <label for="numBackendLabel_@tb.BackendId">Label</label>
                        <input type="text" class="form-control" id="numBackendLabel_@tb.BackendId" @tb.GetName("BackendLabel") value="@tb.BackendLabel">
                    </div>
                </div>
                <div class="switch-control">
                    <label for="numBackendVisible_@tb.BackendId" class="switch">
                        <input class="switch__input" id="numBackendVisible_@tb.BackendId" @tb.GetName("BackendVisible") type="checkbox" value="true" @tb.GetChecked(tb.BackendVisible)>
                        <span class="switch__state"></span>
                        <span class="switch__label">Default visible</span>
                    </label>
                </div>
            </section>
        </li>
        <li>
            <header>Type</header>
            <section>
                <div class="form-row">
                    <div class="form-group col-lg-3">
                        <label for="numType_@tb.ElementId">
                            Display Type
                        </label>
                        <select id="numType_@tb.ElementId" @tb.GetName("NumberType") class="custom-select ">
                            @{
                                foreach (var ls in Html.GetEnumSelectList<Cicero.Service.Models.Core.Elements.Number.NumType>())
                                {
                                    var numtype = tb.NumberType;
                                    <option selected="@(numtype.ToString() == ls.Value)" value="@ls.Value">@ls.Text</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="form-group col-lg-3 range-type">
                        <label for="numMin_@tb.ElementId">Range Min</label>
                        <input type="text" class="form-control" id="numMin_@tb.ElementId" @tb.GetName("RangeMin") value="@tb.RangeMin" />
                    </div>
                    <div class="form-group col-lg-3 range-type">
                        <label for="numMax_@tb.ElementId">Range Max</label>
                        <input type="text" class="form-control" id="numMax_@tb.ElementId" @tb.GetName("RangeMax") value="@tb.RangeMax" />
                    </div>
                    <div class="form-group col-lg-3 range-type">
                        <label for="numStep_@tb.ElementId">Range Step</label>
                        <input type="text" class="form-control" id="numStep_@tb.ElementId" @tb.GetName("RangeStep") value="@tb.RangeStep" />
                    </div>
                </div>
            </section>
        </li>
        <li>
            <header>Events Setting</header>
            <section>
                <div id="Events" class="events-setting">
                    <ul class="nav nav-tabs">
                        <li class="active">
                            <a href="#onkeyup" data-toggle="tab" class="nav-link active">On Key Up Event</a>
                        </li>
                    </ul>
                    <div class="tab-content">
                        <div class="tab-pane pt-4 active" id="onkeyup">
                            <div class="row">
                                <div class="col-lg-12 col-md-12 mb-12">
                                    <div class="target_option_wrapper">
                                        <div class="field-validation-wrapper">
                                            <div class="form-row">
                                                <div class="form-group col-md-6">
                                                    <div class="switch-control">
                                                        <label for="IsOnKeyUpEvent_@tb.BackendId" class="switch">
                                                            <input class="switch__input" id="IsOnKeyUpEvent_@tb.BackendId" @tb.GetName("IsOnKeyUpEvent") type="checkbox" value="true" @tb.GetChecked(tb.IsOnKeyUpEvent)>
                                                            <span class="switch__state"></span>
                                                            <span class="switch__label">Enable Workflow Event</span>
                                                        </label>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <button onclick="openElementEventSetting(@formId,@tb.ElementId,@Convert.ToInt16(Cicero.Service.Enums.ElementEventType.OnKeyUp))" type="button" class="btn btn-outline-primary form-control element-workflow">
                                                            <i class="ri-shape-line"></i> <span>Manage On Key Up Workflow Event</span>
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                </div>

                            </div>

                            @*<p class="mb-4">Choose states from the options available options to run workflow.</p>
                            <div class="form-row mb-4">
                                <div class="col-lg-6 form-group">
                                    <label for="hdStartState_@tb.ElementId">Select Start State</label>
                                    <select class="custom-select startState" id="hdStartState_@tb.ElementId" name="OnKeyUpEvent[StartState]">
                                        <option value="" selected>Please Select</option>
                                        @foreach (var state in stateList)
                                        {
                                            if (tb.OnKeyUpEvent != null)
                                            {
                                                if (tb.OnKeyUpEvent.StartState == state.Value)
                                                {
                                                    <option value="@state.Value" selected>@state.Text</option>

                                                }
                                                else
                                                {
                                                    <option value="@state.Value">@state.Text</option>
                                                }
                                            }
                                            else
                                            {
                                                <option value="@state.Value">@state.Text</option>
                                            }

                                        }

                                    </select>
                                </div>
                                <div class="col-lg-6 form-group">
                                    <label for="hdEndState_@tb.ElementId">Select End State</label>
                                    <select class="custom-select endState" id="hdEndState_@tb.ElementId" name="OnKeyUpEvent[EndState]">
                                        <option value="" selected>Please Select</option>
                                        @foreach (var state in stateList)
                                        {
                                            if (tb.OnKeyUpEvent != null)
                                            {
                                                if (tb.OnKeyUpEvent.EndState == state.Value)
                                                {
                                                    <option value="@state.Value" selected>@state.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@state.Value">@state.Text</option>
                                                }
                                            }
                                            else
                                            {
                                                <option value="@state.Value">@state.Text</option>
                                            }

                                        }

                                    </select>
                                </div>
                            </div>*@
                            <p>Choose the Elements from which you want to take value from </p>
                            <div class="validation-rule mb-4">
                                <div class="validation-rule-table">
                                    <div class="validation-rule-head select-option-head">
                                        <div class="form-row">
                                            <div class="col-lg-4">
                                                <label>Value Field</label>
                                            </div>
                                            <div class="col-lg-4">
                                                <label>Select Element</label>
                                            </div>
                                            <div class="col-lg-3">
                                                <label>Enable Validation</label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="validation-rule-body validation_rule_wrapper">
                                        @{
                                            if (tb.OnKeyUpEvent != null)
                                            {
                                                if (tb.OnKeyUpEvent.TakeValueFromName != null && tb.OnKeyUpEvent.TakeValueFromName.Count > 0)
                                                {

                                                    int index11 = 0;
                                                    foreach (var so in tb.OnKeyUpEvent.TakeValueFromName)
                                                    {
                                                        <div class="field-validation-wrapper">
                                                            <div class="field-controller">
                                                                <a class="fc-icon icon-copy" data-action='clone-rule' title="Copy"><i class="ri-file-copy-line"></i></a>
                                                                <a class="fc-icon icon-delete" data-action='remove-rule' title="Delete"><i class="ri-close-line"></i></a>
                                                                @*<a class="fc-icon icon-timer" data-action='short-selectoption'><i class="ri-timer-2-line"></i></a>*@
                                                            </div>
                                                            <div class="form-row">
                                                                <div class="col-lg-4">
                                                                    <input type="text" name="OnKeyUpEvent[TakeValueFromName][@index11]" data-name="OnKeyUpEvent[TakeValueFromName][{0}]" class="form-control" id="" placeholder="Value Field" value="@tb.OnKeyUpEvent.TakeValueFromName[index11]">

                                                                </div>
                                                                <div class="col-lg-4">
                                                                    <select type="text" name="OnKeyUpEvent[TakeValueFromElement][@index11]" data-name="OnKeyUpEvent[TakeValueFromElement][{0}]" class="custom-select" id="" placeholder="Text Field">
                                                                        <option value="">Please Select</option>
                                                                        @foreach (var item in formElements)
                                                                        {
                                                                            if (tb.OnKeyUpEvent.TakeValueFromElement[index11] != null)
                                                                            {
                                                                                if (item.Value == tb.OnKeyUpEvent.TakeValueFromElement[index11].ToString())
                                                                                {
                                                                                    <option value="@item.Value" selected>@item.Text</option>
                                                                                }
                                                                                else
                                                                                {
                                                                                    <option value="@item.Value">@item.Text</option>
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                <option value="@item.Value">@item.Text</option>
                                                                            }


                                                                        }
                                                                    </select>
                                                                </div>

                                                                <div class="col-lg-3">
                                                                    <select type="text" name="OnKeyUpEvent[TakeValueFromElementValidation][@index11]" data-name="OnKeyUpEvent[TakeValueFromElementValidation][{0}]" class="custom-select" id="">

                                                                        @if (tb.OnKeyUpEvent.TakeValueFromElementValidation != null && tb.OnKeyUpEvent.TakeValueFromElementValidation[index11] != null)
                                                                        {
                                                                            if ("False" == tb.OnKeyUpEvent.TakeValueFromElementValidation[index11].ToString())
                                                                            {
                                                                                <option value="False" selected>False</option>
                                                                            }
                                                                            else
                                                                            {
                                                                                <option value="False">False</option>
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            <option value="False">False</option>
                                                                        }

                                                                        @if (tb.OnKeyUpEvent.TakeValueFromElementValidation != null && tb.OnKeyUpEvent.TakeValueFromElementValidation[index11] != null)
                                                                        {
                                                                            if ("True" == tb.OnKeyUpEvent.TakeValueFromElementValidation[index11].ToString())
                                                                            {
                                                                                <option value="True" selected>True</option>
                                                                            }
                                                                            else
                                                                            {
                                                                                <option value="True">True</option>
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            <option value="True">True</option>
                                                                        }


                                                                    </select>
                                                                </div>
                                                            </div>

                                                        </div>
                                                        {
                                                            index11++;
                                                        }
                                                    }
                                                }
                                                else
                                                {
                                                    <div class="field-validation-wrapper">
                                                        <div class="field-controller">
                                                            <a class="fc-icon icon-copy" data-action='clone-rule' title="Copy"><i class="ri-file-copy-line"></i></a>
                                                            <a class="fc-icon icon-delete" data-action='remove-rule' title="Delete"><i class="ri-close-line"></i></a>
                                                            @*<a class="fc-icon icon-timer" data-action='short-selectoption'><i class="ri-timer-2-line"></i></a>*@
                                                        </div>
                                                        <div class="form-row">

                                                            <div class="col-lg-4">
                                                                <input type="text" name="OnKeyUpEvent[TakeValueFromName][0]" data-name="OnKeyUpEvent[TakeValueFromName][{0}]" class="form-control" id="" placeholder="Value Filed">
                                                            </div>
                                                            <div class="col-lg-4">
                                                                <select type="text" name="OnKeyUpEvent[TakeValueFromElement][0]" data-name="OnKeyUpEvent[TakeValueFromElement][{0}]" class="form-control" id="" placeholder="Text Field">
                                                                    <option value="">Please Select</option>
                                                                    @foreach (var item in formElements)
                                                                    {
                                                                        <option value="@item.Value">@item.Text</option>
                                                                    }
                                                                </select>
                                                            </div>

                                                            <div class="col-lg-3">
                                                                <select type="text" name="OnKeyUpEvent[TakeValueFromElementValidation][0]" data-name="OnKeyUpEvent[TakeValueFromElementValidation][{0}]" class="custom-select" id="">
                                                                    <option value="False">False</option>
                                                                    <option value="True">True</option>
                                                                </select>
                                                            </div>
                                                        </div>

                                                    </div>
                                                }
                                            }
                                            else
                                            {
                                                <div class="field-validation-wrapper">
                                                    <div class="field-controller">
                                                        <a class="fc-icon icon-copy" data-action='clone-rule' title="Copy"><i class="ri-file-copy-line"></i></a>
                                                        <a class="fc-icon icon-delete" data-action='remove-rule' title="Delete"><i class="ri-close-line"></i></a>
                                                        @*<a class="fc-icon icon-timer" data-action='short-selectoption'><i class="ri-timer-2-line"></i></a>*@
                                                    </div>
                                                    <div class="form-row">

                                                        <div class="col-lg-4">
                                                            <input type="text" name="OnKeyUpEvent[TakeValueFromName][0]" data-name="OnKeyUpEvent[TakeValueFromName][{0}]" class="form-control" id="" placeholder="Value Filed">
                                                        </div>
                                                        <div class="col-lg-4">
                                                            <select type="text" name="OnKeyUpEvent[TakeValueFromElement][0]" data-name="OnKeyUpEvent[TakeValueFromElement][{0}]" class="form-control" id="" placeholder="Text Field">
                                                                <option value="">Please Select</option>
                                                                @foreach (var item in formElements)
                                                                {
                                                                    <option value="@item.Value">@item.Text</option>
                                                                }
                                                            </select>
                                                        </div>
                                                        <div class="col-lg-3">
                                                            <select type="text" name="OnKeyUpEvent[TakeValueFromElementValidation][0]" data-name="OnKeyUpEvent[TakeValueFromElementValidation][{0}]" class="custom-select" id="">
                                                                <option value="False">False</option>
                                                                <option value="True">True</option>
                                                            </select>
                                                        </div>
                                                    </div>

                                                </div>
                                            }
                                        }
                                    </div>
                                </div>
                            </div>
                            <p>Choose the Elements from which you want to set value To </p>
                            <div class="validation-rule">
                                <div class="validation-rule-table">
                                    <div class="validation-rule-head select-option-head">
                                        <div class="form-row">
                                            <div class="col-lg-4">
                                                <label>Returned Field</label>
                                            </div>
                                            <div class="col-lg-4">
                                                <label>Select Element</label>
                                            </div>
                                            <div class="col-lg-4">
                                                <label>Trigger Value Change Event</label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="validation-rule-body validation_rule_wrapper">
                                        @{
                                            if (tb.OnKeyUpEvent != null)
                                            {
                                                if (tb.OnKeyUpEvent.SetValueToName != null && tb.OnKeyUpEvent.SetValueToName.Count > 0)
                                                {
                                                    int index11 = 0;
                                                    foreach (var so in tb.OnKeyUpEvent.SetValueToName)
                                                    {
                                                        <div class="field-validation-wrapper">


                                                            <div class="field-controller">
                                                                <a class="fc-icon icon-copy" data-action='clone-rule' title="Copy"><i class="ri-file-copy-line"></i></a>
                                                                <a class="fc-icon icon-delete" data-action='remove-rule' title="Delete"><i class="ri-close-line"></i></a>
                                                                @*<a class="fc-icon icon-timer" data-action='short-selectoption'><i class="ri-timer-2-line"></i></a>*@
                                                            </div>
                                                            <div class="form-row">
                                                                <div class="col-lg-4">
                                                                    <input type="text" name="OnKeyUpEvent[SetValueToName][@index11]" data-name="OnKeyUpEvent[SetValueToName][{0}]" class="form-control" id="" placeholder="Value Field" value="@tb.OnKeyUpEvent.SetValueToName[index11]">

                                                                </div>
                                                                <div class="col-lg-4">
                                                                    <select type="text" name="OnKeyUpEvent[SetValueToElement][@index11]" data-name="OnKeyUpEvent[SetValueToElement][{0}]" class="custom-select" id="" placeholder="Text Field">
                                                                        <option>Please Select</option>
                                                                        @foreach (var item in formElements)
                                                                        {
                                                                            if (tb.OnKeyUpEvent.SetValueToElement[index11] != null)
                                                                            {
                                                                                if (item.Value == tb.OnKeyUpEvent.SetValueToElement[index11].ToString())
                                                                                {
                                                                                    <option value="@item.Value" selected>@item.Text</option>
                                                                                }
                                                                                else
                                                                                {
                                                                                    <option value="@item.Value">@item.Text</option>
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                <option value="@item.Value">@item.Text</option>
                                                                            }


                                                                        }
                                                                    </select>
                                                                </div>
                                                                <div class="col-lg-3">
                                                                    <select type="text" name="OnKeyUpEvent[SetValueToEventTrigger][@index11]" data-name="OnKeyUpEvent[SetValueToEventTrigger][{0}]" class="custom-select" id="">

                                                                        @if (tb.OnKeyUpEvent.SetValueToEventTrigger != null && tb.OnKeyUpEvent.SetValueToEventTrigger[index11] != null)
                                                                        {
                                                                            if ("True" == tb.OnKeyUpEvent.SetValueToEventTrigger[index11].ToString())
                                                                            {
                                                                                <option value="True" selected>True</option>
                                                                            }
                                                                            else
                                                                            {
                                                                                <option value="True">True</option>
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            <option value="True">True</option>
                                                                        }

                                                                        @if (tb.OnKeyUpEvent.SetValueToEventTrigger != null && tb.OnKeyUpEvent.SetValueToEventTrigger[index11] != null)
                                                                        {
                                                                            if ("False" == tb.OnKeyUpEvent.SetValueToEventTrigger[index11].ToString())
                                                                            {
                                                                                <option value="False" selected>False</option>
                                                                            }
                                                                            else
                                                                            {
                                                                                <option value="False">False</option>
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            <option value="False">False</option>
                                                                        }


                                                                    </select>
                                                                </div>
                                                            </div>

                                                        </div>
                                                        {
                                                            index11++;
                                                        }
                                                    }

                                                }
                                                else
                                                {
                                                    <div class="field-validation-wrapper">
                                                        <div class="field-controller">
                                                            <a class="fc-icon icon-copy" data-action='clone-rule' title="Copy"><i class="ri-file-copy-line"></i></a>
                                                            <a class="fc-icon icon-delete" data-action='remove-rule' title="Delete"><i class="ri-close-line"></i></a>
                                                            @*<a class="fc-icon icon-timer" data-action='short-selectoption'><i class="ri-timer-2-line"></i></a>*@
                                                        </div>
                                                        <div class="form-row">

                                                            <div class="col-lg-4">
                                                                <input type="text" name="OnKeyUpEvent[SetValueToName][0]" data-name="OnKeyUpEvent[SetValueToName][{0}]" class="form-control" id="" placeholder="Value Filed">
                                                            </div>
                                                            <div class="col-lg-4">
                                                                <select type="text" name="OnKeyUpEvent[SetValueToElement][0]" data-name="OnKeyUpEvent[SetValueToElement][{0}]" class="custom-select" id="" placeholder="Text Field">
                                                                    <option>Please Select</option>
                                                                    @foreach (var item in formElements)
                                                                    {
                                                                        <option value="@item.Value">@item.Text</option>
                                                                    }
                                                                </select>
                                                            </div>
                                                            <div class="col-lg-3">
                                                                <select type="text" name="OnKeyUpEvent[SetValueToEventTrigger][0]" data-name="OnKeyUpEvent[SetValueToEventTrigger][{0}]" class="custom-select" id="">
                                                                    <option value="True">True</option>
                                                                    <option value="False">False</option>
                                                                </select>
                                                            </div>
                                                        </div>

                                                    </div>
                                                }
                                            }
                                            else
                                            {
                                                <div class="field-validation-wrapper">
                                                    <div class="field-controller">
                                                        <a class="fc-icon icon-copy" data-action='clone-rule' title="Copy"><i class="ri-file-copy-line"></i></a>
                                                        <a class="fc-icon icon-delete" data-action='remove-rule' title="Delete"><i class="ri-close-line"></i></a>
                                                        @*<a class="fc-icon icon-timer" data-action='short-selectoption'><i class="ri-timer-2-line"></i></a>*@
                                                    </div>
                                                    <div class="form-row">

                                                        <div class="col-lg-4">
                                                            <input type="text" name="OnClickEvent[SetValueToName][0]" data-name="OnClickEvent[SetValueToName][{0}]" class="form-control" id="" placeholder="Value Filed">
                                                        </div>
                                                        <div class="col-lg-4">
                                                            <select type="text" name="OnClickEvent[SetValueToElement][0]" data-name="OnClickEvent[SetValueToElement][{0}]" class="custom-select" id="" placeholder="Text Field">
                                                                <option>Please Select</option>
                                                                @foreach (var item in formElements)
                                                                {
                                                                    <option value="@item.Value">@item.Text</option>
                                                                }
                                                            </select>
                                                        </div>
                                                        <div class="col-lg-3">
                                                            <select type="text" name="OnKeyUpEvent[SetValueToEventTrigger][0]" data-name="OnKeyUpEvent[SetValueToEventTrigger][{0}]" class="custom-select" id="">
                                                                <option value="True">True</option>
                                                                <option value="False">False</option>
                                                            </select>
                                                        </div>
                                                    </div>

                                                </div>
                                            }
                                        }
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </section>
        </li>

        <li>
            <header>Currency Setting</header>
            <section>

                <div class="form-row">
                    @*<div class="form-group col-lg-4">
                            <label>Formatter</label>
                            <input type="text" class="form-control" @tb.GetName("BackendFormatter") value="@tb.BackendFormatter">
                        </div>*@
                    <div class="form-group col-lg-12">
                        <div class="switch-control">
                            <label for="numIsCurrency_@tb.ElementId" class="switch">
                                <input id="numIsCurrency_@tb.ElementId" class="switch__input" @tb.GetName("IsCurrency") type="checkbox" value="true" @tb.GetChecked(tb.IsCurrency)>
                                <span class="switch__state"></span>
                                <span class="switch__label">Set as Currency</span>
                            </label>
                        </div>
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-lg-4">
                        <label>Currency</label>
                        <select id="selectGroup" data-action="operator" name="CurrencyType" data-name="CurrencyType" value="@tb.CurrencyType" class="custom-select">
                            <option value="£" @(tb.CurrencyType=="£"?"selected":"")>£</option>
                            <option value="$" @(tb.CurrencyType=="$"?"selected":"")>$</option>
                        </select>
                    </div>
                    <div class="form-group col-lg-4">
                        <label>Currency Decimal Digit</label>
                        <select id="selectGroup" data-action="operator" name="DecimalDigit" data-name="DecimalDigit" value="@tb.DecimalDigit" class="custom-select">
                            <option value="0" @(tb.DecimalDigit=="0"?"selected":"")>0</option>
                            <option value="1" @(tb.DecimalDigit=="1"?"selected":"")>1</option>
                            <option value="2" @(tb.DecimalDigit=="2"?"selected":"")>2</option>
                            <option value="3" @(tb.DecimalDigit=="3"?"selected":"")>3</option>
                            <option value="4" @(tb.DecimalDigit=="4"?"selected":"")>4</option>
                            <option value="5" @(tb.DecimalDigit=="5"?"selected":"")>5</option>
                        </select>
                    </div>

                </div>
            </section>
        </li>
        <li>
            <header>Permission</header>
            <section>
                <div class="table-responsive">
                    <table class="table table-custom">
                        <thead>
                            <tr>
                                <th>Role Name</th>
                                <th>Write</th>
                                <th>Read</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{int index = 0;
                                foreach (var role in commonService.GetRoleList())
                                {
                                    var Roledata = tb?.Permissions?.Where(p => p.RoleId == role.Value).FirstOrDefault();
                                    if (Roledata != null)
                                    {

                                        <tr>
                                            <td>
                                                @role.Text
                                                <input class="form-control" type="hidden" name="Permissions[@index][RoleId]" value="@role.Value">
                                            </td>
                                            <td>
                                                <div class="custom-control custom-checkbox">
                                                    <input class="custom-control-input" name="Permissions[@index][Write]" type="checkbox" value="true" checked="@Roledata.Write" id="Permissions_@(index + "_Write_" + tb.ElementId)">
                                                    <label class="custom-control-label" for="Permissions_@(index + "_Write_" + tb.ElementId)"></label>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="custom-control custom-checkbox">
                                                    <input class="custom-control-input" name="Permissions[@index][Read]" type="checkbox" value="true" checked="@Roledata.Read" id="Permissions_@(index + "_Read_" + tb.ElementId)">
                                                    <label class="custom-control-label" for="Permissions_@(index + "_Read_" + tb.ElementId)"></label>
                                                </div>
                                            </td>
                                        </tr>

                                    }
                                    else
                                    {
                                        <tr>
                                            <td>
                                                @role.Text
                                                <input class="form-control" type="hidden" name="Permissions[@index][RoleId]" value="@role.Value">
                                            </td>

                                            <td>
                                                <div class="custom-control custom-checkbox">
                                                    <input class="custom-control-input" name="Permissions[@index][Write]" type="checkbox" value="true" checked="checked" id="Permissions_@(index + "_Write_" + tb.ElementId)">
                                                    <label class="custom-control-label" for="Permissions_@(index + "_Write_" + tb.ElementId)"></label>
                                                </div>
                                            </td>

                                            <td>
                                                <div class="custom-control custom-checkbox">
                                                    <input class="custom-control-input" name="Permissions[@index][Read]" type="checkbox" value="true" checked="checked" id="Permissions_@(index + "_Read_" + tb.ElementId)">
                                                    <label class="custom-control-label" for="Permissions_@(index + "_Read_" + tb.ElementId)"></label>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                    index++;
                                }
                            }
                        </tbody>

                    </table>
                </div>
            </section>
        </li>



        <li>
            <header>Target Options</header>
            <section>
                <div class="target_option_wrapper">
                    @*<div class="form-group col-lg-4">
                            <label>Target Name</label>
                            <input type="text" class="form-control" @tb.GetName("TargetName") value="@tb.TargetName">
                        </div>*@
                    @{

                        if (tb.TargetOptions != null && tb.TargetOptions.Count > 0)
                        {

                            foreach (var to in tb.TargetOptions)
                            {
                                <div class="field-validation-wrapper">
                                    <div class="field-controller">
                                        <a class="fc-icon icon-copy" data-action='clone-TargetingOption' title="Copy"><i class="ri-file-copy-line"></i></a>
                                        <a class="fc-icon icon-delete" data-action='remove-TargetingOption' title="Delete"><i class="ri-close-line"></i></a>
                                    </div>
                                    <div class="form-row">
                                        <div class="col-lg-3">
                                            <select name="TargetOptions[0][TargetId]" class="custom-select" data-name="TargetOptions[{0}][TargetId]">
                                                @{

                                                    <option value="0">Please Select</option>

                                                    if (formAllElements != null)
                                                    {
                                                        foreach (SelectListItem si in formAllElements)
                                                        {
                                                            <option selected="@(to.TargetId==si.Value)" value="@si.Value">@si.Text</option>
                                                        }
                                                    }

                                                }

                                            </select>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="field-validation-wrapper">
                                <div class="field-controller">
                                    <a class="fc-icon icon-copy" data-action='clone-TargetingOption' title="Copy"><i class="ri-file-copy-line"></i></a>
                                    <a class="fc-icon icon-delete" data-action='remove-TargetingOption' title="Delete"><i class="ri-close-line"></i></a>
                                </div>
                                <div class="form-row">
                                    
                                      
                                    <div class="col-lg-3">
                                        <select name="TargetOptions[0][TargetId]" class="custom-select" data-name="TargetOptions[{0}][TargetId]">
                                            @{

                                                <option value="0">Please Select</option>

                                                if (formAllElements != null)
                                                {
                                                    foreach (SelectListItem si in formAllElements)
                                                    {
                                                        <option value="@si.Value">@si.Text</option>
                                                    }
                                                }

                                            }

                                        </select>
                                    </div>
                                </div>
                            </div>
                        }
                    }


                </div>
            </section>
        </li>
        <li>
            <header>Validation Rule</header>
            <section>
                <div class="validation_rule_wrapper">
                    @{
                        int index1 = 0;
                        if (tb.Validations != null && tb.Validations.Count > 0)
                        {

                            foreach (var val in tb.Validations)
                            {
                                <div class="field-validation-wrapper">
                                    <div class="field-controller">
                                        <a class="fc-icon icon-copy" data-action='clone-rule' title="Copy"><i class="ri-file-copy-line"></i></a>
                                        <a class="fc-icon icon-delete" data-action='remove-rule' title="Delete"><i class="ri-close-line"></i></a>
                                    </div>
                                    <div class="form-row">
                                        <div class="col-auto">
                                            <!-- <label class="btn btn-sm btn-invalid">Invalid</label> -->
                                            <span class="badge badge-danger p-2">Invalid</span>
                                        </div>
                                        <div class="col-auto ">
                                            <label for="">if</label>
                                        </div>
                                        <div class="col-auto">
                                            <!-- <label class="muted-field"> @tb.BackendLabel</label> -->
                                            <input type="text" class="form-control" disabled value="@tb.BackendLabel">
                                        </div>
                                        <div class="col-lg-3">
                                            <select id="selectGroup" data-action="operator" name="Validations[@index1][FieldOperator]" data-name="Validations[{0}][FieldOperator]" class="custom-select">
                                                <option selected="@(val.FieldOperator=="required")" value="required">Required</option>
                                                <option selected="@(val.FieldOperator==">")" value=">">Greater Than</option>
                                                <option selected="@(val.FieldOperator=="=")" value="=">Equals To</option>
                                                <option selected="@(val.FieldOperator=="<")" value="<">Less Than</option>
                                                <option selected="@(val.FieldOperator=="between")" value="between">Between</option>
                                                <option selected="@(val.FieldOperator=="regex")" value="regex">Not Regex</option>
                                            </select>

                                        </div>
                                        <div class="col-lg-3" data-option="@val.ValidationValues?.FirstOrDefault()">
                                            @{
                                                if (val.FieldOperator == "required")
                                                {
                                                    <select class="custom-select" name="Validations[@index1][ValidationValues]">
                                                        @if (val.ValidationValues?.FirstOrDefault() == "true")
                                                        {
                                                            <option value="true" selected>True</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="true">True</option>
                                                        }
                                                        @if (val.ValidationValues?.FirstOrDefault() == "false")
                                                        {
                                                            <option value="false" selected>False</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="false">False</option>
                                                        }


                                                    </select>
                                                }
                                                else if (val.FieldOperator == "between")
                                                {
                                                    <input type="number" class="form-control" size="20" min="0" oninput="validity.valid||(value=value.replace(/\D+/g, ''))" value="@val.ValidationValues?.FirstOrDefault()" name="Validations[@index1][ValidationValues][0]"><input type="number" size="20" min="1" class="form-control" value="@val.ValidationValues?.LastOrDefault()" name="Validations[@index1][ValidationValues][1]">
                                                }
                                                else if (val.FieldOperator == "<")
                                                {
                                                    <input type="number" class="form-control" size="20" min="0" oninput="validity.valid||(value=value.replace(/\D+/g, ''))" value="@val.ValidationValues?.FirstOrDefault()" name="Validations[@index1][ValidationValues]">
                                                }
                                                else if (val.FieldOperator == ">")
                                                {
                                                    <input type="number" class="form-control" size="20" min="0" oninput="validity.valid||(value=value.replace(/\D+/g, ''))" value="@val.ValidationValues?.FirstOrDefault()" name="Validations[@index1][ValidationValues]">

                                                }
                                                else if (val.FieldOperator == "regex")
                                                {
                                                    <input type="text" class="form-control" value="@val.ValidationValues?.FirstOrDefault()" name="Validations[@index1][ValidationValues]">

                                                }
                                                else
                                                {

                                                    <input type="number" class="form-control" size="20" min="0" oninput="validity.valid||(value=value.replace(/\D+/g, ''))" value="@val.ValidationValues?.FirstOrDefault()" name="Validations[@index1][ValidationValues]">

                                                }
                                            }
                                        </div>

                                    </div>
                                    <div class="form-row">
                                        <div class="col-lg-12">
                                            <textarea class="form-control " name="Validations[@index1][ErrorMessage]" data-name="Validations[{0}][ErrorMessage]" rows="2" id="" placeholder="Please provide valid @tb.FrontendLabel, @tb.FrontendLabel must be greater than 15 Number.">@val.ErrorMessage</textarea>
                                        </div>
                                    </div>
                                </div>
                                {
                                    index1++;
                                }
                            }

                        }
                        else
                        {
                            <div class="field-validation-wrapper">
                                <div class="field-controller">
                                    <a class="fc-icon icon-copy" data-action='clone-rule' title="Copy"><i class="ri-file-copy-line"></i></a>
                                    <a class="fc-icon icon-delete" data-action='remove-rule' title="Delete"><i class="ri-close-line"></i></a>
                                </div>
                                <div class="form-row">
                                    <div class="col-auto">
                                        <!-- <label class="btn btn-sm btn-invalid">Invalid</label> -->
                                        <span class="badge badge-danger p-2">Invalid</span>
                                    </div>
                                    <div class="col-auto ">
                                        <label for="">if</label>
                                    </div>
                                    <div class="col-auto">
                                        <!-- <label class="muted-field"> @tb.BackendLabel</label> -->
                                        <input type="text" class="form-control" disabled value="@tb.BackendLabel">
                                    </div>
                                    <div class="col-lg-3">
                                        <select id="selectGroup" data-action="operator" name="Validations[@index1][FieldOperator]" data-name="Validations[{0}][FieldOperator]" class="custom-select">
                                            <option value="required" selected="selected">Required</option>
                                            <option value=">">Greater Than</option>
                                            <option value="=">Equals To</option>
                                            <option value="<">Less Than</option>
                                            <option value="between">Between</option>
                                            <option value="regex">Not Regex</option>
                                        </select>

                                    </div>

                                    <div class="col-lg-3" data-option="">
                                        <select class="custom-select" name="Validations[@index1][ValidationValues]">
                                            <option value="true">True</option>
                                            <option value="false" selected="selected">False</option>
                                        </select>
                                    </div>

                                </div>
                                <div class="form-row">
                                    <div class="col-lg-12">
                                        <textarea class="form-control " name="Validations[0][ErrorMessage]" data-name="Validations[{0}][ErrorMessage]" rows="2" id="" placeholder="Please provide valid @tb.FrontendLabel, @tb.FrontendLabel must be greater than 15 Number."></textarea>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
                <p class="small text-muted">This feature will let you add validation rule for this specific field.</p>

            </section>
        </li>
        <li>
            <header>Developer Options</header>
            <section>
                <div class="form-row">
                    <div class="form-group col-lg-6">
                        <label for="numTemplate_@tb.ElementId">Template</label>
                        <input type="text" class="form-control" id="numTemplate_@tb.ElementId" @tb.GetName("Template") value="@tb.Template">
                    </div>
                    <div class="form-group col-lg-6">
                        <label for="numWrapperTemplate_@tb.ElementId">Wrapper Template</label>
                        <input type="text" class="form-control" id="numWrapperTemplate_@tb.ElementId" @tb.GetName("WrapperTemplate") value="@tb.WrapperTemplate">
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-lg-6">
                        <label for="numCurrencyTemplate_@tb.ElementId">Currency Template</label>
                        <input id="numCurrencyTemplate_@tb.ElementId" type="text" class="form-control" @tb.GetName("CurrencyTemplate") value="@tb.CurrencyTemplate">
                    </div>
                    <div class="form-group col-lg-6">
                        <label for="numDefaultValue_@tb.ElementId">Default Value</label>
                        <input type="text" id="numDefaultValue_@tb.ElementId" class="form-control" @tb.GetName("DefaultValue") value="@tb.DefaultValue">
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-lg-6">
                        <label for="numRangeTemplate_@tb.ElementId">Range Template</label>
                        <input id="numRangeTemplate_@tb.ElementId" type="text" class="form-control" @tb.GetName("RangeTemplate") value="@tb.RangeTemplate" />
                    </div>
                </div>
                <div class="switch-control">
                    <label for="numVisibleinGrid_@tb.ElementId" class="switch">
                        <input type="checkbox" id="numVisibleinGrid_@tb.ElementId" @tb.GetName("VisibleinGrid") class="switch__input" @tb.GetChecked(tb.VisibleinGrid) value="True">
                        <span class="switch__state"></span>
                        <span class="switch__label">Visible in Grid</span>
                    </label>
                </div>
                <div class="form-row">
                    <div class="form-group col-lg-6">
                        <label for="numTableName_@tb.ElementId">Table Name</label>
                        <select value="@tb.TableName" id="numTableName_@tb.ElementId" class="tableMap custom-select"></select>
                        <input type="text" value="@tb.TableName" @tb.GetName("TableName") hidden>
                    </div>
                    <div class="form-group col-lg-6">
                        <label for="numFieldName_@tb.ElementId">Field Name</label>
                        <select value="@tb.FieldName" id="numFieldName_@tb.ElementId" class="fieldMap custom-select"></select>
                        <input type="text" class="form-control" value="@tb.FieldName" @tb.GetName("FieldName") hidden>
                    </div>
                </div>
            </section>
        </li>
    </ul>
</div>


<script>
    $(function () {
        displayNumberType();
        $("#numType_@tb.ElementId").on('change', function () {
            displayNumberType();
        });
    });

    function displayNumberType() {
         var numtypeValue = $("#numType_@tb.ElementId").val();
        if (numtypeValue == 1) {
            $(".range-type").attr("style", "display:block");
        }
        else {
            $(".range-type").attr("style", "display:none");
        }
    }
</script>

