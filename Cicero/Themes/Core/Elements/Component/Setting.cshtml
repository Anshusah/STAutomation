<!-- Hidden Fields : Start -->
@using Cicero.Service.Models.Core.Elements
@using Cicero.Service.Services
@model Cicero.Service.Models.Core.Elements.Component
@using Cicero.Service.Models
@inject ICommonService commonService


@{
    Component tb = Model as Component;
    var xx = tb;
}
<div class="modal-header flex-column">
    <h5 class="modal-title">Component Setting</h5>
    <p class="mb-0">This settings helps you to customize Component.</p>
</div>
<div class="status"></div>
<div class="modal-header">
    <ul class="fb-card">
        <li class="active">
            <header>Frontend Setting</header>
            <section>
                <div class="form-row">
                    <div class="form-group col-lg-4">
                        <label for="compFrontendId">Id</label>
                        <input type="text" class="form-control" id="compFrontendId" @tb.GetName("FrontendId") value="@tb.FrontendId">
                    </div>
                    <div class="form-group col-lg-4">
                        <label for="compFrontendClass">Class</label>
                        <input type="text" class="form-control" id="compFrontendClass" @tb.GetName("FrontendClass") value="@tb.FrontendClass">
                    </div>
                    <div class="form-group col-lg-4">
                        <label for="compFrontendLabel">Label</label>
                        <input type="text" class="form-control" id="compFrontendLabel" @tb.GetName("FrontendLabel") value="@tb.FrontendLabel">
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-lg-12">
                        <label for="compFrontendFormatter">Formatter</label>
                        <input type="text" class="form-control" id="compFrontendFormatter" @tb.GetName("FrontendFormatter") value="@tb.FrontendFormatter">
                    </div>
                </div>
                <div class="switch-control">
                    <label for="compFrontendVisible" class="switch">
                        <input class="switch__input" id="compFrontendVisible" @tb.GetName("FrontendVisible") type="checkbox" value="true" @tb.GetChecked(tb.FrontendVisible)>
                        <span class="switch__state"></span>
                        <span class="switch__label">Default visible</span>
                    </label>
                </div>
            </section>
        </li>
        <li>
            <header>Backend Setting</header>
            <section>
                <div class="form-row">
                    <div class="form-group col-lg-4">
                        <label for="compBackendId">Id</label>
                        <input type="text" class="form-control" id="compBackendId" @tb.GetName("BackendId") value="@tb.BackendId">
                    </div>
                    <div class="form-group col-lg-4">
                        <label for="compBackendClass">Class</label>
                        <input type="text" class="form-control" id="compBackendClass" @tb.GetName("BackendClass") value="@tb.BackendClass">
                    </div>
                    <div class="form-group col-lg-4">
                        <label for="compBackendLabel">Label</label>
                        <input type="text" class="form-control" id="compBackendLabel" @tb.GetName("BackendLabel") value="@tb.BackendLabel">
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-lg-12">
                        <label for="compBackendFormatter">Formatter</label>
                        <input type="text" class="form-control" id="compBackendFormatter" @tb.GetName("BackendFormatter") value="@tb.BackendFormatter">
                    </div>
                </div>
                <div class="switch-control">
                    <label for="compBackendVisible" class="switch">
                        <input class="switch__input" id="compBackendVisible" @tb.GetName("BackendVisible") type="checkbox" value="true" @tb.GetChecked(tb.BackendVisible)>
                        <span class="switch__state"></span>
                        <span class="switch__label">Default visible</span>
                    </label>
                </div>
            </section>
        </li>

        <li>
            <header>Telephone Number Setting</header>
            <section>
                <div class="switch-control">
                    <label for="compIsTelephoneNumber" class="switch">
                        <input class="switch__input" id="compIsTelephoneNumber" @tb.GetName("IsTelephoneNumber") type="checkbox" value="true" @tb.GetChecked(tb.IsTelephoneNumber)>
                        <span class="switch__state"></span>
                        <span class="switch__label">Set as Telephone Number</span>
                    </label>
                </div>

                <div class="form-row">
                    <div class="form-group col-lg-6">
                        <label for="compTelephoneNumberFormat">Select Telephone Format</label>
                        <select id="compTelephoneNumberFormat" data-action="operator" name="TelephoneNumberFormat" data-name="TelephoneNumberFormat" value="@tb.TelephoneNumberFormat" class="custom-select">
                            <option value="999 9999 9999">999 9999 9999</option>
                            <option value="(999)-9999-9999">(999)-9999-9999</option>
                        </select>
                    </div>

                </div>
            </section>
        </li>
        <li>
            <header>Permission</header>
            <section>
                <div class="table-responsive">
                    <table class="table table-custom">
                        <thead>
                            <tr>
                                <th>Role Name</th>
                                <th>Write</th>
                                <th>Read</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{int index = 0;
                                foreach (var role in commonService.GetRoleList())
                                {
                                    var Roledata = tb?.Permissions?.Where(p => p.RoleId == role.Value).FirstOrDefault();
                                    if (Roledata != null)
                                    {

                                        <tr>
                                            <td>
                                                @role.Text
                                                <input class="form-control" type="hidden" name="Permissions[@index][RoleId]" value="@role.Value">
                                            </td>
                                            <td>
                                                <div class="custom-control custom-checkbox">
                                                    <input class="custom-control-input" name="Permissions[@index][Write]" type="checkbox" value="true" checked="@Roledata.Write" id="Permissions[@index][Write]">
                                                    <label class="custom-control-label" for="Permissions[@index][Write]"></label>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="custom-control custom-checkbox">
                                                    <input class="custom-control-input" name="Permissions[@index][Read]" type="checkbox" value="true" checked="@Roledata.Read" id="Permissions[@index][Read]">
                                                    <label class="custom-control-label" for="Permissions[@index][Read]"></label>
                                                </div>
                                            </td>
                                        </tr>

                                    }
                                    else
                                    {
                                        <tr>
                                            <td>
                                                @role.Text
                                                <input class="form-control" type="hidden" name="Permissions[@index][RoleId]" value="@role.Value">
                                            </td>

                                            <td>
                                                <div class="custom-control custom-checkbox">
                                                    <input class="custom-control-input" name="Permissions[@index][Write]" type="checkbox" value="true" checked="checked" id="Permissions[@index][Write]">
                                                    <label class="custom-control-label" for="Permissions[@index][Write]"></label>
                                                </div>
                                            </td>

                                            <td>
                                                <div class="custom-control custom-checkbox">
                                                    <input class="custom-control-input" name="Permissions[@index][Read]" type="checkbox" value="true" checked="checked" id="Permissions[@index][Read]">
                                                    <label class="custom-control-label" for="Permissions[@index][Read]"></label>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                    index++;
                                }
                            }
                        </tbody>

                    </table>
                </div>
            </section>
        </li>
        <li>
            <header>Validation Rule</header>
            <section>
                <div class="validation_rule_wrapper">
                    @{
                        int index1 = 0;
                        if (tb.Validations != null && tb.Validations.Count > 0)
                        {

                            foreach (var val in tb.Validations)
                            {
                                <div class="field-validation-wrapper">
                                    <div class="field-controller">
                                        <a class="fc-icon icon-copy" data-action='clone-rule' title="Copy"><i class="ri-file-copy-line"></i></a>
                                        <a class="fc-icon icon-delete" data-action='remove-rule' title="Delete"><i class="ri-delete-bin-4-line"></i></a>
                                    </div>
                                    <div class="form-row">
                                        <div class="col-auto">
                                            <!-- <label class="btn btn-sm btn-invalid">Invalid</label> -->
                                            <span class="badge badge-danger p-2">Invalid</span>
                                        </div>
                                        <div class="col-auto ">
                                            <label for="">if</label>
                                        </div>
                                        <div class="col-auto">
                                            <!-- <label class="muted-field"> @tb.BackendLabel</label> -->
                                            <input type="text" class="form-control" id="" disabled value="@tb.BackendLabel">
                                        </div>
                                        <div class="col-lg-3">
                                            <select id="selectGroup" data-action="operator" name="Validations[@index1][FieldOperator]" data-name="Validations[{0}][FieldOperator]" class="custom-select">
                                                <option selected="@(val.FieldOperator=="required")" value="required">Required</option>
                                                <option selected="@(val.FieldOperator==">")" value=">">Greater Than</option>
                                                <option selected="@(val.FieldOperator=="=")" value="=">Equals To</option>
                                                <option selected="@(val.FieldOperator=="<")" value="<">Less Than</option>
                                                <option selected="@(val.FieldOperator=="between")" value="between">Between</option>
                                                <option selected="@(val.FieldOperator=="email")" value="email">Email</option>
                                            </select>

                                        </div>
                                        <div class="col-lg-3" data-option="@val.ValidationValues?.FirstOrDefault()">
                                            @{
                                                if (val.FieldOperator == "required")
                                                {
                                                    <select class="custom-select" name="Validations[@index1][ValidationValues]">
                                                        @if (val.ValidationValues?.FirstOrDefault() == "true")
                                                        {
                                                            <option value="true" selected>True</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="true">True</option>
                                                        }
                                                        @if (val.ValidationValues?.FirstOrDefault() == "false")
                                                        {
                                                            <option value="false" selected>False</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="false">False</option>
                                                        }


                                                    </select>
                                                }
                                                else if (val.FieldOperator == "between")
                                                {
                                                    <input type="number" class="form-control" size="20" min="0" oninput="validity.valid||(value=value.replace(/\D+/g, ''))" value="@val.ValidationValues?.FirstOrDefault()" name="Validations[@index1][ValidationValues][0]"><input type="number" size="20" min="1" class="form-control" value="@val.ValidationValues?.LastOrDefault()" name="Validations[@index1][ValidationValues][1]">
                                                }
                                                else if (val.FieldOperator == "<")
                                                {
                                                    <input type="number" class="form-control" size="20" min="2" oninput="validity.valid||(value=value.replace(/\D+/g, ''))" value="@val.ValidationValues?.FirstOrDefault()" name="Validations[@index1][ValidationValues]">
                                                }
                                                else if (val.FieldOperator == ">")
                                                {
                                                    <input type="number" class="form-control" size="20" min="0" oninput="validity.valid||(value=value.replace(/\D+/g, ''))" value="@val.ValidationValues?.FirstOrDefault()" name="Validations[@index1][ValidationValues]">

                                                }
                                                else if (val.FieldOperator == "email")
                                                {
                                                    <input type="number" style="display:none;" class="form-control" size="20" min="1" oninput="validity.valid||(value=value.replace(/\D+/g, ''))" value="@val.ValidationValues?.FirstOrDefault()" name="Validations[@index1][ValidationValues]">

                                                }
                                                else
                                                {

                                                    <input type="number" style="display:none;" class="form-control" size="20" min="1" oninput="validity.valid||(value=value.replace(/\D+/g, ''))" value="@val.ValidationValues?.FirstOrDefault()" name="Validations[@index1][ValidationValues]">

                                                }
                                            }
                                        </div>

                                    </div>
                                    <div class="form-row">
                                        <div class="col-lg-12 bordered">
                                            <textarea class="form-control " name="Validations[@index1][ErrorMessage]" data-name="Validations[{0}][ErrorMessage]" rows="2" id="" placeholder="Please provide valid @tb.FrontendLabel, @tb.FrontendLabel must be greater than 15 Number.">@val.ErrorMessage</textarea>
                                        </div>
                                    </div>
                                </div>
                                {
                                    index1++;
                                }
                            }

                        }
                        else
                        {
                            <div class="field-validation-wrapper">
                                <div class="field-controller">
                                    <a class="fc-icon icon-copy" data-action='clone-rule' title="Copy"><i class="ri-file-copy-line"></i></a>
                                    <a class="fc-icon icon-delete" data-action='remove-rule' title="Delete"><i class="ri-delete-bin-4-line"></i></a>
                                </div>
                                <div class="form-row">
                                    <div class="col-auto">
                                        <!-- <label class="btn btn-sm btn-invalid">Invalid</label> -->
                                        <span class="badge badge-danger p-2">Invalid</span>
                                    </div>
                                    <div class="col-auto ">
                                        <label for="">if</label>
                                    </div>
                                    <div class="col-auto">
                                        <!-- <label class="muted-field"> @tb.BackendLabel</label> -->
                                        <input type="text" class="form-control" id="" disabled value="@tb.BackendLabel">
                                    </div>
                                    <div class="col-lg-3">
                                        <select id="selectGroup" data-action="operator" name="Validations[@index1][FieldOperator]" data-name="Validations[{0}][FieldOperator]" class="custom-select">
                                            <option value="required" selected="selected">Required</option>
                                            <option value=">">Greater Than</option>
                                            <option value="=">Equals To</option>
                                            <option value="<">Less Than</option>
                                            <option value="between">Between</option>
                                            <option value="email">Email</option>
                                        </select>

                                    </div>

                                    <div class="col-lg-3" data-option="">
                                        <select class="custom-select" name="Validations[@index1][ValidationValues]">
                                            <option value="true">True</option>
                                            <option value="false" selected="selected">False</option>
                                        </select>
                                    </div>

                                </div>
                                <div class="form-row">
                                    <div class="col-lg-12">
                                        <textarea class="form-control" name="Validations[0][ErrorMessage]" data-name="Validations[{0}][ErrorMessage]" rows="2" id="" placeholder="Please provide valid @tb.FrontendLabel, @tb.FrontendLabel must be greater than 15 Number."></textarea>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
                <p class="small text-muted">This feature will let you add validation rule for this specific field.</p>

            </section>
        </li>
        <li>
            <header>Developer Options</header>
            <section>
                <div class="form-row">
                    <div class="form-group col-lg-6">
                        <label for="compTemplate">Template</label>
                        <input type="text" class="form-control" id="compTemplate" @tb.GetName("Template") value="@tb.Template">
                    </div>
                    <div class="form-group col-lg-6">
                        <label for="compWrapperTemplate">Wrapper Template</label>
                        <input type="text" class="form-control" id="compWrapperTemplate" @tb.GetName("WrapperTemplate") value="@tb.WrapperTemplate">
                    </div>
                </div>
                <div class="switch-control">
                    <label for="compVisibleinGrid" class="switch">
                        <input type="checkbox" id="compVisibleinGrid" @tb.GetName("VisibleinGrid") class="switch__input" @tb.GetChecked(tb.VisibleinGrid) value="True">
                        <span class="switch__state"></span>
                        <span class="switch__label">Visible in Grid</span>
                    </label>
                </div>
                <div class="form-row">
                    <div class="form-group col-lg-6">
                        <label for="compTableName">Table Name</label>
                        <select value="@tb.TableName" id="compTableName" class="tableMap custom-select"></select>
                        <input type="text" value="@tb.TableName" @tb.GetName("TableName") hidden>
                    </div>
                    <div class="form-group col-lg-6">
                        <label for="compFieldName">Field Name</label>
                        <select value="@tb.FieldName" id="compFieldName" class="fieldMap custom-select"></select>
                        <input type="text" class="form-control" value="@tb.FieldName" @tb.GetName("FieldName") hidden>
                    </div>
                </div>

            </section>
        </li>
        <li>
            <header>Automation Settings</header>
            <section>
                <p>Visible in automation?</p>
                <div class="switch-control">
                    <label for="compAutomationEnable" class="switch">
                        <input class="switch__input" id="compAutomationEnable" @tb.GetName("automationEnable") type="checkbox" value="true" @tb.GetChecked(tb.automationEnable)>
                        <span class="switch__state"></span>
                    </label>
                </div>
            </section>
        </li>
    </ul>
</div>


